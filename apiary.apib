FORMAT: 1A
HOST: https://restapidev.payplus.co.il/api/v1.0/

# PayPlus - API Documentation

PayPlus Rest API gives you the ability to perform various tasks with your PayPlus services as well as manage your account.

Current API version is v1.0. Please note, that we're constantly working to update and improve the API until we're satisfied that it reached full stability. Therefore, please expect possible changes to the API and do consult this guide occasionally to ensure that your code is in sync with any changes. Should there be any major change, our tech team will inform you ahead of time.

If you intend to work with the API, we recommend that you inform us by email. That way, we will be able to inform you upon of upcoming major changes. As previously stated, though, do consult with this guide frequently.

If you have any questions, please do not hesitate to contact us by email: tech@payplus.co.il. Please, try to describe your questions in detail so we can quickly identify your problem and provide assistance. 

## PayPlus REST API URL's
Our service provides two environments to work with: **Staging** or **Production**.

When interacting with the API, make sure to point your requests to the correct environment, with the correct credentials. Both URLs will be stated next to each function.

## Sandbox Credit Card Numbers

**SUCCESSFUL TRANSACTION:** 5326-1402-8077-9844 (EXP: 05/26)  CVV: 000

**REJECT TRANSACTION:** 5326-1402-0001-0120 (EXP: 05/26)  CVV: 000

# Validate Requests Received from PayPlus

### How it works
When you receive a data payload from PayPlus, it will include a header called 'hash' and header called 'user-agent'.

### Verify that the data came from PayPlus
Use your API secret key to verify that the data was sent by PayPlus.

Here is a sample of the Response:

```
{
"results": {
"status": "success",
"code": 0,
"description": "payment page link is been generated"
},
"data": {
"page_request_uid": "0e8789bf-9eaf-4a07-9c16-0a348a4fd5d9",
"payment_page_link": "http://localhost:8000/0e8789bf-9eaf-4a07-9c16-0a348a4fd5d9"
}
}
```

### And headers:
```
{
"hash": "yb4ViUaVO6OFdF9iyISKtCi+cXTvWm0+3e/sQkPsNS0=",
"user-agent": "PayPlus"
}
```

### Sample function (Node.JS) to verifying encrypted data:

```
resolvePayPlusHash = (response, secret_key) => {
if (!response) {
return false
}
if (response.headers['user-agent'] !== 'PayPlus') {
return false
}
const message = response.body && JSON.stringify(response.body);
if (!message) {
return false
}
const hash = response.headers['hash'];
if (!hash) {
return false
}
const genHash = crypto.createHmac("sha256", secret_key)
.update(message)
.digest("base64");
return genHash === hash;
}
```

This function is an example to check the validation of PayPlus response.

This part:

```
const genHash = crypto.createHmac("sha256", secret_key)
.update(message)
.digest("base64");
return genHash === hash;
```
is checking the encryption data.

# Environment URL's

| Environment   | URL           |
|:--------------|:--------------|
| Staging       | `https://restapidev.payplus.co.il/api/v1.0/` |
| Production    | `https://restapi.payplus.co.il/api/v1.0/` |

## Last RestAPI Update(s)
Last Date: 27/03/2023
| Date     | Route  | Section  | Description / Changes     |
|:--------------|:--------------|:--------------|:--------------|
| 20/04/2023    | /PaymentPages/generateLink | Callback response added new support of parameter | create_has will return hash_data in base64 decrypt customer data |
| 27/03/2023    | Callback added "secure3D" consistently | Added `null` | For transactions that are not 3D Secured |
| 22/03/2023    | Refund by Transaction UID & Refund by Credit Card | Added `initial_invoice` | Option to generate document for transaction |
| 16/03/2023    | Transaction Callback Response | Mapping Parameters | Add all values of possible card_foreign parameter |
| 13/03/2023    | /PaymentPages/ChargeMethods/ | New Route | Option to see available payment methods of a payment page |
| 07/02/2023    | /RecurringPayments/Update | Added `cvv` | CVV is mandatory when terminal is set as recurring payment in your clearing company |
| 07/02/2023    | /RecurringPayments/Add | Added `cvv` | CVV is mandatory when terminal is set as recurring payment in your clearing company |
| 07/02/2023    | /TransactionByDevice | Added minimize_app | Option to popup and minimize payplus app |
| 02/01/2023    | /RecurringPayments/CreditCardRenewal | Credit Card Renewal | Recurring sending email to renewal credit card
| 15/12/2022    | /PaymentPages/generateLink | Generate payment link response | Added qr code to response
| 07/12/2022    | Transaction Callback Response | Transactions | Added parameter identification_number to card_information in callback response
| 07/12/2022    | /Token/Renew | Tokens | Has been removed
| 30/11/2022    | Explaination of verifying data from PayPlus | Documentation Preview | Option to verify the encrypted data |
| 15/11/2022    | /PaymentPages/generateLink | payments_credit, payments_first_amount | Option to make credit transaction (If supported) and option to set first installment amount |
| 27/10/2022    | Coupons Routes | Added new coupons routes management | New Routes |
| 24/10/2022    | Successful Callback | Added brand_name of the PayPlus brand | New Parameter brand_name |
| 24/10/2022    | Transactions/Charge  | Add object "self_secure_3ds" | Send external 3D Secure provider object |
| 18/09/2022    | /TransactionByDevice | Added cashier_uid | New option to manage cashiers with devices |
| 11/08/2022    | /Cashiers/Add | Add new route to add cashiers | A |
| 10/08/2022    | /PaymentPages/IPN | New parameters: voucher_num, approval_num | Added new parameters to search transaction |
| 02/08/2022    | /PaymentPages/generateLink | New parameter: support_track2 | Added new parameter |
| 02/08/2022    | Reset Cashier Removal | Reset Cashier Removal | Added new function |


## Payment Methods
### Google Pay™

####Introduction
Google Pay™ is a digital card wallet provided by Google and a simple, secure payment experience allowing shoppers make purchases with major credit cards (such as Mastercard, Visa, American Express, Discover) saved to their Google Account, including ones from Google Play, YouTube, Chrome, or any Android device.

####Implementing Google Pay™ on your website
When shoppers use Google Pay™ on your website, they simply select an item(s) to purchase in using powerful PayPlus Hosted Payment Pages, your shoopers will be able to select Google Pay™ as their payment method, and complete the purcahse in few clicks.

To learn more about Google Pay™ in PayPlus hosted payment pages please go to <a href="https://www.payplus.co.il/google-pay" target="_blank">PayPlus Google Pay™</a> website.

####Benefits of Google Pay™
- **A better way to pay**: Faster and more secure way to pay on sites and in apps using payment methods saved to your customer Google Account.
- **Availability**: Google Pay is accepted in millions of places around the world. It's available on platforms such Android, iOS and desktop and can be used in multiple browsers such: Chrome, Firefox, and Safari.
- **Increased conversions**: Increasing conversions by giving shoppers a better, fast and secure way to pay.
- **Increased security**: Protects your payment information with multiple layers of security, including card network tokenization.

####Getting started
 Google Pay™ is fully integrated into the secured hosted payment pages of PayPlus and saving the needs to deal with codes from your side. all you have to do is open a PayPlus account and request Google Pay™ as your additional payment method and start to accept Google Pay™ in your PayPlus checkout payment page!
1. **Open Account in PayPlus**: Open a PayPlus account in few clicks by filling the <a href="https://www.payplus.co.il/signup?ref=api_gp" target="_blank">PayPlus Signup Form</a>
2. **Setup your PayPlus Account**: Our agents will contact you to setup and activated your account
3. **Request Google Pay™ as a Payment Method**: Now that you have operational PayPlus account, you can add Google Pay™ as a payment method in PayPlus secured payment pages in our *Settings -> Alternative Payment Methods* section.

####Supported merchant countries
Before you begin, review and accept Google’s <a href="https://payments.developers.google.com/terms/aup" target="_blank">Acceptable Use Policy</a> & <a href="https://payments.developers.google.com/terms/sellertos" target="_blank">Google Pay API Terms of Service</a>.

Contact PayPlus <a href="mailto:service@payplus.co.il" target="_blank">Support</a> to enable Google Pay™ acceptance for your PayPlus secured hosted checkout page.


## Customers [/Customers/Add]

### Add [POST]


+ Attributes ()
    + email: `moshe@domain.com` (string,required)
    + customer_name: `Moshe Cohen` (string) - Company Name
    + paying_vat: true (boolean) - Automatic VAT calculation on the customer invoice
    + vat_number: 123456789 (number) - Customer ID
    + customer_number: `465756` (string) - External customer number in other ERP or other system
    + notes: "" (string)
    + phone: `039666666` (string)
    + contacts (array)
        + (object)
            + full_name: `Moshe Cohen` (string) 
            + cell_phone: `054123456` (string)
            + contact_email: `moshecohen@example.com` (string)
            + contact_address: `Haim Weizman 58` (string)
            + contact_city: `Holon` (string)
            + contact_postal_code: `789465` (string)
            + contact_country_iso: `IL` (string)
            + job_position (enum)
                + `main-contact-person`
                + `management`
                + `technical-department`
                + `accounting-and-finance`
                + `legal-department`
                + `personnel-department`
                + `marketing-and-advertising-department`
                + `other`
    + business_address: `Haim Weizman 12` (string)
    + business_city: `Holon` (string)
    + business_postal_code: `123456` (string)
    + business_country_iso: `IL` (string)
            
+ Request (application/json)
    + Headers

            Authorization: {"api_key":"a5f514de-c8c8-262a-ac31-31d609f3550a","secret_key":"404b1fd6-9fc5-1533-a121-126fa6cc0c8f"}
            

    + Body

            {
            "customer_name": "Moshe cohen",
            "email": "moshe@example.com",
            "paying_vat": true,
            "vat_number": 123456789,
            "customer_number": 145789,
            "notes": "",
            "phone": "039666666",
            "contacts": [
                {
                    "full_name": "Moshe cohen",
                    "cell_phone": "",
                    "contact_email": "",
                    "contact_address": "Haim Weizman 58",
                    "contact_city": "Holon",
                    "contact_postal_code": "789465",
                    "contact_country_iso": "IL",
                    "job_position": ""
                }
            ],
            "business_address": "Haim Weizman 12",
            "business_city": "Holon",
            "business_postal_code": "432765",
            "business_country_iso": "IL",
            }


+ Response 200 
    

            {
                "results": {
                    "status": "success",
                    "code": 0,
                    "description": "operation has been success"
                },
                 "data": {
                    "customer_uid": "84aa6e4e-fe42-4d5f-b9cd-59dbc3817f10"
                }
            }


### Update [POST /Customers/Update/:{uid}]


+ Parameters
    + uid: `84aa6e4e-fe42-4d5f-b9cd-59dbc3817f10` (string,required) - Required Path variable -> customer uuid.

+ Attributes ()
    + email: `david@domain.com` (string,required)
    + customer_name: `David levi` (string)- Company Name
    + paying_vat: true (boolean)- Automatic VAT calculation on the customer invoice
    + vat_number: 123456789 (string) - Customer ID
    + customer_number: `537876` (string) - Internal customer number in the system
    + notes: `david@domain.com` (string)
    + phone: `039666666` (string)
    + contacts (array)
        + (object)
            + full_name: `Moshe Cohen` (string) 
            + cell_phone: `054123456` (string)
            + contact_email: `moshecohen@example.com` (string)
            + contact_address: `Haim Weizman 58` (string)
            + contact_city: `Holon` (string)
            + contact_postal_code: `789465` (string)
            + contact_country_iso: `IL` (string)
            + job_position (enum)
                + `main-contact-person`
                + `management`
                + `technical-department`
                + `accounting-and-finance`
                + `legal-department`
                + `personnel-department`
                + `marketing-and-advertising-department`
                + `other`
    + business_address: `Haim Weizman 51` (string)
    + business_city: `Holon` (string)
    + business_postal_code: `123456` (string)
    + business_country_iso: `IL` (string)
                
+ Request (application/json)

    + Headers

            Authorization: {"api_key":"a5f514de-c8c8-262a-ac31-31d609f3550a","secret_key":"404b1fd6-9fc5-1533-a121-126fa6cc0c8f"}
            
    + Body

            {
                "customer_name": "Moshe cohen",
                "email": "moshe@example.com",
                "paying_vat": true,
                "vat_number": 123456789,
                "customer_number": 145789,
                "notes": "",
                "phone": "039666666",
                "contacts": [
                    {
                        "full_name": "Moshe cohen",
                        "cell_phone": "",
                        "contact_email": "",
                        "contact_address": "Haim Weizman 58",
                        "contact_city": "Holon",
                        "contact_postal_code": "789465",
                        "contact_country_iso": "IL",
                        "job_position": ""
                    }
                ],
                "business_address": "Haim Weizman 12",
                "business_city": "Holon",
                "business_postal_code": "432765",
                "business_country_iso": "IL",
            }
        
+ Response 200 
    

            {
                "result": {
                    "status": "success",
                    "code": 0,
                    "description": "operation has been success"
                },
                 "data": {
                         "customer_uid": "84aa6e4e-fe42-4d5f-b9cd-59dbc3817f10"

                    }
            }
            
### View [GET /Customers/View/?{vat_number}?{uuid}?{email}?{skip}?{take} ]
 

+ Parameters
    + vat_number: 123456789 (string,optional) - Optional query variable - Customer ID.
    + uuid: `84aa6e4e-fe42-4d5f-b9cd-59dbc3817f10` (string,optional) - Optional query variable -> customer uuid .
    + email: `david@domain.com` (string,optional) - Optional query variable.
    + skip: 0 (string,optional) - Optional query variable , From where you want to start take records.in this example you start from the first record
    + take: 5 (string,optional) -Optional query variable , required if skip have some value. This means that you want take 5 records.

   
            
+ Request (application/json)

    + Headers

            Authorization: {"api_key":"a5f514de-c8c8-262a-ac31-31d609f3550a","secret_key":"404b1fd6-9fc5-1533-a121-126fa6cc0c8f"}


            
+ Response 200 
    

            [
                {
                    "company_uid": "652aea4d-3da1-4238-8a5e-012e1481b5d5",
                    "customer_name": "Yohan Paris",
                    "customer_uid": "3107d06f-2364-402b-8c42-d2c10a4f9f11",
                    "vat_number": "033882288",
                    "customer_number": "000001",
                    "notes": null,
                    "full_name": null,
                    "phone": "0541341123",
                    "cell_phone": null,
                    "email": "moshe@example.com",
                    "contact_address": null,
                    "contact_city": null,
                    "contact_postal_code": null,
                    "contact_country_iso": null,
                    "business_address": "26 rue test",
                    "business_city": "Paris",
                    "business_postal_code": "75017",
                    "business_country_iso": "FR",
                    "uid": "3107d06f-2364-402b-8c42-d2c10a4f9f11",
                    "paying_vat": true
                }
            ]


## Banks [/Banks/CreateCustomerBankAccount]

### Add [POST /Banks/CreateCustomerBankAccount]

+ Attributes ()
    + customer_uid: `3107d06f-2364-402b-8c42-d2c10a4f9f11` (string,required) -Customer UID in order to add the bank to this customer
    + bank_code:  12 (number,required) -Bank code based on the banks codes dictionary
    + branch_code: 539 (number,required)-Bank Code based on the banks codes dictionary
    + account_number: 55220 (number,required) -Customer account number
    + account_name: `account test` (string,required) -Customer account name as registered in the bank

+ Request (application/json)

    + Headers

            Authorization: {"api_key":"a5f514de-c8c8-262a-ac31-31d609f3550a","secret_key":"404b1fd6-9fc5-1533-a121-126fa6cc0c8f"}

    + Body

            {
              "customer_uid": "3107d06f-2364-402b-8c42-d2c10a4f9f11",
              "bank_code": 12,
              "branch_code": 539,
              "account_number": 552200,
              "account_name": "account test"
            }

    
+ Response 200 
    
        {
          "results": {
            "status": "success",
            "code": 0,
            "description": "operation has been success"
          },
          "data": {
            "uid": "a2add155-dcab-4f65-a162-c21a1555d128",
            "customer_uid": "3107d06f-2364-402b-8c42-d2c10a4f9f11",
            "account_name": "בדיקה",
            "account_number": 123456789,
            "branch_code": 83
            "bank_code":13
          }
        }


        
### Update [POST /Banks/UpdateCustomerBankAccount/:{uid} ]

+ Parameters 
    + uid: `e67d7991-6b13-44de-94ff-95c9ca55be84` (string,required) - Required Path variable -> category uid.
            
+ Attributes ()
    + bank_code:  12 (number,required) -Bank code based on the banks codes dictionary
    + branch_code: 539 (number,required)-Bank Code based on the banks codes dictionary
    + account_number: 55220 (number,required) -Customer account number
    + account_name: `account test` (string,required) -Customer account name as registered in the bank

+ Request (application/json)

    + Headers

            Authorization: {"api_key":"a5f514de-c8c8-262a-ac31-31d609f3550a","secret_key":"404b1fd6-9fc5-1533-a121-126fa6cc0c8f"}

    + Body

            {
              "bank_code": 12,
              "branch_code": 539,
              "account_number": 552200,
              "account_name": "account test"
            }

    
+ Response 200 
    
        {
          "results": {
            "status": "success",
            "code": 0,
            "description": "operation has been success"
          },
          "data": {
            "uid": "a2add155-dcab-4f65-a162-c21a1555d128",
            "customer_uid": "3107d06f-2364-402b-8c42-d2c10a4f9f11",
            "account_name": "בדיקה",
            "account_number": 123456789,
            "branch_code": 83
            "bank_code":13
          }
        }


### Remove [POST /Banks/RemoveCustomerBankAccount/:{bank_account_uid}]
            
+ Parameters 
    + bank_account_uid: `e1396310-e3f8-461f-b80a-55b199211359` (string,required) - Bank Account UID.
    

+ Request (application/json)

    + Headers

            Authorization: {"api_key":"a5f514de-c8c8-262a-ac31-31d609f3550a","secret_key":"404b1fd6-9fc5-1533-a121-126fa6cc0c8f"}

    
+ Response 200 
    
        {
          "results": {
            "status": "success",
            "code": 0,
            "description": "operation has been success"
          },
          "data": {
            "card_uid": "a2add155-dcab-4f65-a162-c21a1555d128"
          }
        }
        


### View [GET /Banks/CustomerBankAccounts/?{customer_uid}]

+ Parameters 
    + customer_uid: 50 (number,optional) - Customer UID
    

+ Request (application/json)

    + Headers

            Authorization: {"api_key":"a5f514de-c8c8-262a-ac31-31d609f3550a","secret_key":"404b1fd6-9fc5-1533-a121-126fa6cc0c8f"}
    
+ Response 200 
    
        {
          "results": {
            "status": "success",
            "code": 0,
            "description": "operation has been success"
          },
          "data": [
           {
              "bank": "13001-בנק אגוד לישראל בע\"מ (13)",
              "bank_code": 13,
              "branch": "מרכז הכרמל (83)",
              "branch_code": 83,
              "account_name": "בדיקה",
              "account_number": "123456789",
              "customer_uid": "6a769c24-7875-4fe0-8c36-32c65cefd639",
              "uid": "a2add155-dcab-4f65-a162-c21a1555d128"
            }
          ]
        }

### Company Bank Accounts [GET /Banks/CompanyBankAccounts]

+ Request (application/json)

    + Headers

            Authorization: {"api_key":"a5f514de-c8c8-262a-ac31-31d609f3550a","secret_key":"404b1fd6-9fc5-1533-a121-126fa6cc0c8f"}
    
+ Response 200 
    
        {
          "results": {
            "status": "success",
            "code": 0,
            "description": "operation has been success"
          },
          "data": [
           {
              "bank": "בנק אגוד לישראל בע\"מ (13)",
              "bank_code": 13,
              "branch": "מרכז הכרמל (83)",
              "branch_code": 83,
              "account_name": "בדיקה",
              "account_number": "123456789",
              "masav_code": "12345678",
              "uid": "b1b3f508-7e53-409f-a79c-99db0672bccb"
            }
          ]
        }


## Products Categories [/Categories/Add]

### Add [POST /Categories/Add ]

+ Attributes ()
    + name: `Appliances` (string,required)
    + valid:  true (boolean,required) -Affects category status

+ Request (application/json)

    + Headers

            Authorization: {"api_key":"a5f514de-c8c8-262a-ac31-31d609f3550a","secret_key":"404b1fd6-9fc5-1533-a121-126fa6cc0c8f"}

    + Body

            {
              "name": "Appliances",
              "valid": true  
            }

    
+ Response 200 
    
        {
            "result": {
                "status": "success",
                "code": 0,
                "description": "operation has been success"
            },
            "data": {
                "category_uid": "e1396310-e3f8-461f-b80a-55b199211359",
            }
        }


        
### Update [POST /Categories/Update/:{uid} ]

+ Parameters 
    + uid: `e67d7991-6b13-44de-94ff-95c9ca55be84` (string,required) - Required Path variable -> category uid.
            
+ Attributes ()
    + name: `Appliances` (string,required)
    + valid: false (boolean,required) -Affects category status

+ Request (application/json)

    + Headers

            Authorization: {"api_key":"a5f514de-c8c8-262a-ac31-31d609f3550a","secret_key":"404b1fd6-9fc5-1533-a121-126fa6cc0c8f"}

    + Body

            {
              "name": "Appliances",
              "valid": false,
            }

    
+ Response 200 
    
        {
            "result": {
                "status": "success",
                "code": 0,
                "description": "operation has been success"
            },
            "data": {
                "category_uid": "e1396310-e3f8-461f-b80a-55b199211359",
            }
        }
        
        

### View [GET /Categories/View/?{uid}]

+ Parameters 
    + uid: 50 (number,optional) - Optional Query variable -> BigInt.
    

+ Request (application/json)

    + Headers

            Authorization: {"api_key":"a5f514de-c8c8-262a-ac31-31d609f3550a","secret_key":"404b1fd6-9fc5-1533-a121-126fa6cc0c8f"}
    
+ Response 200 
    
        [
            {
                "id": "1",
                "uuid": "e67d7991-6b13-44de-94ff-95c9ca55be84",
                "name": "מוצרים כללים",
                "parent_category_id": null,
                "valid": true,
                "company_id": 1,
                "created_at": "2020-11-24T13:39:53.207Z",
                "updated_at": "2020-11-24T13:39:56.375Z",
                "deleted_at": null,
                "subCategories": []
            }
        ]
        



## Products [/Products/Add]

### Add [POST]
            
+ Attributes ()
    + category_uid: `5e443e90-d0d8-47bf-8362-85d6c3ac4763` (string,required)
    + name: `TV` (string,required)
    + price: 1500.50 (number,required)-Selling price
    + currency_code: `ILS` (string,required)
    + vat_type: 1 (number,required)- 0-'vat included' OR 1-'vat not included' OR 2- 'exempt vat'
    + valid: true (boolean)-Affects product status
    + barcode: `12345689` (string)
    + value: 20.20 (number)-Cost Price
    + description: `Smart TV` (string)
    + fixed_amount_discount: 10.10 (number)
    + percentage_discount: 10.10 (number)
    + guide_document_url: `https://www.someguidelink.com/" (string,optional)-Mostly used for invoies to send manual docmentation of a product when customer buying product

+ Request (application/json)

    + Headers

            Authorization: {"api_key":"a5f514de-c8c8-262a-ac31-31d609f3550a","secret_key":"404b1fd6-9fc5-1533-a121-126fa6cc0c8f"}

    + Body

            {
              
              "category_uid": "e67d7991-6b13-44de-94ff-95c9ca55be84",
              "name": "TV",
              "price": 1500.50,
              "currency_code": "ILS",
              "vat_type": 1,
              "valid": true,
              "barcode": "123456789",
              "value": 20.20,
              "description": "Smart TV",
              "fixed_amount_discount": 10.10,
              "percentage_discount": 10.10,
            }
            
+ Response 200 
    

        {
            "result": {
                "status": "success",
                "code": 0,
                "description": "operation has been success"
            },
            "data": {
                "product_uid": "e1396310-e3f8-461f-b80a-55b199211359",
            }
        }
        
### Update [POST /Products/Update/:{uid}]
            
+ Parameters
    + uid: `84aa6e4e-fe42-4d5f-b9cd-59dbc3817f10` (string,required) - Required Path variable -> product uid.
            
+ Attributes ()
    + category_uid: `5e443e90-d0d8-47bf-8362-85d6c3ac4763` (string,required)
    + name: `TV` (string,required)
    + valid: false (boolean,optional)--Affects product status
    + price: 1500.50 (number,required)-Selling price
    + currency_code: `ILS` (string,required)
    + vat_type: 1 (number,required)- 0-'vat included' OR 1-'vat not included' OR 2- 'exempt vat'
    + barcode: `2345673214` (string)
    + value: 20.20 (number)-Cost price
    + description: `Smart TV` (string)
    + fixed_amount_discount: 10.10 (number)
    + percentage_discount: 10.10 (number)
    + guide_document_url: `https://www.someguidelink.com/" (string,optional)-Mostly used for invoies to send manual docmentation of a product when customer buying product

+ Request (application/json)

    + Headers

            Authorization: {"api_key":"a5f514de-c8c8-262a-ac31-31d609f3550a","secret_key":"404b1fd6-9fc5-1533-a121-126fa6cc0c8f"}

    + Body

            {
              
              "category_uid": "e67d7991-6b13-44de-94ff-95c9ca55be84",
              "name": "TV",
              "valid": false,
              "price": 1500.50,
              "currency_code": "ILS",
              "vat_type": 1,
              "barcode": "2345673214",
              "value": 20.20,
              "description": "Smart TV",
              "fixed_amount_discount": 10.10,
              "percentage_discount": 10.10
            }
            
+ Response 200 
    

        {
            "result": {
                "status": "success",
                "code": 0,
                "description": "operation has been success"
            },
            "data": {
                "product_uid": "e1396310-e3f8-461f-b80a-55b199211359",
            }
        }
        
        

### View [GET /Products/View/?{currency_code}?{uid}?{barcode}]

+ Parameters 
    + barcode: `88904788` (string,optional) - Optional: Query variable, View products by Barcode.
    + currency_code: `ILS` (string,optional) - Optional: Query variable, View all products with the same currency code.
    + uid: `e443e90-d0d8-47bf-8362-85d6c3ac4763` (string,optional) - Optional: Query variable -> product uid.

+ Request (application/json)

    + Headers

            Authorization: {"api_key":"a5f514de-c8c8-262a-ac31-31d609f3550a","secret_key":"404b1fd6-9fc5-1533-a121-126fa6cc0c8f"}

+ Response 200 
    
        [
             {
                "uuid": "5e443e90-d0d8-47bf-8362-85d6c3ac4763",
                "name": "אופנוע KTM",
                "barcode": "45461",
                "value": 500,
                "price": 780,
                "category_uid": "844bef64-fd4e-4d6f-a8c5-172f14ea5d75",
                "category_name": "אופנועים",
                "currency_code": "ILS",
                "description": "אופנוע קטלני של נועה",
                "image_url": null,
                "fixed_amount_discount": 10,
                "percentage_discount": 10,
                "valid": true,
                "vat_type": "vat-type-included",
                "guide_document_url": "https://www.someguidelink.com/"
            },
            {
                "uuid": "3fa0bf49-0c31-4a4b-af83-50f22ef4e864",
                "name": "סדנת בישול למתקדמים",
                "barcode": "45465465",
                "value": 180,
                "price": 100,
                "category_uid": "e67d7991-6b13-44de-94ff-95c9ca55be84",
                "category_name": "מוצרים כללים",
                "currency_code": "ILS",
                "description": null,
                "image_url": null,
                "fixed_amount_discount": 12,
                "percentage_discount": 12,
                "valid": true,
                "vat_type": "vat-type-included",
                "guide_document_url": "https://www.someguidelink.com/"
            }

        ]
        



        
## Tokens [/Token/Add]

### Add [POST]

+ Attributes 
    + terminal_uid: `e1396310-e3f8-461f-b80a-55b199211359` (string,required)
    + customer_uid: `e1396310-e3f8-461f-b80a-55b199211359` (string,required)
    + credit_card_number: `5326120380000218` (string,required)
    + card_date_mmyy: `01/24` (string,required) - 01=month , 24=year
    + name: `name` (string,optional) - card nick name
    + identification_number: nullable (string, optional) - Store card holder identification number
    + previous_uid: `153cf0ac-25cd-4cc3-b657-3e39e0aada51` (string,optional) - In case you would like to copy other UID, if not exist in PayPlus systems we will save this parameter, otherwise, we will create a new one

+ Request (application/json)

    + Headers

            Authorization: {"api_key":"a5f514de-c8c8-262a-ac31-31d609f3550a","secret_key":"404b1fd6-9fc5-1533-a121-126fa6cc0c8f"}

    + Body

            {
              "terminal_uid": "e67d7991-6b13-44de-94ff-95c9ca55be84",
              "customer_uid": "e67d7991-6b13-44de-94ff-95c9ca55be84",
              "credit_card_number": "5326120380000218",
              "card_date_mmyy": "01/24",
              "identification_number": "266348226",
              "name" : "job card",
              "previous_uid" : "153cf0ac-25cd-4cc3-b657-3e39e0aada51"
            }
    
+ Response 200 
    
        {
            "result": {
                "status": "success",
                "code": 0,
                "description": "operation has been success"
            },
            "data": {
                "card_uid": "df636855-1a04-4f24-90d4-a946df5ccf3b7890",
             }
        }
        

### Remove [POST /Token/Remove/:{uid}]
            
+ Parameters 
    + uid: `e1396310-e3f8-461f-b80a-55b199211359` (string,required) - Required Path variable -> card token.
    

+ Request (application/json)

    + Headers

            Authorization: {"api_key":"a5f514de-c8c8-262a-ac31-31d609f3550a","secret_key":"404b1fd6-9fc5-1533-a121-126fa6cc0c8f"}

    
+ Response 200 
    
        {
            "result": {
                "status": "success",
                "code": 0,
                "description": "operation has been success"
            },
            "data": {}
        }
        

### Update [POST /Token/Update/:{uid}]
            
+ Parameters 
    + uid: `e1396310-e3f8-461f-b80a-55b199211359` (string,required) - Required Path variable -> card token.

+ Attributes 
    + terminal_uid: `e1396310-e3f8-461f-b80a-55b199211359` (string,required)
    + credit_card_number: `0218` (string,optional)- You can leave this parameter empty to update just the expiry date.
    + card_date_mmyy: `01/24` (string,required)- 01=month , 24=year
    + name:`name` (string,optional) - card nick name
    + identification_number: nullable (string, optional) - Store card holder identification number

+ Request (application/json)

    + Headers

            Authorization: {"api_key":"a5f514de-c8c8-262a-ac31-31d609f3550a","secret_key":"404b1fd6-9fc5-1533-a121-126fa6cc0c8f"}

    + Body

            {
              
              "terminal_uid": "e67d7991-6b13-44de-94ff-95c9ca55be84",
              "credit_card_number": "5326120380000218",
              "card_date_mmyy": "01/24",
              "name" : "job card"

    
+ Response 200 
    
        {
            "result": {
                "status": "success",
                "code": 0,
                "description": "operation has been success"
            },
            "data": {
                 "card_uid": "df636855-1a04-4f24-90d4-a946df5ccf3b7890",
             }
        }
        
### Check [GET /Token/Check/:{uid}]
You may create your own question using this action.
This action takes a JSON payload as part of the request.
Response then return specific header and body.

+ Parameters
    + uid: `e1396310-e3f8-461f-b80a-55b199211359` (string,required) - Required Path variable -> Card Token

+ Request (application/json)

    + Headers

            Authorization: {"api_key":"a5f514de-c8c8-262a-ac31-31d609f3550a","secret_key":"404b1fd6-9fc5-1533-a121-126fa6cc0c8f"}

    
+ Response 200 
    
        {
            "results": {
                "status": "success",
                "code": 0,
                "description": "operation has been success"
            },
            "data": {
            "token_uid": "e1396310-e3f8-461f-b80a-55b199211359",
            "customer_uid": "03a5734e-668a-444f-beef-a9376d4d967e",
            "four_digits": "1234",
            "expiry_month": "01",
            "expiry_year": "21",
            "brand_id": 10,
            "issuer_id": 1,
            "brand_name": "amex",
            "issuer_name": "isracard"
            },
        }
        


### View [GET /Token/View/:{uid}?{mask}]

+ Parameters 
    + uid: `e1396310-e3f8-461f-b80a-55b199211359` (string,required) - Required Path variable -> Card Token
    + mask: false (boolean,optional) - Hide or show full card numbers or mask the card number with 4 last digits

+ Request (application/json)

    + Headers

            Authorization: {"api_key":"a5f514de-c8c8-262a-ac31-31d609f3550a","secret_key":"404b1fd6-9fc5-1533-a121-126fa6cc0c8f"}

    
+ Response 200 
    
        {
            "results": {
                "status": "success",
                "code": 0,
                "description": "operation has been success"
            },
            "data": {
                    "customer_uid": "e1396310-e3f8-461f-b80a-33b299211351",
                    "decryptCard": "4580101900049590",
                    "ExpMM": "11",
                    "ExpYY": "21",
                    "name": "name or nickname",
                    "identification_number": "266348226"
                },
        }
        

### List [POST /Token/List ]
            
+ Attributes 
    + terminal_uid: `e1396310-e3f8-461f-b80a-55b199211359` (string,required)
    + customer_uid: `e1396310-e3f8-461f-b80a-55b199211359` (string,required)
    + filter (object,optional)
        + name:`David` (string,optional)

+ Request (application/json)

    + Headers

            Authorization: {"api_key":"a5f514de-c8c8-262a-ac31-31d609f3550a","secret_key":"404b1fd6-9fc5-1533-a121-126fa6cc0c8f"}

    + Body

            {
              
              "terminal_uid": "e1396310-e3f8-461f-b80a-55b199211359",
              "customer_uid": "e1396310-e3f8-461f-b80a-55b199211359"


+ Response 200 
    
        {
            "results": {
            "status": "success",
            "code": 0,
            "description": "cards list"
            },
            "data": [
            {
                "card_date_mmyy": "0424",
                "last_4_digits": "1234",
                "token": "78623420-706e-46a0-bb2b-95c5605325051812",
                "customer_uid": "03a5734e-668a-444f-beef-a9376d4d922e",
                "name": null
                }
                ]
            }
        

## Recurring Payments [/RecurringPayments/Add]

### Add [POST]


+ Attributes 
    + terminal_uid: `e1396310-e3f8-461f-b80a-55b199211359` (string,required) 
    + customer_uid: `e1396310-e3f8-461f-b80a-55b199211359` (string,required)
    + card_token: `e1396310-e3f8-461f-b80a-55b199211359` (string,required) - This field is not required if it's bank recurring order
    + bank_account_uid: `e1396310-e3f8-461f-b80a-55b199211359` (string,optional) - Customer bank account uid in order to charge his account
    + company_bank_account_uid: `e1396310-e3f8-461f-b80a-55b199211359` (string,optional) - In case this is bank masav order, this field is required
    + cashier_uid: `e1396310-e3f8-461f-b80a-55b199211359` (string,required)
    + currency_code: `ILS` (string,required)
    + instant_first_payment: false (boolean,required)
    + recurring_type: 1 (number,required)- 0-daily OR 1-weekly OR 2-monthly
    + recurring_range: 1 (number,required)
    + number_of_charges: 3 (number,required)- If need unlimited charges - number of charges need to be 0
    + start_date: `2020-12-16` (string,required)-When the recurring charges will start
    + end_date: `2028-01-16` (string,optional)-When the recurring will stop, in case the recurring is unlimited.
    + items (array,required) - Array of objects
        + (object)
            + product_uid:`de11bca8-416e-4b47-9e5a-0040e21b0b3f` (string,required)
            + quantity:1 (number,required)-Quantity of billable products
            + price:100 (number,required)-Quantity of billable products
            + discount_type:"amount" (string,optional)-'percentage' OR 'amount'
            + discount_value:10 (number,optional) - Required if discount type have value
            + product_invoice_extra_details: "some text" (string,optional)
    + one_time_items (array,optional) - Array of objects
        + (object)
            + product_uid:`ba4c68a6-0e26-4bc7-b26c-6712d7761c3a` (string,required)
            + quantity:1 (number,required)-Quantity of billable products
            + price:150 (number,required)-Quantity of billable products
            + discount_type:"amount" (string,optional)-'percentage' OR 'amount'
            + discount_value:10 (number,optional) - Required if discount type have value
            + product_invoice_extra_details: "some text" (string,optional)
    + customer_failure_email: false (boolean,optional)- Send email if failure on charge
    + successful_invoice: false (boolean,optional) - Print invoice if charge success
    + send_customer_success_email: false (boolean,optional)
    + send_customer_success_sms: false (boolean,optional) - If SMS package purchased the system will notify your customer by SMS
    + customer_failure_sms: false (boolean,optional) - If SMS package purchased the system will notify your customer by SMS
    + one_time_charge_date: `2020-12-16` (string,optional)
    + extra_info: `Charging two products` (string,optional)
    
+ Request (application/json)

    + Headers

            Authorization: {"api_key":"a5f514de-c8c8-262a-ac31-31d609f3550a","secret_key":"404b1fd6-9fc5-1533-a121-126fa6cc0c8f"}

    + Body

            {
              
              "terminal_uid": "e67d7991-6b13-44de-94ff-95c9ca55be84",
              "customer_uid": "e67d7991-6b13-44de-94ff-95c9ca55be84",
              "card_token": "e1396310-e3f8-461f-b80a-55b199211359",
              "cashier_uid": "e1396310-e3f8-461f-b80a-55b199211359",
              "currency_code": "ILS",
              "instant_first_payment": false,
              "customer_failure_email": false,
              "successful_invoice": false,
              "send_customer_success_email": false,
              "recurring_type": 1, 
              "recurring_range": 1, 
              "number_of_charges": 3, 
              "start_date":"2020-12-16",
              "items":[{
                "product_uid":"ba4c68a6-0e26-4bc7-b26c-675f87761c3a",
                "quantity":1,
                "price" : 100,
              }],
              "one_time_items":[{
                "product_uid":"ba4c68a6-0e26-4bc7-b26c-6712d7761c3a",
                "quantity":1,
                "price" : 150,
              }],
              "one_time_charge_date":"2020-12-16",
              "extra_info":"Charging two products"
            }

    
+ Response 200 
        
        
        {
            "result": {
                "status": "success",
                "code": 0,
                "description": "operation has been success"
            },
            "data": {
                "recurring_payment_uid": "d70334d6-62c4-4a6a-a9e3-b49e3495a451",
             }
        }
     

### Remove [POST /RecurringPayments/DeleteRecurring/:{uid}]
            
+ Parameters 
    + uid: `e1396310-e3f8-461f-b80a-55b199211359` (string,required) - Required Path variable -> recurring payment_uid 


+ Attributes 
    + terminal_uid: `e1396310-e3f8-461f-b80a-55b199211359` (string,required) 

+ Request (application/json)

    + Headers

            Authorization: {"api_key":"a5f514de-c8c8-262a-ac31-31d609f3550a","secret_key":"404b1fd6-9fc5-1533-a121-126fa6cc0c8f"}

    + Body

            {
              "terminal_uid": "e67d7991-6b13-44de-94ff-95c9ca55be84",
            }
 
+ Response 200 
        
        
        {
            "result": {
                "status": "success",
                "code": 0,
                "description": "operation has been success"
            },
            "data": {
                "recurring_payment_uid": "7088b78a-ea4c-42a8-964a-0a7e42d433c8"
            }
        }
        

### Update [POST /RecurringPayments/Update/:{uid}]
            
+ Parameters 
    + uid: `e1396310-e3f8-461f-b80a-55b199211359` (string,required) - Required Path variable -> recurring payment_uid 


+ Attributes 
    + terminal_uid: `e1396310-e3f8-461f-b80a-55b199211359` (string,required) 
    + cashier_uid: `e1396310-e3f8-461f-b80a-55b199211359` (string,required)
    + card_token: `e1396310-e3f8-461f-b80a-55b199211359` (string,required) - This field is not required if it's bank recurring order
    + bank_account_uid: `e1396310-e3f8-461f-b80a-55b199211359` (string,optional) - Customer bank account uid in order to charge his account
    + company_bank_account_uid: `e1396310-e3f8-461f-b80a-55b199211359` (string,optional) - In case this is bank masav order, this field is required
    + valid: true (boolean,required) - Active / Inactive the recurring payment
    + items (array) - Array of objects
        + (object)
            + product_uid:`de11bca8-416e-4b47-9e5a-0040e21b0b3f` (string,required)
            + quantity:1 (number,required)-Quantity of billable products
            + price:100 (number,required)-Quantity of billable products
            + discount_type:"amount" (string,optional)-'percentage' OR 'amount'
            + discount_value:10 (number,optional) - Required if discount type have value
    + currency_code: `ILS` (string,required)
    + instant_first_payment: false (boolean,required)
    + recurring_type: 1 (number,required) - 0-daily OR 1-weekly OR 2-monthly
    + recurring_range: 1 (number,required) 
    + number_of_charges: 3 (number,required)- If need unlimited charges - number of charges need to be 0
    + start_date: `2020-12-16` (string,optional)-Update future date of the recurring
    + end_date: `2028-01-16` (string,optional)-When the recurring will stop, in case the recurring is unlimited.
    + one_time_items (array) - Array of objects
        + (object)
            + product_uid:`de11bca8-416e-4b47-9e5a-0040e21b0b3f` (string,required)
            + quantity:1 (number,required)-Quantity of billable products
            + price:100 (number,required)-Quantity of billable products
            + discount_type:"amount" (string,optional)-'percentage' OR 'amount'
            + discount_value:10 (number,optional) - Required if discount type have value
    + successful_invoice: false (boolean,optional)-Print invoice if charge success
    + send_customer_success_email: false (boolean,optional)
    + customer_failure_email: false (boolean,optional)- Send email if failure on charge
    + send_customer_success_sms: false (boolean,optional) - If SMS package purchased the system will notify your customer by SMS
    + customer_failure_sms: false (boolean,optional) - If SMS package purchased the system will notify your customer by SMS
    + one_time_charge_date: `2020-12-16` (string,optional)
    + extra_info: `quantity price updated` (string,optional)
    
+ Request (application/json)

    + Headers

            Authorization: {"api_key":"a5f514de-c8c8-262a-ac31-31d609f3550a","secret_key":"404b1fd6-9fc5-1533-a121-126fa6cc0c8f"}

    + Body

            {
              
              "terminal_uid": "e67d7991-6b13-44de-94ff-95c9ca55be84",
              "customer_uid": "e67d7991-6b13-44de-94ff-95c9ca55be84",
              "card_token": "e1396310-e3f8-461f-b80a-55b199211359",
              "cashier_uid": "e1396310-e3f8-461f-b80a-55b199211359",
              "currency_code": "ILS",
              "instant_first_payment": false,
              "customer_failure_email": false,
              "successful_invoice": false,
              "cancel_recurring_on_failure": false,
              "recurring_type": 1, 
              "recurring_range": 1, 
              "number_of_charges": 3,
              "start_date":"2020-12-16",
              "items":[{
                "product_uid":"ba4c68a6-0e26-4bc7-b26c-675f87761c3a",
                "quantity":1,
                "price" : 100,
              }],
              "one_time_items":[{
                "product_uid":"ba4c68a6-0e26-4bc7-b26c-675f87761c3a",
                "quantity":1,
                "price" : 100,
              }],
              "one_time_charge_date":"2020-12-16",
              "extra_info":"quantity price updated"
            }

+ Response 200 
        
        
        {
            "result": {
                "status": "success",
                "code": 0,
                "description": "operation has been success"
            },
            "data": {
                "recurring_payment_uid": "d70334d6-62c4-4a6a-a9e3-b49e3495a451",
             }
        }
        

### View [GET /RecurringPayments/View/{terminal_uid}?{customer_uid}?{skip}?{take}]

+ Parameters 
    + terminal_uid: `e1396310-e3f8-461f-b80a-55b199211359` (string,required) - Required Query variable .
    + customer_uid: `e1396310-e3f8-461f-b80a-55b199211359` (string,optional) -  Optional Query variable .
    + skip: 0 (string,optional) - Optional Query variable, From where you want to start take records.in this example you start from the first record
    + take: 5 (string,optional) - Optional Query variable required if skip have some value. This means that you want take 5 records.

            
+ Request (application/json)

    + Headers

            Authorization: {"api_key":"a5f514de-c8c8-262a-ac31-31d609f3550a","secret_key":"404b1fd6-9fc5-1533-a121-126fa6cc0c8f"}
    
+ Response 200 
        
        {
            "data": [
                {
                    "uid": "7389f623-60d4-4bd5-937b-e8f0fe73240a",
                    "number": "Aj156",
                    "created_at": "19/01/2021",
                    "customer_name": "לקוח כללי",
                    "customer_uid": "ef76432c-769a-43a6-ba7a-6f70272539d8",
                    "each_payment_amount": 10,
                    "already_charged_transfers": 0,
                    "already_charged_amount": 0,
                    "number_of_charges": 5,
                    "cc_number": "0218",
                    "cc_expiration": "0124",
                    "start_date": "2021-02-10",
                    "first_charge_date": "2021-02-10",
                    "valid": true,
                    "recurring_type": "weekly",
                    "extra_info": "",
                    "cashier_name": "קופה כללית",
                    "currency_code": "ILS",
                    "recurring_range": 4
                },
                {
                    "uid": "a2e0d0bf-b7ab-44f2-b78a-f042d1e75669",
                    "number": "AB332",
                    "created_at": "14/01/2021",
                    "customer_name": "לקוח כללי",
                    "customer_uid": "ef76432c-769a-43a6-ba7a-6f70272539d8",
                    "each_payment_amount": 1234.22,
                    "already_charged_transfers": 0,
                    "already_charged_amount": 0,
                    "number_of_charges": 0,
                    "cc_number": "1672",
                    "cc_expiration": "0121",
                    "start_date": "2021-01-15",
                    "first_charge_date": "2021-01-15",
                    "valid": true,
                    "recurring_type": "weekly",
                    "extra_info": "",
                    "cashier_name": "קופה כלליתקופה כללית",
                    "currency_code": "ILS",
                    "recurring_range": 1
                }
            ],
            "pages": 1,
            "count": 11
        }
        
### Valid [POST /RecurringPayments/:{uid}/Valid]
            
+ Parameters 
    + uid: `e1396310-e3f8-461f-b80a-55b199211359` (string,required) - Required Path variable -> recurring payment_uid 


+ Attributes 
    + terminal_uid: `e1396310-e3f8-461f-b80a-55b199211359` (string,required) 
    + valid: true (boolean,required) - Active / Inactive the recurring payment

+ Request (application/json)

    + Headers

            Authorization: {"api_key":"a5f514de-c8c8-262a-ac31-31d609f3550a","secret_key":"404b1fd6-9fc5-1533-a121-126fa6cc0c8f"}

    + Body

            {
              
              "terminal_uid": "e67d7991-6b13-44de-94ff-95c9ca55be84",
              "valid":true
            }

+ Response 200 
        
        
        {
            "result": {
                "status": "success",
                "code": 0,
                "description": "operation has been success"
            },
            "data": {
                "recurring_payment_uid": "d70334d6-62c4-4a6a-a9e3-b49e3495a451",
             }
        }


### View Recurring [GET /RecurringPayments/:{uid}/ViewRecurring/{?terminal_uid}]

+ Parameters 
    + uid: `e1396310-e3f8-461f-b80a-55b199211359` (string,required) - Required Path variable .
    + terminal_uid: `e1396310-e3f8-461f-b80a-55b199211359` (string,required) - Required Query variable .

+ Request (application/json)

    + Headers

            Authorization: {"api_key":"a5f514de-c8c8-262a-ac31-31d609f3550a","secret_key":"404b1fd6-9fc5-1533-a121-126fa6cc0c8f"}
    
+ Response 200 
        
        {
            "customer_uid": "ef76432c-769a-43a6-ba7a-6f70272539d8",
            "cashier_uid": "1bc7b001-d90c-43b3-a8bb-58ab8a3013ba",
            "card_token": "0868522e-ed12-43f1-bcfb-d4bdf0fbc1b71672",
            "currency_code": "ILS",
            "instant_first_payment": false,
            "customer_failure_email": true,
            "successful_invoice": false,
            "send_customer_success_email": true,
            "recurring_type": 0,
            "recurring_range": 2,
            "start_date": "2020-12-22",
            "number_of_charges": 5,
            "amount": 11.7,
            "items": [
                {
                    "product_uid": "ba4c68a6-0e26-4bc7-b26c-675f87761c3a",
                    "name": "מוצר כללי",
                    "quantity": "5",
                    "currency_code": "ILS",
                    "quantity_price": 2,
                    "amount_pay": 11.7,
                    "vat": 1.7,
                    "product_invoice_extra_details": null,
                    "discount_type": null,
                    "discount_amount": 0,
                    "discount_value": null,
                    "quantity_price_including_vat": 2.34,
                    "product_id": "1",
                    "vat_type": 1,
                    "vat_percentage": 17
                }
            ],
            "one_time_items": null,
            "one_time_charge_date": null,
            "number": "C13663",
            "extra_info": "",
            "uid": "ca168461-5613-42c6-a9ef-243fa0f91bfb"
        }
        

### List Charges [GET /RecurringPayments/:{uid}/ViewRecurringCharge/{?terminal_uid}{?skip}{?take}]

+ Parameters 
    + uid: `e1396310-e3f8-461f-b80a-55b199211359` (string,required) - Required Path variable -> recurring payment_uid .
    + terminal_uid: `e1396310-e3f8-461f-b80a-55b199211359` (string,required) - Required Query variable .
    + skip: 0 (string,optional) - Optional Query variable, From where you want to start take records.in this example you start from the first record
    + take: 5 (string,optional) - required if skip have some value. This means that you want take 5 records.

            
+ Request (application/json)

    + Headers

            Authorization: {"api_key":"a5f514de-c8c8-262a-ac31-31d609f3550a","secret_key":"404b1fd6-9fc5-1533-a121-126fa6cc0c8f"}

+ Response 200 
        
        
        {
            "customer_uid": "ef76432c-769a-43a6-ba7a-6f70272539d8",
            "recurring_uid": "7389f623-60d4-4bd5-937b-e8f0fe73240a",
            "data": [
                {
                    "charge_date": "21/01/2021",
                    "charge_type": "instant",
                    "card_number": "0218",
                    "card_expiry": "0124",
                    "card_token": "9ac92d49-fd83-48ec-ab8e-d180527957c30218",
                    "amount": 10,
                    "currency": "ILS",
                    "valid": true,
                    "uid": "689e7bdb-80d1-45a3-a4dc-e79bcc9e7c1d",
                    "items": [
                        {
                            "product_uid": "ba4c68a6-0e26-4bc7-b26c-675f87761c3a",
                            "name": "מוצר כללי",
                            "quantity": 1,
                            "currency_code": "ILS",
                            "quantity_price": 8.55,
                            "amount_pay": 10,
                            "vat": 1.45,
                            "product_invoice_extra_details": "",
                            "discount_type": null,
                            "discount_amount": 0,
                            "discount_value": null,
                            "quantity_price_including_vat": 10,
                            "product_id": "1",
                            "vat_type": 1,
                            "vat_percentage": 17
                        }
                    ],
                    "extra_info": "",
                    "status": null,
                    "errorCode": null,
                    "invoice": null,
                    "transaction_id": null
                },
                {
                    "charge_date": "10/02/2021",
                    "charge_type": "recurring",
                    "card_number": "0218",
                    "card_expiry": "0124",
                    "card_token": "9ac92d49-fd83-48ec-ab8e-d180527957c30218",
                    "amount": 10,
                    "currency": "ILS",
                    "valid": true,
                    "uid": "58e9f417-c7cd-4b1c-8f7a-b670f7190a55",
                    "items": [
                        {
                            "product_uid": "ba4c68a6-0e26-4bc7-b26c-675f87761c3a",
                            "name": "מוצר כללי",
                            "quantity": 1,
                            "currency_code": "ILS",
                            "quantity_price": 8.55,
                            "amount_pay": 10,
                            "vat": 1.45,
                            "product_invoice_extra_details": "",
                            "discount_type": null,
                            "discount_amount": 0,
                            "discount_value": null,
                            "quantity_price_including_vat": 10,
                            "product_id": "1",
                            "vat_type": 1,
                            "vat_percentage": 17
                        }
                    ],
                    "extra_info": "",
                    "status": null,
                    "errorCode": null,
                    "invoice": null,
                    "transaction_id": null
                },
                {
                    "charge_date": "02/06/2021",
                    "charge_type": "recurring",
                    "card_number": "0218",
                    "card_expiry": "0124",
                    "card_token": "9ac92d49-fd83-48ec-ab8e-d180527957c30218",
                    "amount": 10,
                    "currency": "ILS",
                    "valid": true,
                    "uid": "79bc3220-22b1-4962-b169-f7b2edc6d219",
                    "items": [
                        {
                            "product_uid": "ba4c68a6-0e26-4bc7-b26c-675f87761c3a",
                            "name": "מוצר כללי",
                            "quantity": 1,
                            "currency_code": "ILS",
                            "quantity_price": 8.55,
                            "amount_pay": 10,
                            "vat": 1.45,
                            "product_invoice_extra_details": "",
                            "discount_type": null,
                            "discount_amount": 0,
                            "discount_value": null,
                            "quantity_price_including_vat": 10,
                            "product_id": "1",
                            "vat_type": 1,
                            "vat_percentage": 17
                        }
                    ],
                    "extra_info": "",
                    "status": null,
                    "errorCode": null,
                    "invoice": null,
                    "transaction_id": null
                }
            ]
        }


### Customer Credit Card Renewal Notification [POST /RecurringPayments/CreditCardRenewal/:{recurring_uid}]


+ Parameters
    + recurring_uid: `84aa6e4e-fe42-4d5f-b9cd-59dbc3817f10` (string,required) - Required Path variable -> Recurring UID.

+ Attributes ()
    + terminal_uid: `83d218ac-478c-413a-ac79-fe63fe966de9` (string,required) - Terminal UID

+ Request (application/json)

    + Headers

            Authorization: {"api_key":"a5f514de-c8c8-262a-ac31-31d609f3550a","secret_key":"404b1fd6-9fc5-1533-a121-126fa6cc0c8f"}
            
    + Body

            {
              "terminal_uid": "83d218ac-478c-413a-ac79-fe63fe966de9"
            }
        
+ Response 200 
    

            {
                "result": {
                    "status": "success",
                    "code": 0,
                    "description": "operation has been success"
                },
                 "data": {}
            }
   
## Recurring Charges [/RecurringPayments/AddRecurringCharge/:{uid}]  

        
### Add [POST ]

+ Parameters
    + uid: `e1396310-e3f8-461f-b80a-55b199211359` (string,required) - Required Path variable -> recurring payment_uid


+ Attributes 
    + terminal_uid: `e1396310-e3f8-461f-b80a-55b199211359` (string,required)
    + card_token: `e1396310-e3f8-461f-b80a-55b199211359` (string,required) - This field is not required if it's bank recurring order
    + cvv: `461` (string, optional) - In case the terminal is opened as recurring, this field is mandatory for initialization transactions when a new recurring order is created.
    + bank_account_uid: `e1396310-e3f8-461f-b80a-55b199211359` (string,optional) - Customer bank account uid in order to charge his account
    + company_bank_account_uid: `e1396310-e3f8-461f-b80a-55b199211359` (string,optional) - In case this is bank masav order, this field is required
    + charge_date: `2020-12-16` (string,required)
    + valid: false (boolean,required) -Affects recurring Charge status
    + items (array,required) - Array of objects
        + (object)
            + product_uid:`de11bca8-416e-4b47-9e5a-0040e21b0b3f` (string,required)
            + quantity:1 (number,required)-Quantity of billable products
            + price:100 (number,required)-Quantity of billable products
            + discount_type:"amount" (string,optional)-'percentage' OR 'amount'
            + discount_value:10 (number,optional) - Required if discount type have value
    + extra_info: `Smart TV` (string,optional)

+ Request (application/json)

    + Headers

            Authorization: {"api_key":"a5f514de-c8c8-262a-ac31-31d609f3550a","secret_key":"404b1fd6-9fc5-1533-a121-126fa6cc0c8f"}

    + Body

            {
              
              "terminal_uid": "e67d7991-6b13-44de-94ff-95c9ca55be84",
              "charge_date": "2020-12-16",
              "card_token": "e1396310-e3f8-461f-b80a-55b199211359",
              "valid": false, 
              "extra_info": "Smart TV",
              "items":[{
                "product_uid":"ba4c68a6-0e26-4bc7-b26c-675f87761c3a",
                "quantity":1,
                "price" : 100,
              }],

            }

+ Response 200 
        
        {
            "result": {
                "status": "success",
                "code": 0,
                "description": "operation has been success"
            },
            "data": {
                "recurring_charge_uid": "4df4d693-bf7f-4ce8-b92f-f0247228faf6"}
        }

### Remove [POST /RecurringPayments/DeleteRecurringCharge/:{charge_uid}]

+ Parameters
    + charge_uid: `e1396310-e3f8-461f-b80a-55b199211359` (string,required) - Required Path variable


+ Attributes 
    + terminal_uid: `e1396310-e3f8-461f-b80a-55b199211359` (string,required)

+ Request (application/json)

    + Headers

            Authorization: {"api_key":"a5f514de-c8c8-262a-ac31-31d609f3550a","secret_key":"404b1fd6-9fc5-1533-a121-126fa6cc0c8f"}

    + Body

            {
              "terminal_uid": "e67d7991-6b13-44de-94ff-95c9ca55be84",
            }

    
+ Response 200 
        
        {
            "result": {
                "status": "success",
                "code": 0,
                "description": "operation has been success"
            },
            "data": {}
        }

### Update [POST /RecurringPayments/UpdateRecurringCharge/:{charge_uid}]


+ Parameters
    + charge_uid: `e1396310-e3f8-461f-b80a-55b199211359` (string,required) - Required Path variable


+ Attributes 
    + terminal_uid: `e1396310-e3f8-461f-b80a-55b199211359` (string,required)
    + card_token: `e1396310-e3f8-461f-b80a-55b199211359` (string,required) - This field is not required if it's bank recurring order
    + cvv: `461` (string, optional) - In case the terminal is opened as recurring, this field is mandatory for initialization transactions when a new recurring order is created.
    + bank_account_uid: `e1396310-e3f8-461f-b80a-55b199211359` (string,optional) - Customer bank account uid in order to charge his account
    + company_bank_account_uid: `e1396310-e3f8-461f-b80a-55b199211359` (string,optional) - In case this is bank masav order, this field is required
    + charge_date: `2020-12-16` (string,required)
    + valid: false (boolean,required)-Affects recurring Charge status
    + items (array,required) - Array of objects
        + (object)
            + product_uid:"ba4c68a6-0e26-4bc7-b26c-675f87761c3a" (string)
            + quantity:1 (number)
            + price:100 (number)
    + extra_info: `` (string,optional)

+ Request (application/json)

    + Headers

            Authorization: {"api_key":"a5f514de-c8c8-262a-ac31-31d609f3550a","secret_key":"404b1fd6-9fc5-1533-a121-126fa6cc0c8f"}

    + Body

            {
              
              "terminal_uid": "e67d7991-6b13-44de-94ff-95c9ca55be84",
              "charge_date": "2020-12-16",
              "card_token": "e1396310-e3f8-461f-b80a-55b199211359",
              "valid": false,
              "extra_info": "",
              "items":[{
                "product_uid":"ba4c68a6-0e26-4bc7-b26c-675f87761c3a",
                "quantity":1,
                "price" : 100,
              }],

            }

    
+ Response 200 
        
        {
            "result": {
                "status": "success",
                "code": 0,
                "description": "operation has been success"
            },
            "data": {
                "recurring_charge_uid": "4df4d693-bf7f-4ce8-b92f-f0247228faf6"
                }
        }
        

### View [POST /RecurringPayments/GetRecurringCharge]

+ Attributes 
    + charge_uid: `e1312310-e3f8-461f-b80a-55b199211359` (string,required)
    + terminal_uid: `e13963120-e3f1-461f-cz82a-55b11x211359` (string,required) 

+ Request (application/json)

    + Headers

            Authorization: {"api_key":"a5f514de-c8c8-262a-ac31-31d609f3550a","secret_key":"404b1fd6-9fc5-1533-a121-126fa6cc0c8f"}
            
    + Body

            {
              
              "charge_uid": "e1312310-e3f8-461f-b80a-55b199211359",
              "terminal_uid": "e13963120-e3f1-461f-cz82a-55b11x211359"
             

            }
    
+ Response 200 
        
        {
            "id": "134",
            "uuid": "2601ax6c-b45a-421d-814f-f3bc6a6840f8",
            "recurring_id": 53,
            "user_id": 2,
            "source_id": 4,
            "card_token_id": 43,
            "status": 0,
            "transactions_approvals_id": null,
            "type": 0,
            "valid": true,
            "amount": 1000,
            "extra_info": null,
            "charge_date": "2021-03-10",
            "items": null,
            "execution_date": null,
            "created_at": "2021-01-20T14:46:34.499Z",
            "updated_at": "2021-01-20T14:46:34.499Z",
            "deleted_at": null,
            "recurringPayment": {
                "id": "53",
                "uuid": "7389f623-6124-4bd5-91ab-e8f0fe73240a",
                "number": "rd506",
                "customer_id": 1,
                "card_token_id": 43,
                "currency_code": "ILS",
                "cashier_id": 2,
                "user_id": "2",
                "instant_first_payment": true,
                "customer_failure_email": true,
                "successful_invoice": true,
                "send_customer_success_email": false,
                "recurring_type": 1,
                "recurring_range": 4,
                "amount": 1000,
                "start_date": "2021-02-10",
                "extra_info": "",
                "number_of_charges": 5,
                "valid": true,
                "items": [
                    {
                        "product_uid": "ba1ac8a6-0e26-4bc7-b26c-675f87761c3a",
                        "name": "מוצר כללי",
                        "quantity": 1,
                        "currency_code": "ILS",
                        "quantity_price": 855,
                        "amount_pay": 1000,
                        "vat": 145,
                        "product_invoice_extra_details": "",
                        "discount_type": null,
                        "discount_amount": 0,
                        "discount_value": null,
                        "quantity_price_including_vat": 1000,
                        "product_id": "1",
                        "vat_type": 1,
                        "vat_percentage": 1700
                    }
                ],
                "one_time_items": null,
                "one_time_charge_date": null,
                "source_id": 4,
                "created_at": "2021-01-19T06:21:06.999Z",
                "updated_at": "2021-01-20T14:46:34.480Z",
                "deleted_at": null,
                "cashier": {
                    "id": "2",
                    "uuid": "1bc7b1ax1-d90c-41ax3-a8bb-58ab8a3013ba",
                    "company_id": "2",
                    "name": "קופה כללית",
                    "number": 1,
                    "company_terminal_id": "2",
                    "system_type_yosi": null,
                    "created_at": "2020-12-11T06:31:41.302Z",
                    "updated_at": "2021-01-14T08:05:00.971Z",
                    "deleted_at": null
                }
            },
            "cardToken": {
                "id": "43",
                "name": null,
                "customer_id": 1,
                "valid": true,
                "card_token": "9ac92d49-fd83-48ec-ab8e-d180527957c30218",
                "last_4_digits": "0218",
                "card_date_mmyy": "0124",
                "clearing_id": 6,
                "brand_id": 2,
                "issuer_id": 1,
                "created_at": "2020-12-31T14:05:16.205Z",
                "updated_at": "2020-12-31T14:05:16.205Z",
                "deleted_at": null
            }
        }
        
## Reports - Recurring Payments [/RecurringPaymentsReports/Charged]

### Charged [GET]


+ Attributes 
    + terminal_uid: `e1396310-e3f8-461f-b80a-55b199211359` (string,required) 
    + currency_code: `ILS` (string,required)
    + customer_uid: `e1396310-e3f8-461f-b80a-55b199211359` (string,optional)
    + from_date: `2020-12-01` (string,optional)
    + till_date: `2021-01-16` (string,optional)
    
+ Request (application/json)

    + Headers

            Authorization: {"api_key":"a5f514de-c8c8-262a-ac31-31d609f3550a","secret_key":"404b1fd6-9fc5-1533-a121-126fa6cc0c8f"}

    + Body

            {
             
              "terminal_uid": "e67d7991-6b13-44de-94ff-95c9ca55be84",
              "currency_code": "ILS",
            }

    
+ Response 200 
        
        
        {
            "data": [
                {
                    "recurring_number": 1384644,
                    "recurring_uid": "7088b78a-ea4c-42a8-964a-0a7e42d433c8",
                    "customer_name": "לקוח כללי",
                    "customer_uid": "ef76432c-769a-43a6-ba7a-6f70272539d8",
                    "currency_code": "ILS",
                    "date_to_charge": "17/01/2021",
                    "execution_date": "19/01/2021",
                    "charge_type": "recurring",
                    "card_number": "1175",
                    "card_expiry": "0626",
                    "amount": 10,
                    "uid": "3760e3e7-5cc4-461f-8838-dc2c518546cf"
                },
                {
                    "recurring_number": 9816,
                    "recurring_uid": "b14e8daa-6945-4854-9f29-4fc7a22f1718",
                    "customer_name": "לקוח כללי",
                    "customer_uid": "ef76432c-769a-43a6-ba7a-6f70272539d8",
                    "currency_code": "ILS",
                    "date_to_charge": "13/01/2021",
                    "execution_date": "14/01/2021",
                    "charge_type": "recurring",
                    "card_number": "1175",
                    "card_expiry": "0626",
                    "amount": 180,
                    "uid": "da6417a3-8caf-442d-9b49-af0cae9495a9"
                },
                {
                    "recurring_number": 9816,
                    "recurring_uid": "b14e8daa-6945-4854-9f29-4fc7a22f1718",
                    "customer_name": "לקוח כללי",
                    "customer_uid": "ef76432c-769a-43a6-ba7a-6f70272539d8",
                    "currency_code": "ILS",
                    "date_to_charge": "13/01/2021",
                    "execution_date": "14/01/2021",
                    "charge_type": "recurring",
                    "card_number": "1175",
                    "card_expiry": "0626",
                    "amount": 150,
                    "uid": "ee5c8a57-ab6d-4b23-856e-965ec8eaece9"
                },
                {
                    "recurring_number": 9816,
                    "recurring_uid": "b14e8daa-6945-4854-9f29-4fc7a22f1718",
                    "customer_name": "לקוח כללי",
                    "customer_uid": "ef76432c-769a-43a6-ba7a-6f70272539d8",
                    "currency_code": "ILS",
                    "date_to_charge": "12/01/2021",
                    "execution_date": "14/01/2021",
                    "charge_type": "recurring",
                    "card_number": "1175",
                    "card_expiry": "0626",
                    "amount": 200,
                    "uid": "c210844b-275a-4315-a7a9-88af93c4011e"
                },
                    "recurring_number": 3879210,
                    "recurring_uid": "dfe3b27f-a07b-4dcb-b08b-0368efbf8216",
                    "customer_name": "לקוח כללי",
                    "customer_uid": "ef76432c-769a-43a6-ba7a-6f70272539d8",
                    "currency_code": "ILS",
                    "date_to_charge": "24/12/2020",
                    "execution_date": "24/12/2020",
                    "charge_type": "recurring",
                    "card_number": "1175",
                    "card_expiry": "0626",
                    "amount": 4.68,
                    "uid": "5ad117cc-6bbc-4213-8b1e-ab8fa5a5d5ae"
                },
                {
                    "recurring_number": 1384644,
                    "recurring_uid": "7088b78a-ea4c-42a8-964a-0a7e42d433c8",
                    "customer_name": "לקוח כללי",
                    "customer_uid": "ef76432c-769a-43a6-ba7a-6f70272539d8",
                    "currency_code": "ILS",
                    "date_to_charge": "24/12/2020",
                    "execution_date": "24/12/2020",
                    "charge_type": "recurring",
                    "card_number": "1175",
                    "card_expiry": "0626",
                    "amount": 10,
                    "uid": "fc3baff3-ad18-4fb9-898f-fd395fb329e9"
                },
                {
                    "recurring_number": 3879210,
                    "recurring_uid": "dfe3b27f-a07b-4dcb-b08b-0368efbf8216",
                    "customer_name": "לקוח כללי",
                    "customer_uid": "ef76432c-769a-43a6-ba7a-6f70272539d8",
                    "currency_code": "ILS",
                    "date_to_charge": "24/12/2020",
                    "execution_date": "24/12/2020",
                    "charge_type": "recurring",
                    "card_number": "1175",
                    "card_expiry": "0626",
                    "amount": 4.68,
                    "uid": "1864b51c-9011-4304-b94a-44b5516ad091"
                },
                {
                    "recurring_number": 1384644,
                    "recurring_uid": "7088b78a-ea4c-42a8-964a-0a7e42d433c8",
                    "customer_name": "לקוח כללי",
                    "customer_uid": "ef76432c-769a-43a6-ba7a-6f70272539d8",
                    "currency_code": "ILS",
                    "date_to_charge": "24/12/2020",
                    "execution_date": "24/12/2020",
                    "charge_type": "recurring",
                    "card_number": "1175",
                    "card_expiry": "0626",
                    "amount": 10,
                    "uid": "8d27f340-9d3d-4079-9c86-ab8750728559"
                },
                {
                    "recurring_number": 3879210,
                    "recurring_uid": "dfe3b27f-a07b-4dcb-b08b-0368efbf8216",
                    "customer_name": "לקוח כללי",
                    "customer_uid": "ef76432c-769a-43a6-ba7a-6f70272539d8",
                    "currency_code": "ILS",
                    "date_to_charge": "24/12/2020",
                    "execution_date": "24/12/2020",
                    "charge_type": "recurring",
                    "card_number": "1175",
                    "card_expiry": "0626",
                    "amount": 4.68,
                    "uid": "38202492-a8ea-4942-b2dc-36cbeda383ba"
                }
            ],
            "total_charges": 9,
            "total_amount": 574.04,
            "count": 9,
            "pages": 1
        }
        

### Failures [GET /RecurringPaymentsReports/Failures]


+ Attributes 
    + terminal_uid: `e1396310-e3f8-461f-b80a-55b199211359` (string,required) 
    + currency_code: `ILS` (string,required)
    + customer_uid: `e1396310-e3f8-461f-b80a-55b199211359` (string,optional)
    + from_date: `2020-12-01` (string,optional)
    + till_date: `2021-01-16` (string,optional)
    
+ Request (application/json)

    + Headers

            Authorization: {"api_key":"a5f514de-c8c8-262a-ac31-31d609f3550a","secret_key":"404b1fd6-9fc5-1533-a121-126fa6cc0c8f"}

    + Body

            {
             
              "terminal_uid": "e67d7991-6b13-44de-94ff-95c9ca55be84",
              "currency_code": "ILS",
              "from_date": "2020-12-01",
              "till_date": "2021-01-16",
            }

    
+ Response 200 
        
        {
            "data": [
                {
                    "recurring_number": 1366368,
                    "recurring_uid": "ca168461-5613-42c6-a9ef-243fa0f91bfb",
                    "customer_name": "לקוח כללי",
                    "customer_uid": "ef76432c-769a-43a6-ba7a-6f70272539d8",
                    "currency_code": "ILS",
                    "date_of_failure": "23/12/2020",
                    "date_to_charge": "20/01/2021",
                    "execution_date": null,
                    "charge_type": "recurring",
                    "card_number": "1672",
                    "card_expiry": "1221",
                    "amount": 11.7,
                    "uid": "13074962-93fb-4ef1-a20a-e9e085255dad",
                    "status": null
                },
                {
                    "recurring_number": 8617,
                    "recurring_uid": "293d0515-9d6e-4a48-a417-c9357bc5bbc0",
                    "customer_name": "לקוח כללי",
                    "customer_uid": "ef76432c-769a-43a6-ba7a-6f70272539d8",
                    "currency_code": "ILS",
                    "date_of_failure": "14/01/2021",
                    "date_to_charge": "12/01/2021",
                    "execution_date": null,
                    "charge_type": "recurring",
                    "card_number": "1175",
                    "card_expiry": "0626",
                    "amount": 999999,
                    "uid": "9931e5fa-8282-449e-a117-4d5d3b14032e",
                    "status": {
                        "status_code": "003",
                        "key": "error-codes-terminal-type-2-code-003"
                    }
                },
                {
                    "recurring_number": 9816,
                    "recurring_uid": "b14e8daa-6945-4854-9f29-4fc7a22f1718",
                    "customer_name": "לקוח כללי",
                    "customer_uid": "ef76432c-769a-43a6-ba7a-6f70272539d8",
                    "currency_code": "ILS",
                    "date_of_failure": "14/01/2021",
                    "date_to_charge": "13/01/2021",
                    "execution_date": null,
                    "charge_type": "recurring",
                    "card_number": "8730",
                    "card_expiry": "0521",
                    "amount": 999999,
                    "uid": "0756fcf3-e0ce-466d-bf2c-ab50862f1719",
                    "status": {
                        "status_code": "003",
                        "key": "error-codes-terminal-type-2-code-003"
                    }
                },
                {
                    "recurring_number": 9816,
                    "recurring_uid": "b14e8daa-6945-4854-9f29-4fc7a22f1718",
                    "customer_name": "לקוח כללי",
                    "customer_uid": "ef76432c-769a-43a6-ba7a-6f70272539d8",
                    "currency_code": "ILS",
                    "date_of_failure": "14/01/2021",
                    "date_to_charge": "13/01/2021",
                    "execution_date": null,
                    "charge_type": "recurring",
                    "card_number": "8730",
                    "card_expiry": "0521",
                    "amount": 800000,
                    "uid": "aecde2ca-6a40-443b-a25d-85928d8838b1",
                    "status": {
                        "status_code": "003",
                        "key": "error-codes-terminal-type-2-code-003"
                    }
                }
            ],
            "total_charges": 9,
            "total_amount": 280000970,
            "pages": 1,
            "count": 4
        }
        

### Future [GET /RecurringPaymentsReports/Future]


+ Attributes 
    + terminal_uid: `e1396310-e3f8-461f-b80a-55b199211359` (string,required) 
    + currency_code: `ILS` (string,required)
    + customer_uid: `e1396310-e3f8-461f-b80a-55b199211359` (string,optional)
    + from_date: `2020-12-01` (string,optional)
    + till_date: `2021-01-16` (string,optional)
    
+ Request (application/json)

    + Headers

            Authorization: {"api_key":"a5f514de-c8c8-262a-ac31-31d609f3550a","secret_key":"404b1fd6-9fc5-1533-a121-126fa6cc0c8f"}

    + Body

            {
             
              "terminal_uid": "e67d7991-6b13-44de-94ff-95c9ca55be84",
              "currency_code": "ILS",
              "from_date": "2020-12-01",
              "till_date": "2021-01-16",
            }

    
+ Response 200 
        
        {
            "data": [
                {
                    "recurring_number": 3879210,
                    "recurring_uid": "dfe3b27f-a07b-4dcb-b08b-0368efbf8216",
                    "customer_name": "לקוח כללי",
                    "customer_uid": "ef76432c-769a-43a6-ba7a-6f70272539d8",
                    "currency_code": "ILS",
                    "date_to_charge": "18/01/2021",
                    "charge_type": "recurring",
                    "card_number": "1175",
                    "card_expiry": "0626",
                    "amount": 4.68,
                    "uid": "0b89adbe-8639-4089-a5e8-08a54e2164d2"
                },
                {
                    "recurring_number": 1384644,
                    "recurring_uid": "7088b78a-ea4c-42a8-964a-0a7e42d433c8",
                    "customer_name": "לקוח כללי",
                    "customer_uid": "ef76432c-769a-43a6-ba7a-6f70272539d8",
                    "currency_code": "ILS",
                    "date_to_charge": "18/01/2021",
                    "charge_type": "recurring",
                    "card_number": "1175",
                    "card_expiry": "0626",
                    "amount": 10,
                    "uid": "36517a5f-a72e-4968-bbd5-a786b917f4ac"
                },
                {
                    "recurring_number": 3879210,
                    "recurring_uid": "dfe3b27f-a07b-4dcb-b08b-0368efbf8216",
                    "customer_name": "לקוח כללי",
                    "customer_uid": "ef76432c-769a-43a6-ba7a-6f70272539d8",
                    "currency_code": "ILS",
                    "date_to_charge": "19/01/2021",
                    "charge_type": "recurring",
                    "card_number": "1175",
                    "card_expiry": "0626",
                    "amount": 4.68,
                    "uid": "2a692190-fb15-402a-ad43-6f78fdf6a87e"
                },
                {
                    "recurring_number": 1384644,
                    "recurring_uid": "7088b78a-ea4c-42a8-964a-0a7e42d433c8",
                    "customer_name": "לקוח כללי",
                    "customer_uid": "ef76432c-769a-43a6-ba7a-6f70272539d8",
                    "currency_code": "ILS",
                    "date_to_charge": "19/01/2021",
                    "charge_type": "recurring",
                    "card_number": "1175",
                    "card_expiry": "0626",
                    "amount": 10,
                    "uid": "7f354907-ee62-49b7-8fc2-7ce8e7011d50"
                },
                {
                    "recurring_number": 3879210,
                    "recurring_uid": "dfe3b27f-a07b-4dcb-b08b-0368efbf8216",
                    "customer_name": "לקוח כללי",
                    "customer_uid": "ef76432c-769a-43a6-ba7a-6f70272539d8",
                    "currency_code": "ILS",
                    "date_to_charge": "20/01/2021",
                    "charge_type": "recurring",
                    "card_number": "1175",
                    "card_expiry": "0626",
                    "amount": 4.68,
                    "uid": "9ad896d1-6f16-44dd-9fa3-135032fdffcc"
                },
                {
                    "recurring_number": 1384644,
                    "recurring_uid": "7088b78a-ea4c-42a8-964a-0a7e42d433c8",
                    "customer_name": "לקוח כללי",
                    "customer_uid": "ef76432c-769a-43a6-ba7a-6f70272539d8",
                    "currency_code": "ILS",
                    "date_to_charge": "20/01/2021",
                    "charge_type": "recurring",
                    "card_number": "1175",
                    "card_expiry": "0626",
                    "amount": 10,
                    "uid": "72dafa52-4889-4d7f-9b64-18f00c9b2850"
                },
                {
                    "recurring_number": 9816,
                    "recurring_uid": "b14e8daa-6945-4854-9f29-4fc7a22f1718",
                    "customer_name": "לקוח כללי",
                    "customer_uid": "ef76432c-769a-43a6-ba7a-6f70272539d8",
                    "currency_code": "ILS",
                    "date_to_charge": "22/01/2021",
                    "charge_type": "recurring",
                    "card_number": "8730",
                    "card_expiry": "0521",
                    "amount": 200,
                    "uid": "632c96bb-3be5-48e5-b610-c58377bc160a"
                },
                {
                    "recurring_number": 9816,
                    "recurring_uid": "b14e8daa-6945-4854-9f29-4fc7a22f1718",
                    "customer_name": "לקוח כללי",
                    "customer_uid": "ef76432c-769a-43a6-ba7a-6f70272539d8",
                    "currency_code": "ILS",
                    "date_to_charge": "23/01/2021",
                    "charge_type": "recurring",
                    "card_number": "8730",
                    "card_expiry": "0521",
                    "amount": 200,
                    "uid": "3361ffec-8b9d-41c7-b5db-153631b21793"
                },
                {
                    "recurring_number": 9816,
                    "recurring_uid": "b14e8daa-6945-4854-9f29-4fc7a22f1718",
                    "customer_name": "לקוח כללי",
                    "customer_uid": "ef76432c-769a-43a6-ba7a-6f70272539d8",
                    "currency_code": "ILS",
                    "date_to_charge": "24/01/2021",
                    "charge_type": "recurring",
                    "card_number": "8730",
                    "card_expiry": "0521",
                    "amount": 200,
                    "uid": "bcfb51a7-a272-4dec-be73-c5814d8f9062"
                }
            ],
            "total_charges": 9,
            "total_amount": 64404,
            "count": 9,
            "pages": 1
        }
        

### Cancellations [GET /RecurringPaymentsReports/Cancellations]


+ Attributes 
    + terminal_uid: `e1396310-e3f8-461f-b80a-55b199211359` (string,required) 
    + currency_code: `ILS` (string,required)
    + customer_uid: `e1396310-e3f8-461f-b80a-55b199211359` (string,optional)
    + from_date: `2020-12-01` (string,optional)
    + till_date: `2021-01-16` (string,optional)
    
+ Request (application/json)

    + Headers

            Authorization: {"api_key":"a5f514de-c8c8-262a-ac31-31d609f3550a","secret_key":"404b1fd6-9fc5-1533-a121-126fa6cc0c8f"}

    + Body

            {
             
              "terminal_uid": "e67d7991-6b13-44de-94ff-95c9ca55be84",
              "currency_code": "ILS",
              "from_date": "2020-12-01",
              "till_date": "2021-01-16",
            }

    
+ Response 200 
        
        {
            "data": [
                {
                    "recurring_number": 9816,
                    "recurring_uid": "b14e8daa-6945-4854-9f29-4fc7a22f1718",
                    "customer_name": "לקוח כללי",
                    "customer_uid": "ef76432c-769a-43a6-ba7a-6f70272539d8",
                    "currency_code": "ILS",
                    "cancelled_date": "17/01/2021",
                    "date_to_charge": "13/01/2021",
                    "changer": "Bot PayPlus",
                    "charge_type": "recurring",
                    "card_number": "8730",
                    "card_expiry": "0521",
                    "amount": 999999,
                    "uid": "0756fcf3-e0ce-466d-bf2c-ab50862f1719"
                }
            ],
            "total_charges": 120,
            "total_amount": 99999900,
            "count": 1,
            "pages": 1
        }
        

### Expired [GET /RecurringPaymentsReports/expiredCards]


+ Attributes 
    + terminal_uid: `e1396310-e3f8-461f-b80a-55b199211359` (string,required) 
    + currency_code: `ILS` (string,required)
    + customer_uid: `e1396310-e3f8-461f-b80a-55b199211359` (string,optional)

    
+ Request (application/json)

    + Headers

            Authorization: {"api_key":"a5f514de-c8c8-262a-ac31-31d609f3550a","secret_key":"404b1fd6-9fc5-1533-a121-126fa6cc0c8f"}

    + Body

            {
             
              "terminal_uid": "e67d7991-6b13-44de-94ff-95c9ca55be84",
              "currency_code": "ILS",

            }

    
+ Response 200 
        
        {
            "data": [
                {
                    "recurring_number": 1384644,
                    "recurring_uid": "7088b78a-ea4c-42a8-964a-0a7e42d433c8",
                    "customer_name": "לקוח כללי",
                    "customer_uid": "ef76432c-769a-43a6-ba7a-6f70272539d8",
                    "currency_code": "ILS",
                    "date_to_charge": "18/01/2021",
                    "charge_type": "recurring",
                    "card_number": "1175",
                    "card_expiry": "0620",
                    "amount": 10,
                    "uid": "36517a5f-a72e-4968-bbd5-a786b917f4ac"
                },
                {
                    "recurring_number": 3879210,
                    "recurring_uid": "dfe3b27f-a07b-4dcb-b08b-0368efbf8216",
                    "customer_name": "לקוח כללי",
                    "customer_uid": "ef76432c-769a-43a6-ba7a-6f70272539d8",
                    "currency_code": "ILS",
                    "date_to_charge": "18/01/2021",
                    "charge_type": "recurring",
                    "card_number": "1175",
                    "card_expiry": "0620",
                    "amount": 4.68,
                    "uid": "0b89adbe-8639-4089-a5e8-08a54e2164d2"
                },
                {
                    "recurring_number": 1384644,
                    "recurring_uid": "7088b78a-ea4c-42a8-964a-0a7e42d433c8",
                    "customer_name": "לקוח כללי",
                    "customer_uid": "ef76432c-769a-43a6-ba7a-6f70272539d8",
                    "currency_code": "ILS",
                    "date_to_charge": "19/01/2021",
                    "charge_type": "recurring",
                    "card_number": "1175",
                    "card_expiry": "0620",
                    "amount": 10,
                    "uid": "7f354907-ee62-49b7-8fc2-7ce8e7011d50"
                },
                {
                    "recurring_number": 3879210,
                    "recurring_uid": "dfe3b27f-a07b-4dcb-b08b-0368efbf8216",
                    "customer_name": "לקוח כללי",
                    "customer_uid": "ef76432c-769a-43a6-ba7a-6f70272539d8",
                    "currency_code": "ILS",
                    "date_to_charge": "19/01/2021",
                    "charge_type": "recurring",
                    "card_number": "1175",
                    "card_expiry": "0620",
                    "amount": 4.68,
                    "uid": "2a692190-fb15-402a-ad43-6f78fdf6a87e"
                },
                {
                    "recurring_number": 1384644,
                    "recurring_uid": "7088b78a-ea4c-42a8-964a-0a7e42d433c8",
                    "customer_name": "לקוח כללי",
                    "customer_uid": "ef76432c-769a-43a6-ba7a-6f70272539d8",
                    "currency_code": "ILS",
                    "date_to_charge": "20/01/2021",
                    "charge_type": "recurring",
                    "card_number": "1175",
                    "card_expiry": "0620",
                    "amount": 10,
                    "uid": "72dafa52-4889-4d7f-9b64-18f00c9b2850"
                },
                {
                    "recurring_number": 3879210,
                    "recurring_uid": "dfe3b27f-a07b-4dcb-b08b-0368efbf8216",
                    "customer_name": "לקוח כללי",
                    "customer_uid": "ef76432c-769a-43a6-ba7a-6f70272539d8",
                    "currency_code": "ILS",
                    "date_to_charge": "20/01/2021",
                    "charge_type": "recurring",
                    "card_number": "1175",
                    "card_expiry": "0620",
                    "amount": 4.68,
                    "uid": "9ad896d1-6f16-44dd-9fa3-135032fdffcc"
                }
            ],
            "total_charges": 6,
            "total_amount": 4404,
            "count": 6,
            "pages": 1
        }
        

### Daily stats [GET /RecurringPaymentsReports/Daily]


+ Attributes 
    + terminal_uid: `e1396310-e3f8-461f-b80a-55b199211359` (string,required) 
    + customer_uid: `e1396310-e3f8-461f-b80a-55b199211359` (string,optional)
    + from_date: `2020-12-01` (string,optional)
    + till_date: `2021-01-16` (string,optional)
    
+ Request (application/json)

    + Headers

            Authorization: {"api_key":"a5f514de-c8c8-262a-ac31-31d609f3550a","secret_key":"404b1fd6-9fc5-1533-a121-126fa6cc0c8f"}

    + Body

            {
            
              "terminal_uid": "e67d7991-6b13-44de-94ff-95c9ca55be84",

            }

    
+ Response 200 
        
        {
            "data": [
                {
                    "date": "13/01/2021",
                    "failures": 1,
                    "charged": 9,
                    "credit": 999999,
                    "debit": 1610,
                    "total": 10,
                    "currency_code": "ILS"
                },
                {
                    "date": "12/01/2021",
                    "failures": 1,
                    "charged": 2,
                    "credit": 11.7,
                    "debit": 14.68,
                    "total": 3,
                    "currency_code": "ILS"
                },
                {
                    "date": "11/01/2021",
                    "failures": 0,
                    "charged": 14,
                    "credit": 0,
                    "debit": 102.76,
                    "total": 14,
                    "currency_code": "ILS"
                },
                {
                    "date": "04/01/2021",
                    "failures": 0,
                    "charged": 14,
                    "credit": 0,
                    "debit": 109.78,
                    "total": 14,
                    "currency_code": "ILS"
                },
                {
                    "date": "28/12/2020",
                    "failures": 0,
                    "charged": 5,
                    "credit": 0,
                    "debit": 41.06,
                    "total": 5,
                    "currency_code": "ILS"
                },
                {
                    "date": "27/12/2020",
                    "failures": 0,
                    "charged": 10,
                    "credit": 0,
                    "debit": 73.4,
                    "total": 10,
                    "currency_code": "ILS"
                }
            ],
            "count": 6,
            "pages": 1
        }



## Transactions [/Transactions/Charge]  

### Charge Transaction (J4) [POST ]


+ Attributes 
    + terminal_uid: `e1396310-e3f8-461f-b80a-55b199211359` (string,required)
    + cashier_uid: `e1343310-e3f8-4761f-b80a-54629211359` (string,required)
    + amount: 90 (number,required)
    + currency_code: `ILS` (string,required)
    + credit_terms: 1 (number,required) - 1-regular OR 6-credit OR 8-payment
    + use_token: false (boolean,required) - If true , token is required
    + token: `0f8767c1-c940-4311-8044-44ceceba19a77275` (string,optional) - Required only if use_token is true
    + initial_invoice: true (boolean) - If sent the transactions will consider if to initial invoice or not, if not sent then will take the default setting
    + customer_name_invoice: `David Levi` (string,optional) - Required only if customer_uid is null and have integrated invoice system
    + create_token: false (boolean,optional) - nullable (In case you have tokenization permission, you can decide if you would like to return the token of the customer for future charges)
    + add_data: `ABC3433` (string,optional) - SHOULD BE SENT JUST IF YOUR CREDIT CARD COMPANY OPENED THIS OPTION !!!
    + deferMonths: 0 (number,optional) - nullable (If you are using Club Codes [Kod Moadon] send the code in this field)
    + original_terminal_uid: nullable (string, optional) - In case you charging J5 transaction in another terminal, provide the original terminal of the original J5 tranasaction.
    + customer_uid: `e1396310-e3f8-461f-b80a-543564xzc59` (string,optional) - Mandatory if use_token is true, customer object can be used instead
    + id: `036220022` (string, optional) - Payer credit card holder identification number
    + customer (object,optional) - nullable
        + customer_name: `Nadlan International LTD` (string,required) - Important in case you working with invoicing company
        + email: `david@example.com` (string,required)-By this field we will search for a customer and allocate the payment under the client
        + full_name: `David Levi` (string,optional)-In case the customer is a company, contact personal name can be sent using this field
        + vat_number: `036534683` (string,optional)-In case email are not sent, we will search for a customer by this field
        + phone: `0509111111` (string,optional)
        + cell_phone: `0509111111` (string,optional)
        + address: `HaRokmim 12` (string,optional)
        + city: `Tel-Aviv` (string,optional)
        + country_ISO: `IL` (string,optional)
    + products (array,optional) - Optional ,Array of objects
        + (object)
            + product_uid:"e1396310-e3f8-461f-b80a-55b199211359" (string,optional)
            + name:"TV" (string,optional)
            + quantity : "1" (string,optional)
            + price : "10" (string,optional)
            + currency_code:"ILS" (string,optional)
            + discount_type:"amount" (string,optional) - "amount" OR "percentage"
            + discount_value:"10" (string,optional) 
            + product_invoice_extra_details:"Xiom Smart TV" (string,optional)
            + vat_type: 0 (number,optional)-'vat included' OR 1-'vat not included' OR 2- 'exempt vat'
    + credit_card - Required if use token is false
        + auth_number:null (string,optional) - authorization number from credit company
        + number:"4510126317380824" (string) - required if send credit card
        + exp_mm:"01" (string) - required if send credit card
        + exp_yy:"24" (string) - required if send credit card
        + cvv:"991" (string)
    + payments - Optional
        + number:1 (number) - Number of payments
        + first_amount:0 (number) - First Payment
        + nonfirst_amount:0 (number) - Remaining payments
    + extra_info: `` (string,optional)
    + more_info_1: `Additional Information 1` (string,optional) - nullable (Additional Information)
    + more_info_2: `Additional Information 2` (string,optional) - nullable (Additional Information)
    + more_info_3: `Additional Information 3` (string,optional) - nullable (Additional Information)
    + more_info_4: `Additional Information 4` (string,optional) - nullable (Additional Information)
    + more_info_5: `Additional Information 5` (string,optional) - nullable (Additional Information)
    + self_secure_3ds - Optional if you working with external 3D Secure provider.
        + cavv_ucaf: "MTIzNDU2Nzg5MDA5ODc2NTQzMjE=" (string) - UCAF returned from the 3DSecure provider.
        + eci: "02" (string) - eci returned from the 3DSecure provider. Only 02, 05 will be sent to the 3D Secure provider, otherwise will be as regular transaction.
        + external_trans_uid: "e9d68212-ea0e-4bd0-b7be-2bb64996cdf3" (string) - External Result Trans ID (SHVA-Netcetera Provider Only)
        + external_uid: "peo98414-zdfe-4bd0-b698-2bb64996cdf9" (string) - External 3DSecure UID (SHVA-Netcetera Provider Only)

+ Request (application/json)

    + Headers

            Authorization: {"api_key":"a5f514de-c8c8-262a-ac31-31d609f3550a","secret_key":"404b1fd6-9fc5-1533-a121-126fa6cc0c8f"}

    + Body

            {
              
              "terminal_uid": "e1396310-e3f8-461f-b80a-55b199211359",
              "cashier_uid": "e1396310-e3f8-461f-b80a-55b199211359",
              "customer_uid": "e1396310-e3f8-461f-b80a-55b199211359",
              "amount": 90,
              "credit_terms":1,
              "currency_code":"ILS",
              "use_token":false,
              "create_token": true,
              "credit_card":{
              "auth_number":null,
              "exp_mm":"01",
              "exp_yy":"24",
              "number":"4510126317380824"
              },
              "payments":{
              "number":1,
              "first_amount":0,
              "nonfirst_amount":0
              },
              "extra_info": "Smart TV",
              "more_info_1": "Additional 1",
              "more_info_2": "Additional 2",
              "more_info_3": "Additional 3",
              "more_info_4": "Additional 4",
              "more_info_5": "Additional 5"
            }

+ Response 200 
        
        {
            "results": {
                "status": "success",
                "code": 0,
                "description": "operation has been success"
            },
            "data": {
                "transaction": {
                    "uid": "599dbe80-53bf-4e2b-9f66-e38d42b90b68",
                    "number": "ha635",
                    "type": "internal_page",
                    "date": "2021-01-07 16:24:31",
                    "status_code": "000",
                    "amount": 90,
                    "currency": "ILS",
                    "credit_terms": "credit",
                    "payments": {
                        "number_of_payments": 3,
                        "first_payment_amount": 0,
                        "rest_payments_amount": 0
                    },
                    "secure3D": {
                        "status": false,
                        "tracking": null
                    },
                    "approval_number": "0000000",
                    "voucher_number": "07-480-067",
                    "more_info": "Smart TV",
                    "more_info_1": "Additional 1",
                    "more_info_2": "Additional 2",
                    "more_info_3": "Additional 3",
                    "more_info_4": "Additional 4",
                    "more_info_5": "Additional 5"
                },
                "data": {
                    "customer_uid": "ef76432c-769a-43a6-ba7a-6f70272539d8",
                    "terminal_uid": "97432e96-3c21-4eb2-9d64-1067e845b35a",
                    "cashier_uid": "1bc7b001-d90c-43b3-a8bb-58ab8a3013ba",
                    "items": [
                        {
                            "amount_pay": 100,
                            "discount_amount": 10,
                            "discount_type": "amount",
                            "discount_value": 10,
                            "quantity": "1",
                            "quantity_price": 85.47,
                            "product_uid": "ba4c68a6-0e26-4bc7-b26c-675f87761c3a",
                            "name": "Smart TV"
                        }
                    ],
                    "card_information": {
                        "four_digits": "0218",
                        "expiry_month": "01",
                        "expiry_year": "24",
                        "clearing_id": 6,
                        "brand_id": 2,
                        "issuer_id": 1
                    }
                }
            }
        }
        

### Charge by Transaction UID [POST /Transactions/ChargeByTransactionUID ]


+ Attributes 
    + transaction_uid: `e1396310-e3f8-461f-b80a-55b1954311359` (string,required) - The transaction UID you received from the original J5 transaction
    + amount: 50 (number,required) - Amount you would like to charge but not more then the original J5 transaction
    + more_info: `some information` (string,optional) - If is partial amount, invoice product line will be taken from this field if received
    + cvv: `465` (string,optional) - If your terminal in the credit companies is required CVV, then you have to pass this field, otherwise the transaction will be failed
    + items (array,optional)  - nullable (if send in item "product_uid" we will use this product or send error, if send "name" and not "product_uid" we will create new product with this name. more option to send if ("name" && !product_uid): vat_type, barcode, value,price.last option we will use default product.
        + (object)
            + name: "test product" (string,optional)
            + product_uid: "a24015eb-5c21-4d4c-b385-882a97d3e5da" (string,optional)
            + image_url: "https://www.yourwebsite/product/image/url.jpg" (string,optional)
            + category_uid: "c48120eb-1c51-2a3q-b921-252a17d3e3da" (string,optional)
            + quantity: 1 (number,optional)
            + barcode: 432432 (string,optional)
            + value: 5 (number,optional)
            + price: 10 (number,optional)-Quantity of billable products
            + discount_type: "amount" (string,optional)-'percentage' OR 'amount'
            + discount_value: 0 (number,optional) 
            + shipping: false (boolean,optional)-Can be sent if you would like to show another line of shipping instead a product in the order summary table
            + vat_type: 0 (number,optional)-0-'vat type included' OR 1-'vat type not included' OR 2- 'vat type exempt'

+ Request (application/json)

    + Headers

            Authorization: {"api_key":"a5f514de-c8c8-262a-ac31-31d609f3550a","secret_key":"404b1fd6-9fc5-1533-a121-126fa6cc0c8f"}

    + Body

            {
              
              "transaction_uid": "e1396310-e3f8-461f-b80a-55b1954311359",
              "amount": 50,
              "cvv":"465",
              "more_info": "some information"
            }

+ Response 200 
        
        {
            "results": {
                "status": "success",
                "code": 0,
                "description": "operation has been success"
            },
            "data": {
                "transaction": {
                    "uid": "e1396310-e3f8-461f-b80a-55b1954311359",
                    "number": "aN870",
                    "type": "internal_page",
                    "date": "2021-02-17 19:40:16",
                    "status_code": "000",
                    "amount": 50,
                    "currency": "ILS",
                    "credit_terms": "regular",
                    "payments": {
                        "number_of_payments": 1,
                        "first_payment_amount": 0,
                        "rest_payments_amount": 0
                    },
                    "secure3D": {
                        "status": false,
                        "tracking": null
                    },
                    "approval_number": "3148090",
                    "voucher_number": "50-001-187",
                    "more_info": ""
                },
                "data": {
                    "customer_uid": "c3703ae5-9cab-43b6-8bf5-0af239dc87ae",
                    "terminal_uid": "83d218ac-478c-413a-ac79-fe63fe966de9",
                    "cashier_uid": "d74f98d3-0437-41ba-9b53-4439c06b4a8d",
                    "items": [
                        {
                            "amount_pay": 50,
                            "discount_amount": 0,
                            "quantity": 1,
                            "quantity_price": 42.73,
                            "vat": 7.27,
                            "product_uid": "d6536a11-1fce-49c3-87a6-ab0261da1cd2",
                            "name": "test"
                        }
                    ],
                    "card_information": {
                        "token": "3639a5a7-7883-4e37-b96c-e46640d6f8fd1175",
                        "four_digits": "1175",
                        "expiry_month": "06",
                        "expiry_year": "25",
                        "clearing_id": 1,
                        "brand_id": 10,
                        "issuer_id": 1
                    }
                }
            }
        }
        

### Refund by Credit Card [POST /Transactions/Refund ]


+ Attributes 
    + terminal_uid: `e1396310-e3f8-461f-b80a-55b199211359` (string,required)
    + cashier_uid: `e1396310-e3f8-461f-b80a-55b1954311359` (string,required)
    + credit_terms: 1 (number,required) - 1-regular OR 6-credit OR 8-payment
    + amount: 90 (number,required)
    + currency_code: `ILS` (string,required)
    + create_token: false (boolean,optional) - nullable (In case you have tokenization permission, you can decide if you would like to return the token of the customer for future charges)
    + use_token: false (boolean,required) - IF true , token is required
    + token: `0f8767c1-c940-4311-8044-44ceceba19a77275` (string,optional) - Required only if use_token is true
    + customer_name_invoice: `David Levi` (string,optional) - Required only if customer_uid is null and have integrated invoice system
    + customer_uid: `e1396310-e3f8-461f-b80a-543564xzc59` (string,optional) - Mandatory if use_token is true, customer object can be used instead
    + id: `036220022` (string, optional) - Customer identification number
    + initial_invoice: false (boolean) - As long your account connected to Invoice+ we will generate document for this action
    + customer (object,optional) - nullable
        + customer_name: `Nadlan International LTD` (string,required)-Important in case you working with invoicing company
        + email: `david@example.com` (string,required)-By this field we will search for a customer and allocate the payment under the client
        + full_name: `David Levi` (string,optional)-In case the customer is a company, contact personal name can be sent using this field
        + vat_number: `036534683` (string,optional)-In case email are not sent, we will search for a customer by this field
        + phone: `0509111111` (string,optional)
        + cell_phone: `0509111111` (string,optional)
        + address: `HaRokmim 12` (string,optional)
        + city: `Tel-Aviv` (string,optional)
        + country_ISO: `IL` (string,optional)
    + products (array,optional) - Optional ,Array of objects
        + (object)
            + product_uid:"e1396310-e3f8-461f-b80a-55b199211359" (string)
            + name:"TV" (string)
            + quantity : "1" (string)
            + price : "10" (string)
            + currency_code:"ILS" (string)
            + discount_type:"amount" (string) - "amount" OR "percentage"
            + discount_value:"10" (string) 
            + product_invoice_extra_details:"Smart TV" (string)
            + vat:14.53 (number)
    + credit_card - Required if use token is false
        + auth_number:null (string,optional) - authorization number from credit company
        + number:"4510126317380824" (string) - required if send credit card
        + exp_mm:"01" (string) - required if send credit card
        + exp_yy:"24" (string) - required if send credit card
        + cvv:"991" (string)
    + payments(object,optional) - Optional
        + number:1 (number) - Number of payments
        + first_amount:0 (number) - First Payment
        + nonfirst_amount:0 (number) - Remaining payments
    + extra_info: `` (string,optional)
    + more_info_1: `Additional Information 1` (string,optional) - nullable (Additional Information)
    + more_info_2: `Additional Information 2` (string,optional) - nullable (Additional Information)
    + more_info_3: `Additional Information 3` (string,optional) - nullable (Additional Information)
    + more_info_4: `Additional Information 4` (string,optional) - nullable (Additional Information)
    + more_info_5: `Additional Information 5` (string,optional) - nullable (Additional Information)
    + notes: `` (string,optional)


+ Request (application/json)

    + Headers

            Authorization: {"api_key":"a5f514de-c8c8-262a-ac31-31d609f3550a","secret_key":"404b1fd6-9fc5-1533-a121-126fa6cc0c8f"}

    + Body

            {
              
              "terminal_uid": "e1396310-e3f8-461f-b80a-55b199211359",
              "cashier_uid": "e1396310-e3f8-461f-b80a-55b199211359",
              "customer_uid": "e1396310-e3f8-461f-b80a-55b199211359",
              "amount": 90,
              "credit_terms":1,
              "currency_code":"ILS",
              "use_token":false,
              "credit_card":{
                  "auth_number":null,
                  "exp_mm":"01",
                  "exp_yy":"24",
                  "number":"4510126317380824"
              },
              "payments":{
                "number":1,
                "first_amount":0,
                "nonfirst_amount":0
              },
              "extra_info": "Smart TV",
              "more_info_1": "Additional 1",
              "more_info_2": "Additional 2",
              "more_info_3": "Additional 3",
              "more_info_4": "Additional 4",
              "more_info_5": "Additional 5"
            }

+ Response 200 
        
        {
            "results": {
                "status": "success",
                "code": 0,
                "description": "operation has been success"
            },
            "data": {
                "transaction": {
                    "uid": "8a81c540-1eb5-4b08-a48d-19d6ca620724",
                    "number": "cb648",
                    "type": "internal_page",
                    "date": "2021-01-07 16:31:19",
                    "status_code": "000",
                    "amount": 900,
                    "currency": "ILS",
                    "credit_terms": "regular",
                    "payments": {
                        "number_of_payments": 1,
                        "first_payment_amount": 0,
                        "rest_payments_amount": 0
                    },
                    "secure3D": {
                        "status": false,
                        "tracking": null
                    },
                    "approval_number": "0000000",
                    "voucher_number": "07-480-074",
                    "more_info": "Smart TV",
                    "more_info_1": "Additional 1",
                    "more_info_2": "Additional 2",
                    "more_info_3": "Additional 3",
                    "more_info_4": "Additional 4",
                    "more_info_5": "Additional 5"
                },
                "data": {
                    "customer_uid": "ef76432c-769a-43a6-ba7a-6f70272539d8",
                    "terminal_uid": "97432e96-3c21-4eb2-9d64-1067e845b35a",
                    "cashier_uid": "1bc7b001-d90c-43b3-a8bb-58ab8a3013ba",
                    "items": [
                        {
                            "amount_pay": 910,
                            "discount_amount": 10,
                            "discount_type": "amount",
                            "discount_value": 10,
                            "quantity": "1",
                            "quantity_price": 747,
                            "product_uid": "ba4c68a6-0e26-4bc7-b26c-675f87761c3a",
                            "name": "Smart TV"
                        }
                    ],
                    "card_information": {
                        "four_digits": "1175",
                        "expiry_month": "06",
                        "expiry_year": "25",
                        "clearing_id": 4,
                        "brand_id": 1,
                        "issuer_id": 4
                    }
                }
            }
        }
        

### Refund By Transaction UID [POST /Transactions/RefundByTransactionUID ]


+ Attributes 
    + transaction_uid: `e1396310-e3f8-461f-b80a-55b1954311359` (string,required) - The transaction UID you received from the original J5 transaction
    + amount: 50 (number,required) - Amount you would like to charge but not more then the original J5 transaction
    + more_info: `some information` (string,optional) - If is partial amount, invoice product line will be taken from this field if received
    + cvv: `465` (string,optional) - If your terminal in the credit companies is required CVV, then you have to pass this field, otherwise the transaction will be failed
    + initial_invoice: false (boolean) - As long your account connected to Invoice+ we will generate document for this action
    + items (array,optional)  - nullable (if send in item "product_uid" we will use this product or send error, if send "name" and not "product_uid" we will create new product with this name. more option to send if ("name" && !product_uid): vat_type, barcode, value,price.last option we will use default product.
        + (object)
            + name: "test product" (string,optional)
            + product_uid: "a24015eb-5c21-4d4c-b385-882a97d3e5da" (string,optional)
            + image_url: "https://www.yourwebsite/product/image/url.jpg" (string,optional)
            + category_uid: "c48120eb-1c51-2a3q-b921-252a17d3e3da" (string,optional)
            + quantity: 1 (number,optional)
            + barcode: 432432 (string,optional)
            + value: 5 (number,optional)
            + price: 10 (number,optional)-Quantity of billable products
            + discount_type: "amount" (string,optional)-'percentage' OR 'amount'
            + discount_value: 0 (number,optional) 
            + shipping: false (boolean,optional)-Can be sent if you would like to show another line of shipping instead a product in the order summary table
            + vat_type: 0 (number,optional)-0-'vat included' OR 1-'vat not included' OR 2- 'exempt vat'


+ Request (application/json)

    + Headers

            Authorization: {"api_key":"a5f514de-c8c8-262a-ac31-31d609f3550a","secret_key":"404b1fd6-9fc5-1533-a121-126fa6cc0c8f"}

    + Body

            {
              
              "transaction_uid": "e1396310-e3f8-461f-b80a-55b1954311359",
              "amount": 50,
              "cvv":"465",
              "more_info": "some information"
            }

+ Response 200 
        
        {
            "results": {
                "status": "success",
                "code": 0,
                "description": "operation has been success"
            },
            "data": {
                "transaction": {
                    "uid": "e1396310-e3f8-461f-b80a-55b1954311359",
                    "number": "gf8708",
                    "type": "internal_page",
                    "date": "2021-02-17 19:40:16",
                    "status_code": "000",
                    "amount": 50,
                    "currency": "ILS",
                    "credit_terms": "regular",
                    "payments": {
                        "number_of_payments": 1,
                        "first_payment_amount": 0,
                        "rest_payments_amount": 0
                    },
                    "secure3D": {
                        "status": false,
                        "tracking": null
                    },
                    "approval_number": "3148090",
                    "voucher_number": "50-001-187",
                    "more_info": ""
                },
                "data": {
                    "customer_uid": "c3703ae5-9cab-43b6-8bf5-0af239dc87ae",
                    "terminal_uid": "83d218ac-478c-413a-ac79-fe63fe966de9",
                    "cashier_uid": "d74f98d3-0437-41ba-9b53-4439c06b4a8d",
                    "items": [
                        {
                            "amount_pay": 50,
                            "discount_amount": 0,
                            "quantity": 1,
                            "quantity_price": 42.73,
                            "vat": 7.27,
                            "product_uid": "d6536a11-1fce-49c3-87a6-ab0261da1cd2",
                            "name": "test"
                        }
                    ],
                    "card_information": {
                        "token": "3639a5a7-7883-4e37-b96c-e46640d6f8fd1175",
                        "four_digits": "1175",
                        "expiry_month": "06",
                        "expiry_year": "25",
                        "clearing_id": 1,
                        "brand_id": 10,
                        "issuer_id": 1
                    }
                }
            }
        }
        

### Approval Transaction (J5) [POST /Transactions/Approval ]


+ Attributes 
    + terminal_uid: `e1396310-e3f8-461f-b80a-55b199211359` (string,required)
    + cashier_uid: `e1396310-e3f8-461f-b80a-55b1954311359` (string,required)
    + credit_terms: 1 (number,required) - 1-regular OR 6-credit OR 8-payment
    + amount: 90 (number,required)
    + currency_code: `ILS` (string,required)
    + use_token: false (boolean,required) - If true , token is required
    + token: `0f8767c1-c940-4311-8044-44ceceba19a77275` (string,optional) - If use_token is true
    + create_token: false (boolean,optional) - nullable (In case you have tokenization permission, you can decide if you would like to return the token of the customer for future charges)
    + customer_name_invoice: `David Levi` (string,optional) - Required only if customer_uid is null and have integrated invoice system
    + customer_uid: `e1396310-e3f8-461f-b80a-543564xzc59` (string,required) - Mandatory if use_token is true, customer object can be used instead
    + id: `036220022` (string, optional) - Customer identification number
    + customer (object,optional) - nullable
        + customer_name: `Nadlan International LTD` (string,required)-Important in case you working with invoicing company
        + email: `david@example.com` (string,required)-By this field we will search for a customer and allocate the payment under the client
        + full_name: `David Levi` (string,optional)-In case the customer is a company, contact personal name can be sent using this field
        + vat_number: `036534683` (string,optional)-In case email are not sent, we will search for a customer by this field
        + phone: `0509111111` (string,optional)
        + cell_phone: `0509111111` (string,optional)
        + address: `HaRokmim 12` (string,optional)
        + city: `Tel-Aviv` (string,optional)
        + country_ISO: `IL` (string,optional)
    + products (array,optional) - Optional ,Array of objects
        + (object)
            + product_uid:"e1396310-e3f8-461f-b80a-55b199211359" (string)
            + name:"TV" (string)
            + quantity : "1" (string)
            + price : "10" (string)
            + currency_code:"ILS" (string)
            + discount_type:"amount" (string) - "amount" OR "percentage"
            + discount_value:"10" (string) 
            + product_invoice_extra_details:"Smart TV" (string)
            + vat:14.53 (number)
    + credit_card - Required if use token is false
        + auth_number:null (string,optional) - authorization number from credit company
        + number:"4510126317380824" (string) - required if send credit card
        + exp_mm:"01" (string) - required if send credit card
        + exp_yy:"24" (string) - required if send credit card
        + cvv:"991" (string)
    + payments(object,optional) - Optional
        + number:1 (number) - Number of payments
        + first_amount:0 (number) - First Payment
        + nonfirst_amount:0 (number) - Remaining payments
    + extra_info: `` (string,optional)
    + more_info_1: `Additional Information 1` (string,optional) - nullable (Additional Information)
    + more_info_2: `Additional Information 2` (string,optional) - nullable (Additional Information)
    + more_info_3: `Additional Information 3` (string,optional) - nullable (Additional Information)
    + more_info_4: `Additional Information 4` (string,optional) - nullable (Additional Information)
    + more_info_5: `Additional Information 5` (string,optional) - nullable (Additional Information)
    + notes: `` (string,optional)


+ Request (application/json)

    + Headers

            Authorization: {"api_key":"a5f514de-c8c8-262a-ac31-31d609f3550a","secret_key":"404b1fd6-9fc5-1533-a121-126fa6cc0c8f"}

    + Body

            {
              
              "terminal_uid": "e1396310-e3f8-461f-b80a-55b199211359",
              "cashier_uid": "e1396310-e3f8-461f-b80a-55b199211359",
              "customer_uid": "e1396310-e3f8-461f-b80a-55b199211359",
              "amount": 90,
              "credit_terms":1,
              "currency_code":"ILS",
              "use_token":false,
              "credit_card":{
                  "auth_number": null,
                  "exp_mm":"01",
                  "exp_yy":"24",
                  "number":"4510126317380824"
              },
              "payments":{
                  "number":1,
                  "first_amount":0,
                  "nonfirst_amount":0
              },
              "extra_info": "Smart TV",
              "more_info_1": "Additional 1",
              "more_info_2": "Additional 2",
              "more_info_3": "Additional 3",
              "more_info_4": "Additional 4",
              "more_info_5": "Additional 5"
            }

+ Response 200 
        
        {
            "results": {
                "status": "success",
                "code": 0,
                "description": "operation has been success"
            },
            "data": {
                "transaction": {
                    "uid": "c01705f0-f549-4529-bb5b-33af0762e186",
                    "number": "lo46l",
                    "type": "internal_page",
                    "date": "2021-01-07 16:35:11",
                    "status_code": "000",
                    "amount": 90,
                    "currency": "ILS",
                    "credit_terms": "credit",
                    "payments": {
                        "number_of_payments": 3,
                        "first_payment_amount": 0,
                        "rest_payments_amount": 0
                    },
                    "secure3D": {
                        "status": false,
                        "tracking": null
                    },
                    "approval_number": "0000000",
                    "voucher_number": "07-480-079",
                    "more_info": "Smart TV",
                    "more_info_1": "Additional 1",
                    "more_info_2": "Additional 2",
                    "more_info_3": "Additional 3",
                    "more_info_4": "Additional 4",
                    "more_info_5": "Additional 5"
                },
                "data": {
                    "customer_uid": "ef76432c-769a-43a6-ba7a-6f70272539d8",
                    "terminal_uid": "97432e96-3c21-4eb2-9d64-1067e845b35a",
                    "cashier_uid": "1bc7b001-d90c-43b3-a8bb-58ab8a3013ba",
                    "items": [
                        {
                            "amount_pay": 100,
                            "discount_amount": 10,
                            "discount_type": "amount",
                            "discount_value": 10,
                            "quantity": "1",
                            "quantity_price": 85.47,
                            "product_uid": "ba4c68a6-0e26-4bc7-b26c-675f87761c3a",
                            "name": "Smart TV"
                        }
                    ],
                    "card_information": {
                        "four_digits": "0218",
                        "expiry_month": "01",
                        "expiry_year": "24",
                        "clearing_id": 6,
                        "brand_id": 2,
                        "issuer_id": 1
                    }
                }
            }
        }
        

### Check Card Transaction (J2) [POST /Transactions/Check ]


+ Attributes 
    + terminal_uid: `e1396310-e3f8-461f-b80a-55b199211359` (string,required)
    + cashier_uid: `e1396310-e3f8-461f-b80a-55b1954311359` (string,required)
    + credit_terms: 1 (number,required) - 1-regular OR 6-credit OR 8-payment
    + amount: 90 (number,required)
    + currency_code: `ILS` (string,required)
    + use_token: false (boolean,required) - If true , token is required
    + token: `0f8767c1-c940-4311-8044-44ceceba19a77275` (string,optional) - If use_token is true
    + create_token: false (boolean,optional) - nullable (In case you have tokenization permission, you can decide if you would like to return the token of the customer for future charges)
    + customer_name_invoice: `David Levi` (string,optional) - Required only if customer_uid is null and have integrated invoice system
    + customer_uid: `e1396310-e3f8-461f-b80a-543564xzc59` (string,required) - Mandatory if use_token is true, customer object can be used instead
    + id: `036220022` (string, optional) - Customer identification number
    + customer (object,optional) - nullable
        + customer_name: `Nadlan International LTD` (string,required)-Important in case you working with invoicing company
        + email: `david@example.com` (string,required)-By this field we will search for a customer and allocate the payment under the client
        + full_name: `David Levi` (string,optional)-In case the customer is a company, contact personal name can be sent using this field
        + vat_number: `036534683` (string,optional)-In case email are not sent, we will search for a customer by this field
        + phone: `0509111111` (string,optional)
        + cell_phone: `0509111111` (string,optional)
        + address: `HaRokmim 12` (string,optional)
        + city: `Tel-Aviv` (string,optional)
        + country_ISO: `IL` (string,optional)
    + products (array,optional) - Optional ,Array of objects
        + (object)
            + product_uid:"e1396310-e3f8-461f-b80a-55b199211359" (string)
            + name:"TV" (string)
            + quantity : "1" (string)
            + price : "10" (string)
            + currency_code:"ILS" (string)
            + discount_type:"amount" (string) - "amount" OR "percentage"
            + discount_value:"10" (string) 
            + product_invoice_extra_details:"Smart TV" (string)
            + vat:14.53 (number)
    + credit_card - Required if use token is false
        + auth_number:null (string,optional) - authorization number from credit company
        + number:"4510126317380824" (string) - required if send credit card
        + exp_mm:"01" (string) - required if send credit card
        + exp_yy:"24" (string) - required if send credit card
        + cvv:"991" (string)
    + payments(object,optional) - Optional
        + number:1 (number) - Number of payments
        + first_amount:0 (number) - First Payment
        + nonfirst_amount:0 (number) - Remaining payments
    + extra_info: `` (string,optional)
    + more_info_1: `Additional Information 1` (string,optional) - nullable (Additional Information)
    + more_info_2: `Additional Information 2` (string,optional) - nullable (Additional Information)
    + more_info_3: `Additional Information 3` (string,optional) - nullable (Additional Information)
    + more_info_4: `Additional Information 4` (string,optional) - nullable (Additional Information)
    + more_info_5: `Additional Information 5` (string,optional) - nullable (Additional Information)
    + notes: `` (string,optional)


+ Request (application/json)

    + Headers

            Authorization: {"api_key":"a5f514de-c8c8-262a-ac31-31d609f3550a","secret_key":"404b1fd6-9fc5-1533-a121-126fa6cc0c8f"}

    + Body

            {
              
              "terminal_uid": "e1396310-e3f8-461f-b80a-55b199211359",
              "cashier_uid": "e1396310-e3f8-461f-b80a-55b199211359",
              "customer_uid": "e1396310-e3f8-461f-b80a-55b199211359",
              "amount": 90,
              "credit_terms":1,
              "currency_code":"ILS",
              "use_token":false,
              "credit_card":{
                  "auth_number":null,
                  "exp_mm":"01",
                  "exp_yy":"24",
                  "number":"4510126317380824"
              },
              "payments":{
                  "number":1,
                  "first_amount":0,
                  "nonfirst_amount":0
              },
              "extra_info": "Smart TV",
              "more_info_1": "Additional 1",
              "more_info_2": "Additional 2",
              "more_info_3": "Additional 3",
              "more_info_4": "Additional 4",
              "more_info_5": "Additional 5"
            }

+ Response 200 
        
        {
            "results": {
                "status": "success",
                "code": 0,
                "description": "operation has been success"
            },
            "data": {}
        }
            

### Cancel Transaction [POST /Transactions/Cancel ]
Cancel transaction is available only in case the transaction is not deposited yet, which mean, in the same day and not later then the deposit time that set to your account (by default as 23:00). In case this time has been passed, you have to use Refund modules

+ Attributes 
    + terminal_uid: `e1396310-e3f8-461f-b80a-55b199211359` (string,required)
    + transaction_uid: `e1391210-e3f8-461f-v80a-55b1954311359` (string,required)
    + cashier_uid: `e1396310-e3f8-461f-b80a-55b123459` (string,required)
    

+ Request (application/json)

    + Headers

            Authorization: {"api_key":"a5f514de-c8c8-262a-ac31-31d609f3550a","secret_key":"404b1fd6-9fc5-1533-a121-126fa6cc0c8f"}

    + Body

            {
              "terminal_uid": "e1396310-e3f8-461f-b80a-55b199211359",
              "transaction_uid": "e1391210-e3f8-461f-v80a-55b1954311359",
              "cashier_uid": "e1396310-e3f8-461f-b80a-55b123459",
            }

+ Response 200 
        
        {
            "results": {
                "status": "success",
                "code": 0,
                "description": "cancel-transaction-success"
            },
            "data": {}
        }
        

### View [POST /Transactions/View ]


+ Attributes 
    + transaction_uid: `e1391210-e3f8-461f-v80a-55b1954311359` (string,optional)
    + customer_uid: `e1396310-e3f8-461f-b80a-55b123459` (string,optional)
    + fromDate: `2021-01-03` (string,optional) - If untilDate not null , so required
    + untilDate: `2021-01-04` (string,optional) - If fromDate not null , so required
    + more_info: `1164578` (string,optional) - The more_info you sent during the transaction request for the end user
    

+ Request (application/json)

    + Headers

            Authorization: {"api_key":"a5f514de-c8c8-262a-ac31-31d609f3550a","secret_key":"404b1fd6-9fc5-1533-a121-126fa6cc0c8f"}

    + Body

            {
              "customer_uid": "e1396310-e3f8-461f-b80a-55b199211359",
              "fromDate": "2021-01-03",
              "untilDate": "2021-01-04"
            }

+ Response 200 
        
        {
            "results": {
                "status": "success",
                "code": 0,
                "description": "operation has been success"
            },
            "data": [
                {
                    "transaction": {
                        "transaction_uid": "e067c092-8693-4fd3-b86c-ac4e3e739dcc",
                        "transaction_type": "Charge",
                        "date": "2022-02-10 17:58:26",
                        "status_code": "000",
                        "transaction_is_cancelled": false,
                        "amount": 5,
                        "currency": "ILS",
                        "credit_terms": "regular",
                        "payments": {
                            "number_of_payments": 1,
                            "first_payment_amount": 0,
                            "rest_payments_amount": 0
                        },
                        "secure3D": {
                            "status": false,
                            "tracking": null
                        },
                        "approval_number": "0091903",
                        "voucher_number": "11-001-029",
                        "more_info": "P1111444ddd411H2",
                        "add_data": null
                    },
                    "data": {
                        "customer_uid": "03a5734e-668a-444f-beef-a9376d4d967e",
                        "customer_name": "General Customer - לקוח כללי",
                        "customer_name_invoice": "General Customer - לקוח כללי",
                        "terminal_uid": "83d218ac-478c-413a-ac79-fe63fe966de9",
                        "cashier_uid": "d74f98d3-0437-41ba-9b53-4439c06b4a8d",
                        "cashier_name": "CashierEMV",
                        "items": [
                            {
                                "discount_amount": 0,
                                "discount_type": null,
                                "discount_value": null,
                                "quantity": 1,
                                "quantity_price": 4.27,
                                "name": "מוצר כללי"
                            }
                        ],
                        "card_information": {
                            "four_digits": "3712",
                            "expiry_month": "01",
                            "expiry_year": "24",
                            "card_foreign": "99",
                            "clearing_id": 6,
                            "clearing_name": "MAX",
                            "brand_id": 3,
                            "brand_name": "visa",
                            "issuer_id": 1,
                            "issuer_name": "isracard"
                        }
                    }
                }
            ]
        }
        

### Transaction Callback Response [GET /YOURDOMAIN/YOURENDPOINT]
In every successful transaction, if a callback URL is set in your account, The system will send you all the transaction details that have been successfully charged or refunded. payment_request_uid will be sent just if the transaction made through your payment page.

`card_foreign` parameters values:
```
0 - כרטיס חיוב רגיל
1 - כרטיס חיוב מידי (Direct)
3 - כרטיס דלק
4 - כרטיס דואלי
6 - נטען
8 - דלקן
70 - מועדון
73 - דלק מועדון
74 - דואלי מועדון
76 - כרטיס מועדון נטען
99 - כרטיס תייר
```

+ Response 200
        
        {
           "transaction_type":"Charge",
           "transaction":{
              "uid":"dcb11c1e7-a1231-37cf-6311-f5111eeb69c7",
              "payment_request_uid":"ef76432c-769a-43a6-ba7a-6f70272539d8",
              "number": "fd138",
              "type":"internal_page",
              "date":"2021-01-21 12:32:52",
              "status_code":"000",
              "amount":1,
              "currency":"ILS",
              "credit_terms":"regular",
              "payments":{
                 "number_of_payments":1,
                 "first_payment_amount":0,
                 "rest_payments_amount":0
              },
              "secure3D":{
                 "status":false,
                 "tracking":null
              },
              "approval_number":"002341",
              "voucher_number":"15-901-901",
              "more_info":"Some Info",
              "more_info_1": "Additional 1",
              "more_info_2": "Additional 2",
              "more_info_3": "Additional 3",
              "more_info_4": "Additional 4",
              "more_info_5": "Additional 5",
              "recurring_charge_information":{
                "recurring_uid":"dca25774-c98b-4dc6-9024-2e8b358d3bb9",
                "charge_uid":"9ba8e867-0526-4458-be6e-e38b4e174d7c"
                }
           },
           "data":{
              "customer_uid":"3bcc6b2d-b35a-62e1-72c1-318a79bfd1be",
              "terminal_uid":"6500833f-cd32-4f52-7364-1e0db24f13ee",
              "cashier_uid":"3232141c-1e11-2db6-afaf-25b4301a6acd",
              "items":[
                 {
                    "amount_pay":1,
                    "discount_amount":0,
                    "discount_type":null,
                    "discount_value":0,
                    "quantity":1,
                    "quantity_price":1,
                    "product_uid":"14312ecc-ed90-49f2-823a-a9620e7410d1",
                    "name":"מנוי שנתי"
                 }
              ],
              "card_information":{
                 "card_holder_name":"Moshe Cohen",
                 "four_digits":"6134",
                 "expiry_month":"09",
                 "expiry_year":"24",
                 "clearing_id":6,
                 "brand_id":8,
                 "issuer_id":6,
                 "card_foreign":99,
                 "card_bin": "375510",
                 "identification_number": "123456789"
              },
              "hash_data": "ewogICAgImVtYWlsIjogdGVzdGVtYWlsQGRvbWFpbi5jb20sCiAgICAibmFtZSI6ICJMaW9yIEVsLVByb2Zlc3NvciIsCiAgICAidmF0X251bWJlciI6ICIwMzYyMjAwNDQiLAogICAgInBob25lIjogIjk3MjU0NDMxNjI5NSIKfQ=="
           },
           "invoice":{
              "uuid":"65ad5633-2242-4b1d-8e0a-887db1319d6f",
              "docu_number":"90191",
              "original_url":"https://invoice.company.co.il/front/documents/get/17d2201b-1313-43ee-b9d1-0569ffad7951",
              "copy_url":"https://invoice.company.co.il/front/documents/get/17d2201b-1313-43ee-b9d1-0569ffad7951/copy",
              "integrator_name":"Invoice Company",
              "status":"Success",
              "brand_name":"PayPlus External Brand Name"
           }
        }
        
### Bank Callback Response [GET /BANKYOURDOMAIN/BANKYOURENDPOINT]
In every successful bank recurring transaction, if a callback URL is set in your account, The system will send you all the transaction details that have been successfully charged.

+ Response 200 
        
        {
           "transaction_type":"Charge",
           "transaction":{
              "uid":"f221abae-477d-42ae-afe1-081241947a0e",
              "number":"HYzr2",
              "type":"recurring",
              "date":"2021-06-21 17:47:00",
              "status_code":"000",
              "amount":50,
              "currency":"ILS",
              "credit_terms":"regular",
              "payments":{
                 "number_of_payments":1
              },
              "more_info":"",
              "more_info_1": "Additional 1",
              "more_info_2": "Additional 2",
              "more_info_3": "Additional 3",
              "more_info_4": "Additional 4",
              "more_info_5": "Additional 5",
              "recurring_charge_information":{
                 "recurring_uid":"9112d315-1d81-4899-8be8-7fefad64becc",
                 "charge_uid":"02a018d5-3896-4660-9c29-ef721aedaac0"
              }
           },
           "data":{
              "customer_uid":"9d550565-af12-4763-a480-4bab5bf6994c",
              "terminal_uid":"83d218ac-478c-413a-ac79-fe63fe966de9",
              "cashier_uid":"d74f98d3-0437-41ba-9b53-4439c06b4a8d",
              "items":[
                 {
                    "name":"test for yohan",
                    "amount_pay":50,
                    "discount_amount":0,
                    "discount_type":null,
                    "discount_value":null,
                    "quantity":1,
                    "quantity_price":42.74,
                    "product_uid":"2fef3b3e-ca18-4195-a55f-c6dfe44256cb",
                    "vat":7.26
                 }
              ],
              "company_bank_information":{
                 "uid":"28603b5e-32d1f-49d5-94cf-eb92dcb149c",
                 "branch_name":"קרית אילון",
                 "branch_code":411,
                 "bank_name":"בנק מזרחי טפחות בע\"מ",
                 "bank_code":20,
                 "account_name":"Yoyog",
                 "account_number":"290560",
                 "masav_code":"58685702"
              },
              "customer_bank_information":{
                 "uid":"22b03b5e-411f-49d5-94cf-eb92dcb149c",
                 "branch_name":"קרית אילון",
                 "branch_code":411,
                 "bank_name":"מרכז סליקה בנקאי בע\"מ",
                 "bank_code":50,
                 "account_number":"290560"
              },
              "invoice":{
                 "uuid":"22b03b5e-411f-49d5-94cf-eb442dcb149c",
                 "docu_number":"227738",
                 "original_url":"https://www.invoicecompany.co.il/pdf/view_invoice_original.pdf",
                 "copy_url":"https://www.invoicecompany.co.il/pdf/view_invoice_copy.pdf",
                 "integrator_name":"Invoice Name",
                 "status":"Success"
              }
           }
        }

        
## Reports - Transactions [/TransactionReports/NewTransactions]

### Transactions History [POST /TransactionReports/TransactionsHistory]


+ Attributes 
    + terminal_uid: `e1396310-e3f8-461f-b80a-55b199211359` (string,required) 
    + filter (object,optional)
        + fromDate:`2021-01-01` (string,required)
        + untilDate:`2021-02-01` (string,required)
        + currency_code:`ILS` (string,optional)
        + customer_uid:`e1396310-e3f8-461f-b80a-55b199212599` (string,optional)
        + reference_number:`603321546` (string,optional)
    + skip: 0 (string,optional) - From where you want to start take records.in this example you start from the first record
    + take: 5 (string,optional) - required if skip have some value. This means that you want take 5 records.

       

+ Request (application/json)

    + Headers

            Authorization: {"api_key":"a5f514de-c8c8-262a-ac31-31d609f3550a","secret_key":"404b1fd6-9fc5-1533-a121-126fa6cc0c8f"}

    + Body

            {
             
              "terminal_uid": "e67d7991-6b13-44de-94ff-95c9ca55be84",
              "currency_code": "ILS"
            }

    
+ Response 200 
        
        
        {
            "transactions": [
                {
                    "uuid": "351d0d6d-b30a-4573-a401-13a0d0e7bb66",
                    "transaction_type": "01",
                    "original_approval_id": null,
                    "original_paramj": null,
                    "isAlternativePayment": false,
                    "number": "hNZ2JD",
                    "created_at": "2021-10-31T08:42:48.160Z",
                    "information": {
                        "customer_bank_account_id": null,
                        "source_id": 2,
                        "approval_number": "0715985",
                        "voucher": "20-001-523",
                        "amount_by_currency": 99000,
                        "number_of_payments": 1,
                        "more_info": "test1",
                        "secure3ds": null,
                        "transaction_at": "2021-10-31T08:42:47.818Z",
                        "card_date_mmyy": "0626",
                        "card_num": "3720",
                        "customer_name_invoice": "ttt",
                        "source": {
                            "key": "payment-page"
                        },
                        "currency": {
                            "currency_code": "ILS"
                        },
                        "customer": {
                            "uuid": "7505193e-d010-4532-8319-6043ec622406",
                            "customer_name": "koko Jumbo"
                        }
                    },
                    "cashier": {
                        "uuid": "d74f98d3-0437-41ba-9b53-4439c06b4a8d",
                        "name": "CashierEMV",
                        "number": 1
                    },
                    "clearing": {
                        "id": 5,
                        "name": "amex"
                    },
                    "alternative": null,
                    "brand": {
                        "name": "visa"
                    },
                    "deposit": null,
                    "invoice": [
                        {
                            "uuid": "eabc56ab-393a-4de6-a36b-59de567c9096",
                            "platform_id": 5,
                            "canceled_id": null,
                            "doc_type_id": 1,
                            "status": 3,
                            "res_status": "false",
                            "res_status_description": "אחד הפרטים שהזנת שגויים",
                            "res_doc_number": null,
                            "res_doc_original_url": null,
                            "res_doc_copy_url": null,
                            "created_at": "2021-10-31T08:42:48.177Z",
                            "updated_at": "2021-10-31T08:43:00.981Z",
                            "docType": {
                                "id": 1,
                                "transaction_type": "charge",
                                "name": "Tax Invoice"
                            }
                        }
                    ],
                    "items": [
                        {
                            "quantity": 1,
                            "total_price": 99000,
                            "discount_amount": 0,
                            "name": "Some product name",
                            "product": {
                                "barcode": "12391234"
                            }
                        }
                    ]
                }
            ],
            "pages": 1,
            "count": 1
        }
        

### Transactions Approval [POST /TransactionReports/TransactionsApproval]


+ Attributes 
    + terminal_uid: `e1396310-e3f8-461f-b80a-55b199211359` (string,required) 
    + filter (object,optional)
        + fromDate:`2021-01-01` (string,optional)
        + untilDate:`2021-02-01` (string,optional)
        + currency_code:`ILS` (string,optional)
        + customer_uid:`e1396310-e3f8-461f-b80a-55b199212599` (string,optional)
    + skip: 0 (string,optional) - From where you want to start take records.in this example you start from the first record
    + take: 5 (string,optional) - required if skip have some value. This means that you want take 5 records.

           
+ Request (application/json)

    + Headers

            Authorization: {"api_key":"a5f514de-c8c8-262a-ac31-31d609f3550a","secret_key":"404b1fd6-9fc5-1533-a121-126fa6cc0c8f"}

    + Body

            {
             
              "terminal_uid": "e67d7991-6b13-44de-94ff-95c9ca55be84",
              "currency_code": "ILS"
            }

    
+ Response 200 
        
        
        {
            "transactions": [
                {
                    "uuid": "351d0d6d-b30a-4573-a401-13a0d0e7bb66",
                    "transaction_type": "01",
                    "original_approval_id": null,
                    "original_paramj": null,
                    "isAlternativePayment": false,
                    "number": "hNZ2JD",
                    "created_at": "2021-10-31T08:42:48.160Z",
                    "information": {
                        "customer_bank_account_id": null,
                        "source_id": 2,
                        "approval_number": "0715985",
                        "voucher": "20-001-523",
                        "amount_by_currency": 1600,
                        "number_of_payments": 1,
                        "more_info": "test1",
                        "secure3ds": null,
                        "transaction_at": "2021-10-31T08:42:47.818Z",
                        "card_date_mmyy": "0626",
                        "card_num": "3720",
                        "customer_name_invoice": "ttt",
                        "source": {
                            "key": "payment-page"
                        },
                        "currency": {
                            "currency_code": "ILS"
                        },
                        "customer": {
                            "uuid": "7505193e-d010-4532-8319-6043ec622406",
                            "customer_name": "koko Jumbo"
                        }
                    },
                    "cashier": {
                        "uuid": "d74f98d3-0437-41ba-9b53-4439c06b4a8d",
                        "name": "CashierEMV",
                        "number": 1
                    },
                    "alternative": null,
                    "brand": {
                        "name": "visa"
                    },
                    "deposit": null,
                    "invoice": [
                        {
                            "uuid": "eabc56ab-393a-4de6-a36b-59de567c9098",
                            "platform_id": 5,
                            "canceled_id": null,
                            "doc_type_id": 1,
                            "status": 3,
                            "res_status": "false",
                            "res_status_description": "אחד הפרטים שהזנת שגויים",
                            "res_doc_number": null,
                            "res_doc_original_url": null,
                            "res_doc_copy_url": null,
                            "created_at": "2021-10-31T08:42:48.177Z",
                            "updated_at": "2021-10-31T08:43:00.981Z",
                            "docType": {
                                "id": 1,
                                "transaction_type": "charge",
                                "name": "Tax Invoice"
                            }
                        }
                    ]
                }
            ],
            "pages": 1,
            "count": 1
        }
        

### Rejected / Failures [POST /TransactionReports/RejectsTransactions]


+ Attributes 
    + terminal_uid: `e1396310-e3f8-461f-b80a-55b199211359` (string,required) 
    + filter (object,optional)
        + fromDate:`2021-01-01` (string,optional)
        + untilDate:`2021-02-01` (string,optional)
        + currency_code:`ILS` (string,optional)
        + customer_uid:`e1396310-e3f8-461f-b80a-55b199212599` (string,optional)
    + skip: 0 (string,optional) - From where you want to start take records.in this example you start from the first record
    + take: 5 (string,optional) - required if skip have some value. This means that you want take 5 records.
    
+ Request (application/json)

    + Headers

            Authorization: {"api_key":"a5f514de-c8c8-262a-ac31-31d609f3550a","secret_key":"404b1fd6-9fc5-1533-a121-126fa6cc0c8f"}

    + Body

            {
             
              "terminal_uid": "e67d7991-6b13-44de-94ff-95c9ca55be84",
              "currency_code": "ILS"
            }

    
+ Response 200 
        
        
        {
            "transactions": [
                {
                    "uuid": "1551fbc4-307d-42fe-8f27-8b7bc2b3646d",
                    "transaction_type": "01",
                    "number": "gjjbLL",
                    "isAlternativePayment": false,
                    "created_at": "2021-10-31T09:09:55.931Z",
                    "information": {
                        "customer_bank_account_id": null,
                        "source_id": 4,
                        "approval_number": "0580932",
                        "voucher": "20-001-525",
                        "amount_by_currency": 1000,
                        "number_of_payments": 1,
                        "more_info": "test",
                        "secure3ds": null,
                        "transaction_at": "2021-10-31T09:09:55.633Z",
                        "card_date_mmyy": "0124",
                        "card_num": "0218",
                        "customer_name_invoice": "General Customer - לקוח כללי",
                        "source": {
                            "key": "myaccount-crm"
                        },
                        "currency": {
                            "currency_code": "ILS"
                        },
                        "customer": {
                            "uuid": "03a5734e-668a-444f-beef-a9376d4d967e",
                            "customer_name": "General Customer - לקוח כללי"
                        }
                    },
                    "cashier": {
                        "uuid": "d74f98d3-0437-41ba-9b53-4439c06b4a8d",
                        "name": "CashierEMV",
                        "number": 1
                    },
                    "error": {
                        "status_code": "4",
                        "key": "error-codes-terminal-type-3-code-4"
                    },
                    "alternative": null,
                    "brand": {
                        "name": "mastercard"
                    }
                }
            ],
            "pages": 1,
            "count": 1
        }
        

### Cancellations [POST /TransactionReports/CancelledTransactions]


+ Attributes 
    + terminal_uid: `e1396310-e3f8-461f-b80a-55b199211359` (string,required) 
    + filter (object,optional)
        + fromDate:`2021-01-01` (string,optional)
        + untilDate:`2021-02-01` (string,optional)
        + currency_code:`ILS` (string,optional)
        + customer_uid:`e1396310-e3f8-461f-b80a-55b199212599` (string,optional)
    + skip: 0 (string,optional) - From where you want to start take records.in this example you start from the first record
    + take: 5 (string,optional) - required if skip have some value. This means that you want take 5 records.
    
+ Request (application/json)

    + Headers

            Authorization: {"api_key":"a5f514de-c8c8-262a-ac31-31d609f3550a","secret_key":"404b1fd6-9fc5-1533-a121-126fa6cc0c8f"}

    + Body

            {
             
              "terminal_uid": "e67d7991-6b13-44de-94ff-95c9ca55be84",
              "currency_code": "ILS"
            }

    
+ Response 200 
        
        
        {
            "transactions": [
                {
                    "uuid": "da2959f4-e168-4e6a-9641-a0a24efc701c",
                    "transaction_type": "01",
                    "deposit_id": null,
                    "original_approval_id": "3702",
                    "original_paramj": "5",
                    "isAlternativePayment": false,
                    "number": "WXW2ld",
                    "created_at": "2021-10-31T09:14:00.128Z",
                    "cancel": {
                        "uuid": "d2b52b47-09c0-4f3f-b339-1d0a1a8379e1",
                        "cashier_id": "3",
                        "original_approval_id": "3703",
                        "number": "AHxv7b",
                        "created_at": "2021-10-31T10:55:17.767Z"
                    },
                    "information": {
                        "customer_bank_account_id": null,
                        "source_id": 4,
                        "approval_number": "0716055",
                        "voucher": "20-001-526",
                        "amount_by_currency": 500,
                        "number_of_payments": 1,
                        "more_info": "test1",
                        "secure3ds": null,
                        "transaction_at": "2021-10-31T09:13:59.771Z",
                        "card_date_mmyy": "0626",
                        "card_num": "3720",
                        "customer_name_invoice": "test",
                        "source": {
                            "key": "myaccount-crm"
                        },
                        "currency": {
                            "currency_code": "ILS"
                        },
                        "customer": {
                            "uuid": "7505193e-d010-4532-8319-6043ec622406",
                            "customer_name": "koko Jumbo"
                        }
                    },
                    "cashier": {
                        "uuid": "d74f98d3-0437-41ba-9b53-4439c06b4a8d",
                        "name": "CashierEMV",
                        "number": 1
                    },
                    "invoice": [
                        {
                            "uuid": "8c554a9d-e3c5-4dc7-a9ad-066d6372602c",
                            "platform_id": 5,
                            "canceled_id": 339,
                            "doc_type_id": 5,
                            "status": 3,
                            "res_status": "false",
                            "res_status_description": "אחד הפרטים שהזנת שגויים",
                            "res_doc_number": null,
                            "res_doc_original_url": null,
                            "res_doc_copy_url": null,
                            "created_at": "2021-10-31T11:00:41.508Z",
                            "updated_at": "2021-10-31T11:01:00.909Z",
                            "docType": {
                                "id": 5,
                                "transaction_type": "refund",
                                "name": "Credit Invoice"
                            }
                        }
                    ],
                    "brand": {
                        "name": "visa"
                    },
                    "alternative": null
                }
            ],
            "pages": 1,
            "count": 1
        }


### Invoice / Documents By Transaction UID [POST /Invoice/GetDocuments]


+ Attributes 
    + transaction_uid: `2da1dcc2-1b16-4e87-bb21-904acb43e178` (string,optional) 
    + filter (object,optional)
        + fromDate:`2021-01-01` (string,optional)
        + untilDate:`2021-12-01` (string,optional)

+ Request (application/json)

    + Headers

            Authorization: {"api_key":"a5f514de-c8c8-262a-ac31-31d609f3550a","secret_key":"404b1fd6-9fc5-1533-a121-126fa6cc0c8f"}

    
+ Response 200 
        
        
        {
            "invoices": [
                {
                        "status": "success",
                        "type": "Invoice Receipt",
                        "date": "16/02/2021 11:21",
                        "original_doc_url": "https://sandbox.d.greeninvoice.co.il/api/v1/documents/download?d=zAZeHKAQCb1DZkQ0yMWPfXbz827r92nIwjXCJh81%2BctUkp%2BrGSXhgSfFVWocDFCQ%2Fw5jkejpwalFJa9VOErmNCQMfSvt2wieVk7QK925B%2BhRpG2PKb9Gvw1CWYgYc4Ot7vEjVC%2F3tAudPk9wUlQ8pkWBiSJRsK35",
                        "copy_doc_url": "https://sandbox.d.greeninvoice.co.il/api/v1/documents/download?d=zAZeHKAQCb1AZkQ0yMWPfXbz827r92nIwjXCJh81%2BctUkp%2BrGSXhgSfFVWocDFCQ%2Fw5jkejpwalFJa9VOErmNCQMfSvt2wieVk7QK925B%2BhRpG2PKb9Gvw1CWYgYc4Ot7vEjVC%2F3tAudPk9wUlQ8pkWBiSRUvKv5"
                    },
                    {
                        "status": "success",
                        "type": "Credit Invoice",
                        "date": "16/02/2021 11:23",
                        "original_doc_url": "https://sandbox.d.greeninvoice.co.il/api/v1/documents/download?d=zAZeHKAQCb1DZkQ0yMWPfXbz827r92nIwjXCJh81%2BctUkp%2BrGSXh3XSVUjFND1OQ%2BV9lxejpk6wUJa9ZOxjmZSQIfn2%2Bi1vPXhnfK925B%2BhRpG2PKb9Gvw1DWYkaf4Ot7vEjVC%2F3tAudPk5xVlQ8pkWBgCNRsKr5",
                        "copy_doc_url": "https://sandbox.d.greeninvoice.co.il/api/v1/documents/download?d=zAZeHKAQCb1AZkQ0yMWPfXbz827r92nIwjXCJh81%2BctUkp%2BrGSXh3XSVUjFND1OQ%2BV9lxejpk6wUJa9ZOxjmZSQIfn2%2Bi1vPXhnfK925B%2BhRpG2PKb9Gvw1DWYkaf4Ot7vEjVC%2F3tAudPk5xVlQ8pkWBgyFXvKv5"
                }
            ]
        }

## Payment Pages [/PaymentPages/list/{?terminal_uid}]

### Payment Pages List [GET]

            
+ Parameters 
    + terminal_uid: `84aa6e4e-fe42-4d5f-b9cd-59dbc3817f10` (string,required) - Required Query variable.
 
+ Request (application/json)

    + Headers

            Authorization: {"api_key":"a5f514de-c8c8-262a-ac31-31d609f3550a","secret_key":"404b1fd6-9fc5-1533-a121-126fa6cc0c8f"}


+ Response 200 
    

        [
            {
                "uid": "4a07fca6-57b0-4e67-b4c0-eb3918bc24a5",
                "name": "paymentPage-1",
                "cashier_uid": "1bc7b001-d90c-43b3-a8bb-58ab8a3013ba",
                "terminal_uid": "97432e96-3c21-4eb2-9d64-1067e845b35a"
            },
            {
                "uid": "8be620f0-8010-44b9-91c8-40ece2a05377",
                "name": "paymentPage-2",
                "cashier_uid": "55da7f35-2c4f-4d5c-ab42-f7944b379097",
                "terminal_uid": "97432e96-3c21-4eb2-9d64-1067e845b35a"
            }
        ]

### Available Charge Methods [GET /PaymentPages/ChargeMethods/?{payment_page_uid} ]
 

+ Parameters
    + payment_page_uid: `84aa6e4e-fe42-4d5f-b9cd-59dbc3817f10` (string) - Your payment page uid in order to receive available payment methods

   
            
+ Request (application/json)

    + Headers

            Authorization: {"api_key":"a5f514de-c8c8-262a-ac31-31d609f3550a","secret_key":"404b1fd6-9fc5-1533-a121-126fa6cc0c8f"}


            
+ Response 200 
    

            {
            "results": {
                "status": "success",
                "code": 0,
                "description": "operation has been success"
            },
            "data": [
                {
                    "name": "credit-card",
                    "valid": true,
                    "default": true
                },
                {
                    "name": "multipass",
                    "valid": true,
                    "default": false
                },
                {
                    "name": "bit",
                    "valid": true,
                    "default": false
                },
                {
                    "name": "apple-pay",
                    "valid": false,
                    "default": false
                },
                {
                    "name": "google-pay",
                    "valid": true,
                    "default": false
                },
                {
                    "name": "paypal",
                    "valid": true,
                    "default": false
                }
            ]
        }



### Generate Payment Link [POST /PaymentPages/generateLink]

            
+ Attributes 
    + payment_page_uid: `e1396310-e3f8-461f-b80a-55b199211359` (string,required)
    + charge_method: 1 (number,required) - 0 - Check (J2), 1 - Charge (J4), 2 - Approval (J5), 3 - Recurring Payments, 4 - Refund (J4), 5 - Token (J2) - Charge method you would like to set the page, by default will take from the general settings when creating the page
    + charge_default: nullable (string,optional) - (credit-card, bit, apple-pay, google-pay, multipass, paypal If you have more then one option in your payment page, then you can decide which tab will be opened by default when user landing in the payment page)
    + hide_other_charge_methods: false (boolean,optional) - If you have multiple payment methods in your page with this option you will be able to hide other payment methods and manage the selection in your website
    + language_code: `he` (string,optional) - (Transfer the language code that displayed in your page, by default will take the general setting of the page)
    + amount: 10 (number,required)
    + currency_code: `ILS` (string,required)
    + sendEmailApproval: true (boolean,required)
    + sendEmailFailure: false (boolean,required)
    + expiry_datetime: 30 (string,optional) - number, minutes until page expired (if sent we will use it instead of payment page settings)
    + refURL_success: `https://www.domain.com/success/` (string,optional) - nullable (if sent we will use it instead of payment page settings)
    + refURL_failure: `https://www.domain.com/failure/` (string,optional) - nullable (if sent we will use it instead of payment page settings)
    + refURL_cancel: `https://www.domain.com/cancel/` (string,optional) - nullable (if sent we show "Return To Site" and linked to the url provided instead of payment page settings)
    + refURL_callback: `https://www.domain.com/callback/` (string,optional) - nullable (if sent we will use it instead of payment page settings)
    + custom_invoice_name: `Customer Name` (string,optional) - nullable (In case you have integrated invoice company you can decide if the invoice customer name will be different then the "customer_name" parameter in customer object)
    + create_token: false (boolean,optional) - nullable (In case you have tokenization permission, you can decide if you would like to return the token of the customer for future charges)
    + initial_invoice: false (boolean,optional) - nullable (In case you have invoice company and it's activated in your payment page, you can decide if for spesfic transaction invoice will be initial or not, to use default please don't send this parameter at all)
    + invoice_language: false (boolean,optional) - nullable (In this field you can send the language of the invoice you would like us to send to your invoice company. In case this field will not be sent, language will be default setting)
    + paying_vat: true (boolean,optional) - nullable (In case you would like that tax document will be include VAT or not included VAT, This parameter is not required)
    + hide_payments_field: false (boolean,optional) - nullable (Option to hide payments field for foreign transactions that acquires are not supported)
    + payments: 5 (number,optional) - nullable (if sent this will be the amount of installments for the payment)
    + payments_credit: false (boolean,optional) - nullable (Option to make credit transaction, number of payments will be minimum 3 and maximum based on `payments` value)
    + payments_selected: 2 (number,optional) - nullable (if sent then the number of the payments will be as selected in the payment page)
    + payments_first_amount: 5 (number,optional) - nullable (Works only if sending "payments_selected" and payplus will calculated other installments. First installment amount can be changed due to other payments)
    + hide_identification_id: false (boolean,optional) - nullable (Option to hide identification id field for foreign transactions)
    + send_customer_success_sms: false (boolean,optional) - If SMS package purchased the system will notify your customer by SMS
    + customer_failure_sms: false (boolean,optional) - If SMS package purchased the system will notify your customer by SMS
    + add_user_information: false (boolean,optional) - In case you would like to control the customer details form
    + allowed_cards: nullable (array,optional) - In case you would like to proceed just specific card brands (ex. ["mastercard","visa"])
    + allowed_bins: nullable (array,optional) - In case you would like to proceed just specific BINs in the specific transaction.
    + allowed_charge_methods: nullable (array,optional) - In case you would like to show specific payment methods options in the payment page (ex. ["credit-card","google-pay"])
    + more_info: `Payment Page` (string,optional) - nullable (Unique identifier of the transaction that will returned back to the merchant website when customer redirecting back)
    + more_info_1: `Additional Information 1` (string,optional) - nullable (Additional Information)
    + more_info_2: `Additional Information 2` (string,optional) - nullable (Additional Information)
    + more_info_3: `Additional Information 3` (string,optional) - nullable (Additional Information)
    + more_info_4: `Additional Information 4` (string,optional) - nullable (Additional Information)
    + more_info_5: `Additional Information 5` (string,optional) - nullable (Additional Information)
    + create_hash: false - nullable (Encrypt using Base64 the customer details object in the redirect back to your website and callback)
    + show_more_info: false - nullable (Show general information of the more_info's on the payment page if they sent)
    + support_track2: false - nullable (Support track2 in payment pages)
    + `customer` (object,optional) - nullable
        + uid: `eca3cc15-1bc1-417f-a3d5-30103679b3e0` (string,optional)-To allocate the payment to specific customer
        + customer_name: `Nadlan International LTD` (string,required)-Important in case you working with invoicing company
        + email: `david@example.com` (string,required)-By this field we will search for a customer and allocate the payment under the client
        + customer_external_number: `4323994877` (string,optional) - This field will be used to pass your external customer id from ERP or other system
        + vat_number: `036534683` (string,optional)-In case email are not sent, we will search for a customer by this field
        + phone: `0509111111` (string,optional)
        + address: `HaRokmim 12` (string,optional)
        + postal_code: `5814280` (string,optional)
        + city: `Tel-Aviv` (string,optional)
        + country_iso: `IL` (string,optional)
    + `items` (array,optional)  - nullable if send in item "product_uid" we will use this product or send error, if send "name" and not "product_uid" we will create new product with this name. more option to send if ("name" && !product_uid): vat_type, barcode, value,price.last option we will use default product.
        + (object)
            + name: `test product` (string,optional)
            + product_invoice_extra_details: `Some Variant` (string,optional) - Add content for invoice for product variant
            + product_uid: `a24015eb-5c21-4d4c-b385-882a97d3e5da` (string,optional)
            + image_url: `https://www.yourwebsite/product/image/url.jpg` (string,optional)
            + category_uid: `c48120eb-1c51-2a3q-b921-252a17d3e3da` (string,optional)
            + quantity: 1 (number,optional)
            + barcode: 432432 (string,optional)
            + value: 5 (number,optional)
            + price: 10 (number,optional) - Quantity of billable products
            + discount_type: `amount` (string,optional)-'percentage' OR 'amount'
            + discount_value: 0 (number,optional) 
            + shipping: false (boolean,optional)- Can be sent if you would like to show another line of shipping instead a product in the order summary table
            + vat_type: 0 (number,optional) - 'vat included' OR 1-'vat not included' OR 2- 'exempt vat'
            + guide_document_url: `https://www.someguidelink.com/" (string,optional) - Mostly used for invoies to send manual docmentation of a product when customer buying product
    + `recurring_settings` (object,optional) - nullable To use this setting recurring payments should be turn on and `charge_method` value should be 3
        + instant_first_payment: true (boolean,required)-Initial first payment immediately
        + recurring_type: 2 (number,required)-(0 - daily, 1- weekly, 2- monthly)
        + recurring_range: 1 (number,required)- What is the range of the payment, for example, is choosed in type `monthly` and in the range 1, then charge will be once a month. if range is 2, then every 2 months.
        + number_of_charges: 0 (number,required) - How much charges will be in the recurring payments, 0 - Unlimited
        + start_date_on_payment_date: true (boolean,required) - In case you would like to start the recurring payments on specific day.
        + start_date: 15 (string,required) - In case `start_date_on_payment_date` is false, you have to choose the start date of the recurring payments on specific day of the month for example 15th. In case the date is higher then the choosen day, the system will create for next month.
        + jump_payments: 0 (number,required) - Give free X days. If you would like to give one month free, then you can use 30 in this field and the system will give 30 days free till first charge.
        + successful_invoice: true (boolean,required)- In case invoice company is integrated, initial invoice for every successful payment
        + customer_failure_email: true (boolean,required)-Send e-mail to the customer for failure payment and inform him to contact the business to update payment details
        + send_customer_success_email: true (boolean ,required)-Send successful e-mail to customer when charge in placed
        + end_date: `2028-01-16` (string,optional)-When the recurring will stop, in case the recurring is unlimited.
    + `secure3d` (object,optional) - nullable To use default settings of the customer don't send this object, or if you would like to active or disable for this specific transaction
        + activate: true (boolean,required)-Activate 3D Secure for the spesific transaction.
        + id: `036222266` (string,optional)-Identification personal number of the person.
        + phone: `0546541232` (string,optional)-Cellular of the company to receive the verification SMS.
        
+ Request (application/json)
    + Headers

            Authorization: {"api_key":"a5f514de-c8c8-262a-ac31-31d609f3550a","secret_key":"404b1fd6-9fc5-1533-a121-126fa6cc0c8f"}
            
    + Body

            {
                "payment_page_uid": "baa3cc12-3bc1-417f-a3d5-70103679b6e0",
                "expiry_datetime": "30",
                "more_info": "test1554423",
                "refURL_success": "https://www.domain.com/success/",
                "refURL_failure": "https://www.domain.com/failure/",
                "refURL_callback": "https://www.domain.com/callback/",
                "customer": {
                    "customer_name":"David Levi",
                    "email":"david@gmail.com",
                    "phone":"0509111111",
                    "vat_number": "036534683"
                },
                "items": [
                    {
                        "name":"test product",
                        "quantity": 1,
                        "price": 10,
                        "vat_type" : 0
                        
                    }
                ],
                "amount": 10,
                "payments": 1,
                "currency_code": "ILS",
                "sendEmailApproval": true,
                "sendEmailFailure": false
            }


+ Response 200 
    

        {
            "results": {
                "status": "success",
                "code": 0,
                "description": "payment page link is been generated"
            },
            "data": {
                "page_request_uid": "f33f7a1f-5ea7-4857-992a-2da95b369f53",
                "payment_page_link": "https://payments.payplus.co.il/f33f7a1f-5ea7-4857-992a-2da95b369f53",
                "qr_code_image": "https://restapi.payplus.co.il/api/payment-pages/payment-request/f33f7a1f-5ea7-4857-992a-2da95b369f53/qr-code"
            }
        }

### Disable Payment Link Request  [POST /PaymentPages/Disable/:page_request_uid]
     
+ Attributes 
    + payment_request_uid: `e1396310-e3f8-461f-b80a-55b199211359` (string,required) - Payment Request UID you would like to disable

+ Request (application/json)

    + Headers

            Authorization: {"api_key":"a5f514de-c8c8-262a-ac31-31d609f3550a","secret_key":"404b1fd6-9fc5-1533-a121-126fa6cc0c8f"}


+ Response 200 
    

            {
            "results": {
                "status": "success",
                "code": 0,
                "description": "operation has been success"
            },
            "data": {
                "payment_request_uid": "53e0a58b-fcb3-4b11-8b89-47ed3db69fc4"
                }
            }
            

### IPN  [POST /PaymentPages/ipn]
     
+ Attributes 
    + payment_request_uid: `e1396310-e3f8-461f-b80a-55b199211359` (string,optional) - required if transaction uid without value. 
    + transaction_uid: `e1396310-e3f8-461f-b80a-553232vdsvS359` (string,optional) - required if payment request uid without value.
    + related_transaction: false (boolean,optional) - by default false, to receive all the related transactions for every transaction send `true`
    + approval_num: `8489738` (string,optional) - Receive transaction by approval number, This number can be repeated in other previous of your transaction and therefore search by this field will draw the latest transaction
    + voucher_num: `63-002-649` (string,optional) - Receive transaction by approval number, This number can be repeated in other previous of your transaction and therefore search by this field will draw the latest transaction
    + more_info: `AnyThing` (string,optional) - Search by transaction more info in case you sent
    
+ Request (application/json)

    + Headers

            Authorization: {"api_key":"a5f514de-c8c8-262a-ac31-31d609f3550a","secret_key":"404b1fd6-9fc5-1533-a121-126fa6cc0c8f"}


+ Response 200 
    

            {
                "results": {
                    "status": "success",
                    "code": 0,
                    "description": "operation has been success"
                },
                "data": {
                    "transaction_uid": "5368a242-76fe-4fe8-9946-4ef311ba31ae",
                    "page_request_uid": null,
                    "type": "Charge",
                    "method": "credit-card",
                    "number": "vrBebY",
                    "date": "2021-11-18 15:41:30",
                    "status": "approved",
                    "status_code": "000",
                    "status_description": "העסקה בוצעה בהצלחה",
                    "amount": 15,
                    "currency": "ILS",
                    "credit_terms": "regular",
                    "number_of_payments": 1,
                    "secure3D_status": false,
                    "secure3D_tracking": false,
                    "approval_num": "0812364",
                    "card_foreign": "99",
                    "voucher_num": "22-001-585",
                    "more_info": "test1",
                    "more_info_1": "Additional 1",
                    "more_info_2": "Additional 2",
                    "more_info_3": "Additional 3",
                    "more_info_4": "Additional 4",
                    "more_info_5": "Additional 5",
                    "add_data": null,
                    "customer_uid": "7505193e-d010-4532-8319-6043ec622406",
                    "terminal_uid": "83d218ac-478c-413a-ac79-fe63fe966de9",
                    "cashier_uid": "d74f98d3-0437-41ba-9b53-4439c06b4a8d",
                    "cashier_name": "CashierEMV",
                    "four_digits": "3712",
                    "expiry_month": "06",
                    "expiry_year": "26",
                    "alternative_name": "",
                    "alternative_method": false,
                    "customer_name": "Moshe Sino",
                    "customer_name_invoice": "John",
                    "identification_number": "",
                    "clearing_id": 6,
                    "brand_id": 3,
                    "issuer_id": "1",
                    "extra_3": null,
                    "card_holder_name": null,
                    "card_bin": null,
                    "clearing_name": "MAX",
                    "brand_name": "visa",
                    "issuer_name": "isracard",
                    "items": [
                        {
                            "product_uid": "a37d1b3f-4bbd-4f8d-811c-1447822679cc",
                            "name": "מינוי חודשי",
                            "price": 15,
                            "quantity": 1,
                            "discount_value": null,
                            "discount_type": null,
                            "product_invoice_extra_details": null,
                            "barcode": "511AB442"
                        }
                    ],
                    "related_transactions": {
                        "parent": [
                            {
                                "transaction_uid": "b4a9948f-e71e-40ef-9d3b-fa447650c500",
                                "page_request_uid": "2e1d125f-64b1-4d51-99fc-795dfbcd50c8",
                                "type": "Approval",
                                "method": "credit-card",
                                "number": "GALyom",
                                "date": "2021-11-18 15:39:00",
                                "status": "approved",
                                "status_code": "000",
                                "status_description": "העסקה בוצעה בהצלחה",
                                "amount": 20,
                                "currency": "ILS",
                                "credit_terms": "regular",
                                "number_of_payments": 1,
                                "secure3D_status": true,
                                "secure3D_tracking": false,
                                "approval_num": "0812364",
                                "card_foreign": "99",
                                "voucher_num": "22-001-585",
                                "more_info": "test1",
                                "add_data": null,
                                "customer_uid": "7505193e-d010-4532-8319-6043ec622406",
                                "terminal_uid": "83d218ac-478c-413a-ac79-fe63fe966de9",
                                "cashier_uid": "d74f98d3-0437-41ba-9b53-4439c06b4a8d",
                                "cashier_name": "CashierEMV",
                                "four_digits": "3712",
                                "expiry_month": "06",
                                "expiry_year": "26",
                                "alternative_name": "",
                                "alternative_method": false,
                                "customer_name": "Moshe Sino",
                                "customer_name_invoice": "John",
                                "identification_number": "",
                                "clearing_id": 6,
                                "brand_id": 3,
                                "issuer_id": "1",
                                "extra_3": null,
                                "card_holder_name": "John",
                                "card_bin": null,
                                "clearing_name": "MAX",
                                "brand_name": "visa",
                                "issuer_name": "isracard"
                            }
                        ],
                        "childs": [
                            {
                                "transaction_uid": "d8a10672-3a25-4611-88da-49ddba2f390d",
                                "page_request_uid": null,
                                "type": "Refund",
                                "method": "credit-card",
                                "number": "7yLC49",
                                "date": "2021-11-28 12:59:17",
                                "status": "approved",
                                "status_code": "000",
                                "status_description": "העסקה בוצעה בהצלחה",
                                "amount": 5,
                                "currency": "ILS",
                                "credit_terms": "regular",
                                "number_of_payments": 1,
                                "secure3D_status": false,
                                "secure3D_tracking": false,
                                "approval_num": "0837177",
                                "card_foreign": "99",
                                "voucher_num": "22-002-001",
                                "more_info": "test1",
                                "add_data": null,
                                "customer_uid": "7505193e-d010-4532-8319-6043ec622406",
                                "terminal_uid": "83d218ac-478c-413a-ac79-fe63fe966de9",
                                "cashier_uid": "d74f98d3-0437-41ba-9b53-4439c06b4a8d",
                                "cashier_name": "CashierEMV",
                                "four_digits": "3712",
                                "expiry_month": "06",
                                "expiry_year": "26",
                                "alternative_name": "",
                                "alternative_method": false,
                                "customer_name": "Moshe Sino",
                                "customer_name_invoice": "John",
                                "identification_number": "",
                                "clearing_id": 6,
                                "brand_id": 3,
                                "issuer_id": "1",
                                "extra_3": null,
                                "card_holder_name": null,
                                "card_bin": "455743",
                                "clearing_name": "MAX",
                                "brand_name": "visa",
                                "issuer_name": "isracard",
                                "invoice_uuid": "02f69dab-ce3a-4aba-b52f-c9c7ae243c97",
                                "invoice_docu_number": null,
                                "invoice_original_url": null,
                                "invoice_copy_url": null,
                                "invoice_integrator_name": "InvoiceCompany",
                                "invoice_status": "Failed"
                            }
                        ]
                    }
                }
            }

## Successful Redirect Response [GET /Successful ]

+ Response 200 
    
    
        {
            [transaction_uid] => e6228e7d-e770-4371-9a5b-335e5a51dd27
            [page_request_uid] => 7712bc5a-37dc-4ecb-b63a-3974637e493c
            [is_multiple_transaction] => 
            [type] => Charge
            [method] => credit-card
            [number] => VdOzii
            [date] => 2022-01-09 16:33:09
            [status] => approved
            [status_code] => 000
            [status_description] => העסקה בוצעה בהצלחה
            [amount] => 62
            [currency] => ILS
            [credit_terms] => payments
            [number_of_payments] => 3
            [secure3D_status] => 
            [secure3D_tracking] => 
            [approval_num] => 5019440
            [card_foreign] => 99
            [voucher_num] => 01-001-820
            [more_info] => orion19379
            [add_data] => 
            [customer_uid] => e9e8453a-d112-4b80-8d4a-d830ead003d6
            [customer_email] => test@test.com
            [company_name] => Company Test
            [company_registration_number] => 102088
            [terminal_uid] => d948cb3e-ec1b-488b-93fc-c660a591e805
            [terminal_name] => test terminal yoni
            [terminal_merchant_number] => 0882714012
            [cashier_uid] => 9c7d3766-3cce-46a2-8ca3-a50240c35ba2
            [cashier_name] => BDIKA
            [four_digits] => 1175
            [expiry_month] => 04
            [expiry_year] => 26
            [alternative_method] => 
            [customer_name] => בסטה בדיקה
            [customer_name_invoice] => ts
            [identification_number] => 036220044
            [clearing_id] => 5
            [brand_id] => 10
            [issuer_id] => 1
            [extra_3] => 
            [card_holder_name] => בדיקה
            [card_bin] => 375510
            [clearing_name] => amex
            [brand_name] => amex
            [issuer_name] => isracard
            [first_payment_amount] => 20.66
            [rest_payments_amount] => 20.67
        }


### Failure Redirect Response [GET /Failure]

+ Response 200 
    
    
        {
            [transaction_uid] => db0a3cb5-5168-4df7-830c-ca0b88184613
            [page_request_uid] => f33f7a1f-5ea7-4857-992a-2da95b369f53
            [type] => Charge / Approval / Check
            [method] => credit-card / bit / paypal / buyme
            [number] => 7212
            [date] => 2021-01-28 15:35:55
            [status] => rejected
            [status_code] => 003
            [status_description] => התקשר לחברת האשראי
            [amount] => 10
            [currency] => ILS
            [credit_terms] => regular / payments / credit
            [number_of_payments] => 1
            [first_payment_amount] =>
            [rest_payments_amount] =>
            [secure3D_status] => false
            [secure3D_tracking] => false
            [approval_num] => 
            [voucher_num] => 28-480-715
            [more_info] =>
            [customer_name] => יוסי אלימלך
            [identification_number] => 014440022
            [customer_uid] => c01dd650-9f8a-4d42-8f92-a4809a74e5d4
            [terminal_uid] => 97432e96-3c21-4eb2-9d64-1067e845b35a
            [cashier_uid] => 1bc7b001-d90c-43b3-a8bb-58ab8a3013ba
            [card_holder_name] => Moshe Cohen
            [four_digits] => 1175
            [expiry_month] => 06
            [expiry_year] => 25
            [clearing_id] => 5
            [clearing_name] => amex
            [card_foreign] => 99
            [brand_id] => 2
            [brand_name] => mastercard
            [issuer_id] => 6
            [issuer_name] => max
            [card_bin] => 375510
            [alternative_method] => true
            [alternative_method_id] => 6
            [alternative_method_name] => apple-pay
        }
            

## Coupons [/Coupons]

### List Coupons Group [GET /Coupons/ListGroup]

+ Attributes
    + skip: `1` (string,optional) - Number of the page to be filtered
    + take: `25` (string,optional) - Number of records for every page
    
+ Request (application/json)

    + Headers

            Authorization: {"api_key":"a5f514de-c8c8-262a-ac31-31d609f3550a","secret_key":"404b1fd6-9fc5-1533-a121-126fa6cc0c8f"}
    
+ Response 200 

           {
           "data":[
              {
                 "uid":"55b19a20-ff38-44d0-acbb-3c361e527287",
                 "name":"asdasd",
                 "external_id":"aSas",
                 "times_to_use":1,
                 "valid_till_date":null,
                 "valid_from_date":"27/10/2022",
                 "created_at":"27/10/2022",
                 "coupons_count":200,
                 "amount":3,
                 "percent":2,
                 "currency_code":"ILS",
                 "customer_name":null
              }
           ],
           "pages":1,
           "count":1
        }

### Group Details [GET /Coupons/GroupDetails/:{coupon_group_uid}]

+ Parameters 
    + coupon_group_uid: `e1396310-e3f8-461f-b80a-55b199211359` (string,required) - Required Path variable

+ Request (application/json)

    + Headers

            Authorization: {"api_key":"a5f514de-c8c8-262a-ac31-31d609f3550a","secret_key":"404b1fd6-9fc5-1533-a121-126fa6cc0c8f"}
    
+ Response 200
    
            {
               "results":{
                  "status":"success",
                  "code":0,
                  "description":"operation has been success"
               },
               "data":{
                  "name": "asdasd",
                  "external_id": "aSas",
                  "amount": 3,
                  "percent": 2,
                  "currency_code": "ILS",
                  "times_to_use": 1,
                  "first_order_only": true,
                  "customer_uid": null,
                  "valid_from_date": "2022-10-27",
                  "valid_till_date": null,
                  "minimal_amount": 0,
                  "specific_category_uid": "5e6f0ccc-0722-46b4-a4fd-3208659e0f4e",
                  "specific_products_uids": [
                        {
                            "name":"Tv 2",
                            "barcode":"1233456678",
                            "price":117,
                            "currency_code":"ILS",
                            "vat_type":0,
                            "uuid":"3c248f95-17f1-4c72-83d8-faa7bc5f37ef"
                        }
                  ],
                  "original_amount_discount":true,
                  "use_on_shipping":true,
                  "shop_discount":false
               }
            }


### Delete Group [POST /Coupons/DeleteGroup/:{coupon_group_uid}]

+ Parameters 
    + coupon_group_uid: `e1396310-e3f8-461f-b80a-55b199211359` (string,required) - Required Path variable

+ Request (application/json)

    + Headers

            Authorization: {"api_key":"a5f514de-c8c8-262a-ac31-31d609f3550a","secret_key":"404b1fd6-9fc5-1533-a121-126fa6cc0c8f"}
    
+ Response 200 

            {
               "results":{
                  "status":"success",
                  "code":0,
                  "description":"operation has been success"
               },
               "data":{
                  
               }
            }


### List Coupons In Group [GET /Coupons/ListCouponsInGroup/:{coupon_group_uid}]

+ Parameters 
    + coupon_group_uid: `e1396310-e3f8-461f-b80a-55b199211359` (string,required) - Required Path variable

+ Request (application/json)
    + Headers

            Authorization: {"api_key":"a5f514de-c8c8-262a-ac31-31d609f3550a","secret_key":"404b1fd6-9fc5-1533-a121-126fa6cc0c8f"}

+ Response 200 
    
        {
           "data":[
                {
                    "uid": "e902d421-85b7-4b88-ada0-193f7e473dec",
                    "code": "CBlDrY",
                    "times_to_use": 1,
                    "used_count": 0,
                    "valid_till_date": null,
                    "created_at": "27/10/2022",
                    "valid_from_date":"27/10/2022",
                    "amount": 3,
                    "percent": 2,
                    "currency_code": "ILS",
                    "customer_name": null
                }
           ],
           "pages":1,
           "count":1
        }

### Coupon Details [GET /Coupons/CouponDetails/:{coupon_uid}]


+ Parameters 
    + coupon_uid: `e1396310-e3f8-461f-b80a-55b199211359` (string,required) - Required Path variable


+ Request (application/json)

    + Headers

            Authorization: {"api_key":"a5f514de-c8c8-262a-ac31-31d609f3550a","secret_key":"404b1fd6-9fc5-1533-a121-126fa6cc0c8f"}
    
+ Response 200

            {
               "results":{
                  "status":"success",
                  "code":0,
                  "description":"operation has been success"
               },
               "data":{
                  "amount":3,
                  "percent":2,
                  "currency_code":"ILS",
                  "times_to_use":1,
                  "first_order_only":true,
                  "customer_uid":null,
                  "valid_from_date":"2022-10-27",
                  "valid_till_date":null,
                  "minimal_amount":0,
                  "original_amount_discount":true,
                  "use_on_shipping":true,
                  "shop_discount":false
               }
            }


### Delete Coupon [POST /Coupons/DeleteCoupon/:{coupon_uid}]

+ Parameters 
    + coupon_uid: `e1396310-e3f8-461f-b80a-55b199211359` (string,required) - Required Path variable

+ Request (application/json)

    + Headers

            Authorization: {"api_key":"a5f514de-c8c8-262a-ac31-31d609f3550a","secret_key":"404b1fd6-9fc5-1533-a121-126fa6cc0c8f"}
    

+ Response 200

            {
               "results":{
                  "status":"success",
                  "code":0,
                  "description":"operation has been success"
               },
               "data":{
                  
               }
            }


## Cashiers [/Cashiers]

### Add Cashier [POST /Cashiers/Add]

+ Attributes
    + terminal_uid: `97432e96-3c21-4eb2-9d64-1067e845b35a` (string,required) - Terminal UID mandatory variable!
    + name: `cashier-01-sample` (string,required) - Cashier name you would like to remove OR;
    + number: `5` (string,optional) - Cashier number you would like to add.

            
+ Request (application/json)

    + Headers

            Authorization: {"api_key":"a5f514de-c8c8-262a-ac31-31d609f3550a","secret_key":"404b1fd6-9fc5-1533-a121-126fa6cc0c8f"}
    
+ Response 200 
        
            {
            "results": {
                "status": "success",
                "code": 0,
                "description": "operation has been success"
            },
            "data": {
                "cashier_uid": "bdac9a04-7dfa-4914-82e7-b667817e3998",
                "cashier_name": "Sample cashier",
                "cashier_number": 7
            }
        }

### Remove Cashier [POST /Cashiers/Remove]

+ Attributes
    + terminal_uid: `97432e96-3c21-4eb2-9d64-1067e845b35a` (string,required) - Terminal UID mandatory variable!
    + cashier_uid: `e1396310-e3f8-461f-b80a-55b199211359` (string,optional) - Cashier UID you would like to remove OR;
    + cashier_name: `cashier-01-sample` (string,optional) - Cashier name you would like to remove OR;
    + cashier_number: `5` (string,optional) - Cashier number you would like to remove.

            
+ Request (application/json)

    + Headers

            Authorization: {"api_key":"a5f514de-c8c8-262a-ac31-31d609f3550a","secret_key":"404b1fd6-9fc5-1533-a121-126fa6cc0c8f"}
    
+ Response 200 
        
            {
            "results": {
                "status": "success",
                "code": 0,
                "description": "operation has been success"
            },
            "data": {
                "cashier_uid": "6394b879-0430-4ac5-b036-00c919a6512f"
            }
        }


### Reset Cashier Removal [POST /Cashiers/ResetRemove]

+ Attributes
    + terminal_uid: `a5f514de-c8c8-262a-ac31-31d609f3550a` (string,required) - Terminal UID mandatory variable!
    + cashier_uid: `e1393310-e3f8-461f-b80a-33b199211351` (string,optional) - Cashier UID you would like to remove OR;
    + cashier_name: `cashier-01-sample` (string,optional) - Cashier name you would like to remove OR;
    + cashier_number: `5` (string,optional) - Cashier number you would like to remove.

            
+ Request (application/json)

    + Headers

            Authorization: {"api_key":"a5f514de-c8c8-262a-ac31-31d609f3550a","secret_key":"404b1fd6-9fc5-1533-a121-126fa6cc0c8f"}
    
+ Response 200 
        
            {
            "results": {
                "status": "success",
                "code": 0,
                "description": "operation has been success"
            },
            "data": {
                "cashier_uid": "6394b879-0430-4ac5-b036-00c919a6512f"
            }
        }

## Devices [/Device/TransactionByDevice]

### TransactionByDevice [POST]

            
+ Attributes 
    + device_uid: `e1396310-e3f8-461f-b80a-55b199211359` (string,required) - Device UID from PayPlus System
    + cashier_uid: `e1793320-e3f8-461f-c20a-30103679b3e0` (string,optional) - Cashier UID from PayPlus System
    + charge_method: 1 (number,required) - 0 - Check (J2), 1 - Charge (J4), 2 - Approval (J5), 4 - Refund (J4) - The transaction type you would like to start with the customer
    + callback_url: `https://www.domain.com/callback/` (string,optional) - nullable (We will send you feedback once the transaction approved)
    + create_token: false (boolean,optional) - nullable (In case you have tokenization permission, you can decide if you would like to return the token of the customer for future charges)
    + initial_invoice: false (boolean,optional) - nullable (In case you have invoice company and it's activated in your payment page, you can decide if for spesfic transaction invoice will be initial or not, to use default please don't send this parameter at all)
    + custom_invoice_name: `Customer Name` (string,optional) - nullable (In case you have integrated invoice company you can decide if the invoice customer name will be different then the "customer_name" parameter in customer object)
    + amount: 10 (number,required)
    + currency_code: `ILS` (string,required)
    + credit_terms: 1 (number,required) - 1-regular OR 6-credit OR 8-payment
    + paying_vat: true (boolean,optional) - nullable (In case you would like to that invoice / document will be with VAT or without VAT, This parameter is not required)
    + customer_uid: `eca3cc15-1bc1-417f-a3d5-30103679b3e0` (string,optional)-To allocate the payment to specific customer
    + `customer` (object,optional) - nullable
        + customer_name: `Nadlan International LTD` (string,required)-Important in case you working with invoicing company
        + email: `david@gmail.com` (string,required)-By this field we will search for a customer and allocate the payment under the client
        + full_name: `David Levi` (string,optional)-In case the customer is a company, contact personal name can be sent using this field
        + vat_number: `036534683` (string,optional)-In case email are not sent, we will search for a customer by this field
        + phone: `0509111111` (string,optional)
        + cell_phone: `0509111111` (string,optional)
        + address: `HaRokmim 12` (string,optional)
        + city: `Tel-Aviv` (string,optional)
        + country_ISO: `IL` (string,optional)
    + `products` (array,optional)  - nullable if send in item "product_uid" we will use this product or send error, if send "name" and not "product_uid" we will create new product with this name. more option to send if ("name" && !product_uid): vat_type, barcode, value,price.last option we will use default product.
        + (object)
            + name: "test product" (string,optional)
            + product_invoice_extra_details: "Some Variant" (string,optional) - Add content for invoice for product variant
            + product_uid: "a24015eb-5c21-4d4c-b385-882a97d3e5da" (string,optional)
            + image_url: "https://www.yourwebsite/product/image/url.jpg" (string,optional)
            + category_uid: "c48120eb-1c51-2a3q-b921-252a17d3e3da" (string,optional)
            + quantity: 1 (number,optional)
            + barcode: 432432 (string,optional)
            + value: 5 (number,optional)
            + price: 10 (number,optional) - Quantity of billable products
            + discount_type: "amount" (string,optional)-'percentage' OR 'amount'
            + discount_value: 0 (number,optional) 
            + shipping: false (boolean,optional)- Can be sent if you would like to show another line of shipping instead a product in the order summary table
            + vat_type: 0 (number,optional) - 'vat included' OR 1-'vat not included' OR 2- 'exempt vat'
    + payments - Optional
        + number:1 (number) - Number of payments
        + first_amount:0 (number) - First Payment
        + nonfirst_amount:0 (number) - Remaining payments
    + extra_info: `` (string,optional)
    + minimize_app: false (boolean,optional) - Option to popup and minimize PayPlus application after transaction completed.
       
+ Request (application/json)

    + Headers

            Authorization: {"api_key":"a5f514de-c8c8-262a-ac31-31d609f3550a","secret_key":"404b1fd6-9fc5-1533-a121-126fa6cc0c8f"}


+ Response 200 
    
    
        {
           "results":{
              "status":"success",
              "code":0,
              "description":"operation has been success"
           },
           "data":{
              "transaction":{
                 "uid":"4ff5d46b-4929-491a-896d-6f846fb7eddf",
                 "number":"SLik8Y",
                 "type":"EMV pinpad",
                 "date":"2021-10-25 15:41:33",
                 "status_code":"000",
                 "amount":5,
                 "currency":"ILS",
                 "credit_terms":"regular",
                 "payments":{
                    "number_of_payments":1,
                    "first_payment_amount":0,
                    "rest_payments_amount":0
                 },
                 "secure3D":{
                    "status":false,
                    "tracking":null
                 },
                 "approval_number":"4687869",
                 "voucher_number":"13-001-056",
                 "more_info":"transaction-test",
                 "add_data":null
              },
              "data":{
                 "customer_uid":"fee334d0-bb8b-489d-9b7b-51327d55fbc5",
                 "terminal_uid":"b964a199-7176-4982-acbe-553decba2e67",
                 "cashier_uid":"575bacea-22e1-41ad-ada9-6fc7a350a4c8",
                 "cashier_name":"01",
                 "items":[
                    {
                       "name":"חסה עגולה",
                       "discount_amount":0,
                       "discount_type":null,
                       "discount_value":null,
                       "quantity":1,
                       "quantity_price":4.27,
                       "vat":null
                    }
                 ],
                 "card_information":{
                    "token":"19be1de9-a3e8-496d-8d61-38f3653431df8054",
                    "four_digits":"8054",
                    "expiry_month":"06",
                    "expiry_year":"26",
                    "clearing_id":5,
                    "brand_id":10,
                    "issuer_id":1
                 }
              }
           }
        }
    

### List [GET /Device/List?device_uid=:{device_uid}&terminal_uid=:{terminal_uid}&cashier_uid=:{cashier_uid}]

+ Parameters 
    + device_uid: `10a769e6-787b-4168-baf0-a20eaec2d7ed` (string,optional) - Optional Path variable OR;
    + terminal_uid: `21d0d123-bdda-4970-a0aa-9640cb9fdaad` (string,optional) - Optional Path variable OR;
    + cashier_uid: `28aa2e2e-fe82-2d5f-b9cd-59dbc3817f10` (string,optional) - Optional Path variable OR;

+ Request (application/json)

    + Headers

            Authorization: {"api_key":"a5f514de-c8c8-262a-ac31-31d609f3550a","secret_key":"404b1fd6-9fc5-1533-a121-126fa6cc0c8f"}


+ Response 200 
    
    
        {
            "data": [
                {
                    "device_uid": "10a769e6-787b-4168-baf0-a20eaec2d7ed",
                    "device_name": "Sample Device 01",
                    "device": "Z-Q3",
                    "user_identity": null,
                    "com_port": "9",
                    "valid": true
                },
                {
                    "device_uid": "21d0d123-bdda-4970-a0aa-9640cb9fdaad",
                    "device_name": "Sample Device 02",
                    "device": "VX805",
                    "user_identity": null,
                    "com_port": null,
                    "valid": true
                },
                {
                    "device_uid": "28aa2e2e-fe82-2d5f-b9cd-59dbc3817f10",
                    "device_name": "Sample Device 03",
                    "device": "S300",
                    "user_identity": null,
                    "com_port": null,
                    "valid": true
                }
            ]
        }

## Deposit [/Deposit/list/{?terminal_uid}{?deposit_uid}{?fromDate}{?untilDate}{?currency_code}{?skip}{?take}]

### List [GET]

+ Parameters 
    + terminal_uid: `84aa6e4e-fe42-4d5f-b9cd-59dbc3817f10` (string) - Required Query variable.
    + fromDate: `2020-01-01` (string) - Required Query variable.
    + untilDate: `2020-12-12` (string) - Required Query variable.
    + currency_code: `ILS` (string,optional) - Optional Query variable.
    + deposit_uid: `84aa6e4e-fe42-4d5f-b9cd-59dbc3817c34` (string,optional) - Optional Query variable.
    + skip: 0 (string,optional) - Optional Query variable, From where you want to start take records.in this example you start from the first record
    + take: 5 (string,optional) - required if skip have some value. This means that you want take 5 records.

       
+ Request (application/json)

    + Headers

            Authorization: {"api_key":"a5f514de-c8c8-262a-ac31-31d609f3550a","secret_key":"404b1fd6-9fc5-1533-a121-126fa6cc0c8f"}


+ Response 200 
    
    
        {
            "data": [
                {
                    "date": "20/09/2022 23:05",
                    "currency_code": "ILS",
                    "flag_difference": 0,
                    "uuid": "1ab20ce0-469a-2196-8bad-ddc2bddaf0ad",
                    "currency_sign": "₪",
                    "deposit_id": 321368,
                    "reference_number": "19801110",
                    "total_transaction": 29,
                    "details": [
                        {
                            "key": 2,
                            "clearing_name": "isracard",
                            "value": {
                                "charged": 2600,
                                "refunded": 0
                            }
                        },
                        {
                            "key": 6,
                            "clearing_name": "MAX",
                            "value": {
                                "charged": 2050,
                                "refunded": 0
                            }
                        }
                    ],
                    "total_debit_amount": 4650,
                    "total_credit_amount": 0,
                    "alternative_method": null
                },
                {
                    "date": "19/09/2022 23:04",
                    "currency_code": "ILS",
                    "flag_difference": 0,
                    "uuid": "bfd4be1d-f3e4-464d-9062-4509ca411031",
                    "currency_sign": "₪",
                    "deposit_id": 220850,
                    "reference_number": "12177773",
                    "total_transaction": 20,
                    "details": [
                        {
                            "key": 2,
                            "clearing_name": "isracard",
                            "value": {
                                "charged": 2000,
                                "refunded": 0
                            }
                        },
                        {
                            "key": 6,
                            "clearing_name": "MAX",
                            "value": {
                                "charged": 1000,
                                "refunded": 0
                            }
                        }
                    ],
                    "total_debit_amount": 3000,
                    "total_credit_amount": 0,
                    "alternative_method": null
                },
                {
                    "date": "18/09/2022 23:03",
                    "currency_code": "ILS",
                    "flag_difference": 0,
                    "uuid": "b35b32af-2993-49f9-425a-4f9b04633b10",
                    "currency_sign": "₪",
                    "deposit_id": 319686,
                    "reference_number": "65290044",
                    "total_transaction": 17,
                    "details": [
                        {
                            "key": 6,
                            "clearing_name": "MAX",
                            "value": {
                                "charged": 2450,
                                "refunded": 0
                            }
                        },
                        {
                            "key": 2,
                            "clearing_name": "isracard",
                            "value": {
                                "charged": 2250,
                                "refunded": 0
                            }
                        }
                    ],
                    "total_debit_amount": 4700,
                    "total_credit_amount": 0,
                    "alternative_method": null
                }
            ],
            "deposits_summary": [
                {
                    "clearings_array": [
                        {
                            "charges": 5500,
                            "clearing_id": 6,
                            "clearing_name": "MAX",
                            "currency_code": "ILS",
                            "refunded": 0,
                            "total_count": 25
                        },
                        {
                            "charges": 6850,
                            "clearing_id": 2,
                            "clearing_name": "isracard",
                            "currency_code": "ILS",
                            "refunded": 0,
                            "total_count": 41
                        }
                    ],
                    "totalCount": 66,
                    "amountTotal": 12350,
                    "currency_code": "ILS",
                    "amountTotalCharge": 12350,
                    "amountTotalRefunded": 0
                }
            ],
            "pages": 1,
            "count": 6
        }
        

### View [GET /Deposit/View/:{deposit_uid}?terminal_uid=:{terminal_uid}]

            
+ Parameters 
    + deposit_uid: `b35b32af-2993-49f9-425a-4f9b04633b10` (string,required) - Required Path variable.
    + terminal_uid: `b35b32af-2993-49f9-425a-4f9b04633b10` (string,required) - Required Path variable.
 
+ Request (application/json)

    + Headers

            Authorization: {"api_key":"a5f514de-c8c8-262a-ac31-31d609f3550a","secret_key":"404b1fd6-9fc5-1533-a121-126fa6cc0c8f"}


+ Response 200 
    

        {
            "data": [
                {
                    "date": "20/12/2020",
                    "currency_code": "ILS",
                    "currency_sign": "₪",
                    "deposit_uid": "a24015eb-5c21-4d4c-b385-882a97d3e5da",
                    "reference_number": "7762276",
                    "total_transaction": 1,
                    "details": [
                        {
                            "key": 5,
                            "clearing_name": "amex",
                            "value": {
                                "charged": 5,
                                "refunded": 0
                            }
                        }
                    ],
                    "total_debit_amount": 5,
                    "total_credit_amount": 0
                }
            ],
            "deposits_summary": [
                {
                    "clearings_array": [
                        {
                            "charges": 5348.4,
                            "clearing_id": 5,
                            "clearing_name": "amex",
                            "currency_code": "ILS",
                            "refunded": 0,
                            "total_count": "51"
                        },
                        {
                            "charges": 810,
                            "clearing_id": 6,
                            "clearing_name": "MAX",
                            "currency_code": "ILS",
                            "refunded": 0,
                            "total_count": "9"
                        }
                    ],
                    "totalCount": 60,
                    "amountTotal": 6158.4,
                    "currency_code": "ILS",
                    "amountTotalCharge": 6158.4,
                    "amountTotalRefunded": 0
                }
            ]
        }

## SMS Contacts [/SMS/Contacts]

        
### CreateContact [POST /SMS/CreateContact]

+ Attributes
    + first_name: `Israel` (string,optional)
    + last_name: `Israeli` (string,optional)
    + phone: `9725346587912` (string,required)
    + customer_uid: `a24015eb-5c21-4d4c-b385-882a97d3e5da` (string,optional)
    + birthday: `24-02-1987` (string,optional)
    + language_code: `HE` (string,optional)

+ Request (application/json)

    + Headers

            Authorization: {"api_key":"a5f514de-c8c8-262a-ac31-31d609f3550a","secret_key":"404b1fd6-9fc5-1533-a121-126fa6cc0c8f"}

    
+ Response 200 
        
        {
            "results": {
                "status": "success",
                "code": 0,
                "description": "operation has been success"
            },
            "data": {
                "first_name": "test",
                "last_name": "test last name",
                "phone": "05412345634",
                "language_code": "he",
                "birthday": "1990-06-01",
                "uid": "0fcc784c-7c3d-4c37-81b1-0ccde079a13e"
            }
        }

### UpdateContact [POST /SMS/UpdateContact/:contact_uid]

+ Attributes
    + first_name: `Israel` (string,optional)
    + last_name: `Israeli` (string,optional)
    + phone: `9725346587912` (string,required)
    + customer_uid: `a24015eb-5c21-4d4c-b385-882a97d3e5da` (string,optional)
    + birthday: `24-02-1987` (string,optional)
    + language_code: `HE` (string,optional)

+ Request (application/json)

    + Headers

            Authorization: {"api_key":"a5f514de-c8c8-262a-ac31-31d609f3550a","secret_key":"404b1fd6-9fc5-1533-a121-126fa6cc0c8f"}

    
+ Response 200 
        
        {
            "results": {
                    "status": "success",
                    "code": 0,
                    "description": "operation has been success"
                },
                "data": {
                    "first_name": "test",
                    "last_name": "test last name",
                    "phone": "05412345623",
                    "language_code": "he",
                    "birthday": "1990-06-01",
                    "uid": "0fcc784c-7c3d-4c37-81b1-0ccde079a13e"
                }
        }


### DeleteContacts [POST /SMS/DeleteContacts]

+ Attributes
    + contacts_uid: `Israel` (array,required)

+ Request (application/json)

    + Headers

            Authorization: {"api_key":"a5f514de-c8c8-262a-ac31-31d609f3550a","secret_key":"404b1fd6-9fc5-1533-a121-126fa6cc0c8f"}

    
+ Response 200 
        
        {
            "results": {
                "status": "success",
                "code": 0,
                "description": "operation has been success"
            },
            "data": {}
        }        



### ToggleStatus [POST /SMS/ToggleStatus/:contact_uid]

+ Attributes
    + status: `inactive` (string,required) - Values that can be send are: active, inactive, blocked.
    + reason: `This contact asked to cancel his subscription` (string,required)

+ Request (application/json)

    + Headers

            Authorization: {"api_key":"a5f514de-c8c8-262a-ac31-31d609f3550a","secret_key":"404b1fd6-9fc5-1533-a121-126fa6cc0c8f"}

    
+ Response 200 
        
        {
            "results": {
                "status": "success",
                "code": 0,
                "description": "operation has been success"
              },
              "data": {
                "contact_uid": "0fcc784c-7c3d-4c37-81b1-0ccde079a13e",
                "status": "inactive"
              }
        }

### ListContact [GET /SMS/ListContact]

+ Attributes
    + skip: `1` (string,optional) - Number of the page to be filtered
    + take: `25` (string,optional) - Number of records for every page
    
+ Request (application/json)

    + Headers

            Authorization: {"api_key":"a5f514de-c8c8-262a-ac31-31d609f3550a","secret_key":"404b1fd6-9fc5-1533-a121-126fa6cc0c8f"}

    
+ Response 200 
        
        {
            "data": [
                 {
                  "first_name": "test",
                  "last_name": "test last name",
                  "phone": "05412345623",
                  "status": "inactive",
                  "language_code": "he",
                  "birthday": "01/06/1990",
                  "last_log": {
                    "event_type": "in-group",
                    "reason": null,
                    "changer": "ניב",
                    "reason_content": "in to group כללי"
                  },
                  "created_at": "2021-12-27 17:52:15",
                  "uid": "0fcc784c-7c3d-4c37-81b1-0ccde079a13e",
                  "groups": [
                    {
                      "uid": "04a9c818-0f4d-4f5c-9406-eaeb3ff650b0",
                      "name": "כללי"
                    }
                  ]
                }
              ],
              "pages": 1,
              "count": 1
        }


### RemoveContactFromGroups [POST /SMS/RemoveContactFromGroups/:contact_uid]

+ Attributes
    + groups_uid: ['0a1ae3a9-1217-42f8-9f2c-b7c252ed81f0'] (array,required)

+ Request (application/json)

    + Headers

            Authorization: {"api_key":"a5f514de-c8c8-262a-ac31-31d609f3550a","secret_key":"404b1fd6-9fc5-1533-a121-126fa6cc0c8f"}

    
+ Response 200 
        
        {
            "results": {
                "status": "success",
                "code": 0,
                "description": "operation has been success"
              },
              "data": {}
        }


## SMS Groups [/SMS/Groups]

### CreateGroup [POST /SMS/CreateGroup]

+ Attributes
    + name: 'DreamVIPCard' (string,required)

+ Request (application/json)

    + Headers

            Authorization: {"api_key":"a5f514de-c8c8-262a-ac31-31d609f3550a","secret_key":"404b1fd6-9fc5-1533-a121-126fa6cc0c8f"}

    
+ Response 200 
        
        {
            "results": {
                "status": "success",
                "code": 0,
                "description": "operation has been success"
              },
              "data": {
                "group_uid": "29e70d74-edc6-4530-9daf-bd91627b66a5",
                "name": "DreamVIPCard"
              }
        }


### UpdateGroup [POST /SMS/UpdateGroup/:group_uid]

+ Attributes
    + name: 'New Name' (string,required)

+ Request (application/json)

    + Headers

            Authorization: {"api_key":"a5f514de-c8c8-262a-ac31-31d609f3550a","secret_key":"404b1fd6-9fc5-1533-a121-126fa6cc0c8f"}

    
+ Response 200 
        
        {
            "results": {
                "status": "success",
                "code": 0,
                "description": "operation has been success"
              },
              "data": {
                "group_uid": "29e70d74-edc6-4530-9daf-bd91627b66a5",
                "name": "New Name"
              }
        }


### DeleteGroup [POST /SMS/DeleteGroup/:group_uid]

+ Request (application/json)

    + Headers

            Authorization: {"api_key":"a5f514de-c8c8-262a-ac31-31d609f3550a","secret_key":"404b1fd6-9fc5-1533-a121-126fa6cc0c8f"}

    
+ Response 200 
        
        {
          "results": {
            "status": "success",
            "code": 0,
            "description": "operation has been success"
          },
          "data": {}
        }

### AddContactsToGroups [POST /SMS/AddContactsToGroups]

+ Attributes
    + groups_uid: ['0a1ae3a9-1217-42f8-9f2c-b7c252ed81f0'] (array,required)
    + contacts_uid: ['1ba77258-c98e-4a9c-ac66-55f31822befa'] (array,required)

+ Request (application/json)

    + Headers

            Authorization: {"api_key":"a5f514de-c8c8-262a-ac31-31d609f3550a","secret_key":"404b1fd6-9fc5-1533-a121-126fa6cc0c8f"}

    
+ Response 200 
        
        {
            "results": {
                "status": "success",
                "code": 0,
                "description": "operation has been success"
              },
              "data": {}
        }

### RemoveContactsFromGroup [POST /SMS/RemoveContactsFromGroup/:group_uid]

+ Attributes
    + contacts_uid: ['0a1ae3a9-1217-42f8-9f2c-b7c252ed81f0'] (array,required)

+ Request (application/json)

    + Headers

            Authorization: {"api_key":"a5f514de-c8c8-262a-ac31-31d609f3550a","secret_key":"404b1fd6-9fc5-1533-a121-126fa6cc0c8f"}

    
+ Response 200 
        
        {
            "results": {
                "status": "success",
                "code": 0,
                "description": "operation has been success"
              },
              "data": {}
        }


### ListContactsInGroup [GET /SMS/ListContactsInGroup/:group_uid]

+ Request (application/json)

    + Headers

            Authorization: {"api_key":"a5f514de-c8c8-262a-ac31-31d609f3550a","secret_key":"404b1fd6-9fc5-1533-a121-126fa6cc0c8f"}

    
+ Response 200 
        
        {
            "data": [
                {
                  "uid": "0fcc784c-7c3d-4c37-81b1-0ccde079a13e",
                  "first_name": "test",
                  "last_name": "test last name",
                  "phone": "05412345623"
                }
              ],
              "pages": 1,
              "count": 1
        }

### ListGroup [GET /SMS/ListGroup]

+ Request (application/json)

    + Headers

            Authorization: {"api_key":"a5f514de-c8c8-262a-ac31-31d609f3550a","secret_key":"404b1fd6-9fc5-1533-a121-126fa6cc0c8f"}

    
+ Response 200 
        
        {
            "data": [
                {
                  "uid": "29e70d74-edc6-4530-9daf-bd91627b66a5",
                  "name": "api group3"
                },
                {
                  "uid": "c589313c-c160-4bac-8a28-9bb3567728d3",
                  "name": "api group2"
                },
                {
                  "uid": "04a9c818-0f4d-4f5c-9406-eaeb3ff650b0",
                  "name": "כללי"
                }
              ],
              "pages": 1,
              "count": 3
        }


## SMS Messages [/SMS/Messages]

### MessagesList [GET /SMS/MessagesList]

+ Request (application/json)

    + Headers

            Authorization: {"api_key":"a5f514de-c8c8-262a-ac31-31d609f3550a","secret_key":"404b1fd6-9fc5-1533-a121-126fa6cc0c8f"}

    
+ Response 200 
        
        {
            "data": [
            {
                "date": "28/12/2021 11:53",
                "content": "בדיקה",
                "sender": "asdasd",
                "status": "sent",
                "number": "9y9g",
                "valid": true,
                "name": "asdasdasd",
                "uid": "93d7999d-76b6-41e1-bb4e-e6cdd4c4f784",
                "sent_messages_count": 1,
                "failed_messages_count": 0,
                "received_messages_count": 1,
                "type": "sms",
                "send_settings": {
                    "type": "immediate",
                    "date": "2021-12-28",
                    "hour": "11:53",
                    "trigger": null,
                    "when": null,
                    "range": null
                }
            }
        ],
        "pages": 1,
        "count": 1
        }
        

### MessageInfo [GET /SMS/MessageInfo/:sms_message_uid]

+ Request (application/json)

    + Headers

            Authorization: {"api_key":"a5f514de-c8c8-262a-ac31-31d609f3550a","secret_key":"404b1fd6-9fc5-1533-a121-126fa6cc0c8f"}

    
+ Response 200 
        
        {
        "data": [
            {
                "first_name": "test",
                "last_name": "test last name",
                "phone": "05412345671",
                "birthday": "01/05/1990",
                "content": "בדיקה",
                "status": "failed",
                "price": 0.105,
                "date": "28/12/2021 11:53",
                "sms_contact_message_uid": "9d244c34-ada5-4d32-a7a8-7e6db9ff2ecc"
            }
        ],
        "pages": 1,
        "count": 1
        }
        

### ContactMessageInfo [GET /SMS/ContactMessageInfo/:sms_contact_message_uid]

+ Request (application/json)

    + Headers

            Authorization: {"api_key":"a5f514de-c8c8-262a-ac31-31d609f3550a","secret_key":"404b1fd6-9fc5-1533-a121-126fa6cc0c8f"}

    
+ Response 200 
        
        {
            "results": {
            "status": "success",
            "code": 0,
            "description": "operation has been success"
            },
            "data": {
                "first_name": "test",
                "last_name": "test last name",
                "phone": "05412345671",
                "birthday": "01/05/1990",
                "content": "בדיקה",
                "status": "failed",
                "price": 0.105,
                "date": "28/12/2021 11:53",
                "sms_contact_message_uid": "9d244c34-ada5-4d32-a7a8-7e6db9ff2ecc",
                "sms_message_uid": "93d7999d-76b6-41e1-bb4e-e6cdd4c4f784"
            }
        }


### SendSMS [POST /SMS/SendSMS]

+ Attributes
    + name: `Test Message Number 1` (string,required) - Name of the message
    + sms_sender_uid: `a24015eb-3c21-4d4c-b385-882a97d3e5da` (string,optional) - Should be active sender name. Can be use only for SMS
    + groups_uid: [`a22015eb-1c21-2d2c-b385-662a97d3e5da`] (array,optional) - One of the parameters groups_uid, contacts_uid, phones should be send
    + contacts_uid: [`a14015eb-3c21-2d2c-b385-222a97c3e5da`] (array,optional)
    + phones: `972544546789`,`972506455314` (array,optional)
    + type: `sms` (string,required) - Possible types of messages are: 'tts' / 'sms'
    + content: `This is a test sms Im sending you!` (string,required) - Content of the SMS or TTS message
    + generate_short_links: true (boolean,optional) - If you would like we will create shortcut for all your links in your message content
    + agreement_signed: true (boolean, required) - You must approve our terms and conditions for every sending of message
    + show_unsubscribe_link: true (boolean,optional) - To show unsubscribe link at the end of the SMS message type only
    + unsubscribe_link_title: `Unsubscribe` (string,optional) - What is the word to show in the message to unsubscribe
    + callback_url: `https://www.domain.com/notificationSMS` - URL to receive SMS notifications with sending status, URL must be secure [HTTPS] and the data will be sent using POST method. SMS response can be found in the next method.
    + send_settings (object,required) - Settings of the message if should be send immediately or later
        + type:`immediate` (string,required) - Possible values are: 'immediate' / 'later'
        + hour: `16:00` (string,required)-Required if type is 'later'
        + date: `2022-02-20` (string,required)-Required if type is 'later'

+ Request (application/json)

    + Headers

            Authorization: {"api_key":"a5f514de-c8c8-262a-ac31-31d609f3550a","secret_key":"404b1fd6-9fc5-1533-a121-126fa6cc0c8f"}

    
+ Response 200 
        
        {
               "results": {
                "status": "success",
                "code": 0,
                "description": "operation has been success"
            },
            "data": {
                "sms_message_uid": "01958406-0fa3-4246-af2b-72628a8f7869"
            }
        }


### SMS Response [GET /SMS/NotificationResponse]
This is the response we will send to your notification URL

+ Response 200 
        
         {
          "first_name": "test",
          "last_name": "test last name",
          "phone": "05412345671",
          "birthday": "01/05/1990",
          "content": "בדיקה https://pps.ms/u/ZNM6X8",
          "status": "failed",
          "price": 0.105,
          "date": "28/12/2021 11:53",
          "sms_contact_message_uid": "9d244c34-ada5-4d32-a7a8-7e6db9ff2ecc",
          "sms_message_uid": "93d7999d-76b6-41e1-bb4e-e6cdd4c4f784"
        }

## Invoice+ - Documents [/books/docs]

### Create new document [POST /books/docs/new/{docType}]
+ Parameters
    + docType - Document type
        + inv_tax_receipt - Tax invoice/receipt
        + inv_tax - Tax invoice
        + inv_receipt - Receipt
        + inv_proforma - Proforma invoice
        + inv_refund - Refund
        + crt_delivery - Delivery/shipping certificate
        + crt_return - Return certificate
        + order_purchase - Order purchase certificate
        + purchase - Purchase certificate
        + dc_quote - Quote
        + inv_don_receipt - Donation receipt
        + inv_pay_request - Payment request

+ Attributes () 
    + doc_date: `2022-02-19` (string) - Document issue date. Format: YYYY-MM-DD. Defaults to current date 
    + brand_uuid: `93d7999d-76b6-41e1-bb4e-e6cdd4c4f784` (string) - If multiple brands exist, specify brand uuid to create document associated with a specific brand. If none provided, the default brand  
    + preview: false (boolean) - Get a preview of the document. No document will be generated if set to true 
    + hide_base_currency: false (boolean) - Whether or not to hide the base currency (usually ILS) in a foreign currency document. 
    + draft: false (boolean) - Create a draft document. No actual document will be generated if set to true 
    + more_info: `12345678` (string,optional) - nullable Optional identifier. Will appear at the bottom of the document
    + close_doc: `83d7999d-76b6-41e1-bb4e-e6cdd4c4f784` (string,optional) - UUID of a previously created document. If supplied, the new document will also close the document indicated by the UUID 
    + cancel_doc: `83d7999d-76b6-41e1-bb4e-e6cdd4c4f784` (string,optional) - UUID of a previously created document. If supplied, the new document will also cancel the document indicated by the UUID 
    + transaction_uuid: `83d7999d-76b6-41e1-bb4e-e6cdd4c4f784` (string,optional) - UUID of a PayPlus transaction
    + send_document_email: false (boolean) - Send email upon document creation. Will override the whatever's defined in your account
    + send_document_sms: false (boolean) - Send sms message upon document creation. Will override the whatever's defined in your account
    + callback_url: `https://www.example.com/notify_me` (string) - If valid url is specified, payplus will send a notification to the specified URL upon successful document creation
    + vatType (enum) - If omitted, configuration values will be used instead
        + `vat-type-included` - Prices assumed to include vat
        + `vat-type-not-included` - Prices assumed to exclude vat
        + `vat-type-exempt` - Vat-exempt
    + vat_percentage: 17 (number) - Vat percentage to use for calculations.  If omitted, configuration values will be used instead
    + language: `he` (enum) - Document language. If omitted, configuration values will be used instead
        + `he` - Hebrew
        + `en` - English
    + currency_code: `ILS` (string) - Main document currency. Consult the currencies dictionary entry
    + conversion_rate: 3.34 (number) - If document currency specified is not ILS, this value will be used as the conversion rate for all the prices into the base currency.
    + autocalculate_rate: false (boolean) - If the conversion rate parameter is omitted, determine conversion rate automatically
    + prevent_email: false (boolean) - If true, will not send 
    + unique_identifier (string) - Arbitrary, unique string. If supplied, the system will refuse further creation attempts if it finds a duplicate, ensuring that this value will always be unique per document.
    + customer (object,optional) - Object containing customer/recipient data
        + name: `John Doe` (string,required) - Name, to be displayed as the document recipient. Required unless existing valid customer uuid provided
        + customer_uid: `07422cef-cb67-4e86-a3a3-bb975d18f0b0` (string) - Reference code of a previously created customer. If specified, document customer information shall be taken from the customer record
        + email: `johndoe@example.com` (string) - Shall be displayed on the document. Additionally, if provided, an email message containing the original document will be dispatched to this address.
        + vat_number: `012345678` (string) - Recipient vat number/ID to be displayed on the document
        + phone: `0541234567` (string) - If specified, this number will appear on the document. Also the phone number to send an SMS message if applicable
        + city: `Tel Aviv` (string)
        + street_name: `Shenkin` (string)
        + street_number: `13` (string)
        + postal_code: `1234567` (string)
        + country_iso: `IL` (string)
        + create_customer: false (boolean) - If true, will attempt to create a new customer from the provided information. If customer with similar details already exists, it will be used instead and all missing details will be added from th
        + balance_name: `incm` (string) - Will be used as the balance name for journal exports
    + totalAmount: 50 (number) - Total sum of the document.
    + items (array)
        + (array)
            + (object)
                + name (string, required) - Item/product name
                + barcode (string)
                + is_summary_item (boolean) - Show item as a summary line
                + price (number, required) 15
                + quantity (number, required) 1
                + vat_type_code (enum) - If omitted, document level value will be used instead.
                    + `vat-type-included` - Prices assumed to include vat
                    + `vat-type-not-included` - Prices assumed to exclude vat
                    + `vat-type-exempt` - Vat-exempt
                + currency_code (string) - See dictionary entry for currencies below. If no value is supplied, either top level value or configuration based value will apply
                + conversion_rate (number) - Required if currency code is specified and is different from the base currency.
                + discount_type (enum) 
                    + percentage - parameter 'discount_value' will represent discount percentage amount
                    + amount - parameter 'discount_valuea' will represent the actual discount price
                + discount_value `15` (number) - See previous entry for more details
    + payments (array) 
        + (array)
            + (object)
                + payment_type (enum, required) - Type of the payment being submitted
                    + `credit-card` - Credit card
                    + `cash` - Cash
                    + `paypal` - Paypal
                    + `bank-transfer` - Bank transfer
                    + `payment-check` - Checking
                    + `payment-app` - Payment application
                    + `other` - Catchall - when all else fails
                    + `withholding-tax` - Withholding tax. Can only appear once and must be accompanied by some other payment type
                + `payment_date` (string) - Date in the format YYYY-MM-DD. Defaults to whatever was set for doc_date
                + amount (number, required) - Total payment amount
                + description (string) - Payment description
                + currency_code (string) - See currencies for more information
                + rate (number) `3.43` - Currency conversion rate. If foreign currency is specified, will be used to convert to 
                + transaction_type (enum) - payment type: credit-card
                    + `normal`  - Single payment
                    + `payments` - Multiple payments. If selected, parameter "payments" is required
                + payments  - Payment type: credit-card. Number of payments
                + first_payment - Payment type: credit-card. First payment amount
                + subsequent_payments - Payment type: credit-card. The amount of the subsequent payments
                + four_digits - Payment type: credit-card/ payment-app. Last four digits of the credit card number
                + card_type (enum) - payment type: credit-card
                    + mastercard
                    + `american-express`
                    + discover
                    + visa
                    + diners
                    + other
                    + jcb
                    + maestro
                + bank_number- payment type: payment-check,bank-transfer
                + branch_number- payment type: payment-check,bank-transfer
                + account_number- payment type: payment-check,bank-transfer
                + check_number- payment type: payment-check
                + payer_account
                + transaction_number - payment type: paypal
                + payment_app (enum) - payment type: payment-app
                    + `bit`
                    + `max`
                    + `apple-pay`
                    + `google-pay`
                    + `multipass`
                    + `pay-box`

+ Request (application/json)


    + Headers

            Authorization: {"api_key":"a5f514de-c8c8-262a-ac31-31d609f3550a","secret_key":"404b1fd6-9fc5-1533-a121-126fa6cc0c8f"}
    + Body
    
            {
              "status": "success",
              "details": {
                "totals": {
                  "total_payments": 5294,
                  "total_proformas": 0,
                  "total_income": 0
                },
                "numItems": 1,
                "numPages": 44,
                "totalItems": 44,
                "items": [
                  {
                    "showThisDocAsCloserCanceller": true,
                    "is_income": false,
                    "is_payment": true,
                    "number": "SCP/3042",
                    "number_series": "SCP",
                    "uuid": "dcf21005-d98a-4294-a18a-f172d565d90f",
                    "doc_date": "2023-02-13",
                    "due_date": null,
                    "entity_type_name": "inv_receipt",
                    "original_email_last_error": "",
                    "doc_amount": 100,
                    "issuing_entity_name": "Company Inc",
                    "is_draft": false,
                    "status": "open",
                    "creation_method": "site",
                    "customer": null,
                    "currency": {
                      "code": "ILS"
                    },
                    "base_doc_amount": 100,
                    "total_amount_to_pay": 100,
                    "original_doc": "https://restapi.payplus.co.il/getdoc/s/o/dcf21005-d98a-4294-a18a-f172d565d90f.pdf",
                    "original_doc_download": "https://restapi.payplus.co.il/getdoc/d/o/dcf21005-d98a-4294-a18a-f172d565d90f.pdf",
                    "true_copy_doc": "https://restapi.payplus.co.il/getdoc/s/c/dcf21005-d98a-4294-a18a-f172d565d90f.pdf",
                    "true_copy_doc_download": "https://restapi.payplus.co.il/getdoc/d/c/dcf21005-d98a-4294-a18a-f172d565d90f.pdf",
                    "brand": {
                      "name": "Company Inc"
                    },
                    "parent_docs": [],
                    "email_error": "",
                    "created_at": "2023-02-13 09:37:45",
                    "sent": 0,
                    "amount_remaining": 100,
                    "type": "inv_receipt",
                    "subject_details": {
                      "name": "John Doe",
                      "email": ""
                    },
                    "company_uid": "aa83c72d-b0df-4800-8911-d23bca326702"
                  }
                ]
              }
            }

+ Response 200 
    
        {
            "barcode": "472819632332439",
            "brand": {
                "name": "Company Name",
                "uuid": "67a8cc93-75ac-4832-8386-3eb5b24bf3d0"
            },
            "copyDocAddress": "https://restapi.payplus.co.il/getdoc/s/c/1fa79282-61d1-4898-b7b9-afa67f46d34a.pdf",
            "currency_code": "ILS",
            "customer": {
                "customer_name": "John Doe",
                "email": "johndoe@example.com",
                "phone": "123456789",
                "subject_code": "987654321",
                "uuid": "faa6280f-dba5-4889-9b15-de60e1527bdc",
                "vat_number": "1231231"
            },
            "customer_uuid": "faa6280f-dba5-4889-9b15-de60e1527bdc",
            "docUID": "1fa79282-61d1-4898-b7b9-afa67f46d34a",
            "doc_date": "2022-11-15",
            "doc_type": "inv_tax",
            "more_info": null,
            "number": "SCP/50042",
            "originalDocAddress": "https://restapi.payplus.co.il/getdoc/s/o/1fa79282-61d1-4898-b7b9-afa67f46d34a.pdf",
            "total_items_base_currency": 150,
            "validDocumentGenerated": true
        }

### Get document data [GET /books/docs/get/{uuid}]

+ Attributes () 
    + uuid: `2022-02-19` (string, required) - Requested document uuid
    
+ Request (application/json)

    + Headers

            Authorization: {"api_key":"a5f514de-c8c8-262a-ac31-31d609f3550a","secret_key":"404b1fd6-9fc5-1533-a121-126fa6cc0c8f"}
            
+ Response 200 

        {
            "status": "success",
            "details": {
                "number": "6398",
                "uuid": "e6bcc58c-58d1-4100-bb93-1437b92c7b16",
                "description": "",
                "attached_mail_content": "",
                "doc_date": "2021-03-19",
                "due_date": "2021-03-19",
                "vat_percentage": 17,
                "discount_type": null,
                "discount_value": null,
                "entity_type_name": "inv_tax",
                "items_cancelled": false,
                "payments_cancelled": false,
                "original_email_last_error": null,
                "conversion_rate": null,
                "doc_amount": 502,
                "without_digital_signature": false,
                "pdf_file_address": "/companies/undefined/docs/e6bcc58c-58d1-4100-bb93-1437b92c7b16.bin",
                "display_items_with_vat": false,
                "is_draft": false,
                "self": false,
                "generation_status": "generated",
                "status": "open",
                "type": "inv_tax",
                "baseCurrency": "ILS",
                "docCurrency": "ILS",
                "language": "he",
                "items": [
                    {
                        "uuid": "ffbe8950-f962-4096-b121-8176d612efae",
                        "barcode": null,
                        "quantity": "1.00",
                        "product_invoice_extra_details": null,
                        "price": 502,
                        "amount_with_vat": 502,
                        "amount_pre_vat": 4.2906,
                        "amount_no_vat": 0,
                        "vat_amount": 72.94,
                        "amount_pay": 502,
                        "quantity_price": 429.06,
                        "quantity_price_including_vat": 502,
                        "name": "ציפים",
                        "currency_code": "ILS",
                        "rate": null,
                        "discount_type": null,
                        "discount_value": null,
                        "pos": 0,
                        "vat": "vat-incl",
                        "product": null,
                        "isEdit": false
                    }
                ],
                "payments": [],
                "customer": {
                    "name": "baktum",
                    "phone": "0541234567",
                    "email": "johndoe@example.com",
                    "vat_number": null,
                    "paying_vat": null,
                    "city": null,
                    "street_name": null,
                    "street_number": null,
                    "postal_code": null,
                    "country_iso": null
                },
                "vat": "vat-incl",
                "amountToClose": 502,
                "amountToCancel": 502,
                "html": null,
                "original_doc": "https://restapi.payplus.co.il/getdoc/s/o/e7c4db75-fc05-4f46-af2b-407fe3911253.pdf",
                "true_copy_doc": "https://restapi.payplus.co.il"
            }
        }

### Search documents [GET /books/docs/list?skip={skip}&take={take}&search={search}&currency_code={currency_code}&number={number}&customer={customer}&fromDate={fromDate}&toDate={toDate}&dateType={dateType}&brand_uuid={brand_uuid}&types[]={types}&minAmount={minAmount}&maxAmount={maxAmount}&paymentTypes[]={paymentTypes}&statuses[]={statuses}&transaction_uuid={transaction_uuid}]

+ Parameters
    + skip: 0 (string,optional) - Optional query variable , Starting record index. In this example, we begin from the first record
    + take: 5 (string,required) - Optional query variable , Works in conjunction with "skip" and is required if "skip" is specified. In this case, takes 5 records
    + search: `john doe` (string,optional) - Search terms
    + number: `ABC1234` (string, optional) - Document number
    + transaction_uuid: `83d7999d-76b6-41e1-bb4e-e6cdd4c4f784` (string,optional) - UUID of a PayPlus transaction
    + currency_code: `ILS` (string, optional) - Document currency
    + customer: `a5f514de-c8c8-262a-ac31-31d609f3550a` (string, optional) - Search by customer uuid
    + fromDate: `2022-01-01` (string, optional) - Date search. Ealiest date (YYYY-MM-DD)
    + toDate: `2022-01-01` (string, optional) - Date search. Latest date (YYYY-MM-DD)
    + dateType (enum, optional) - Date type of the parameters fromDate/Todate 
        + doc_date - parameters fromDate/toDate will refer to the document date. This is default
        + creation_date - parameters fromDate/toDate will refer to the date on which the document was generated
    + brand_uuid:  `a5f514de-c8c8-262a-ac31-31d609f3550a` (string, optional) - Show documents for a specific brand
    + types (array, optional) - Array of document types
        + (string)
            + `inv_tax_receipt` - Tax invoice/receipt
            + `inv_tax` - Tax invoice
            + `inv_receipt` - Receipt
            + `inv_proforma` - Proforma invoice
            + `inv_refund` - Refund
            + `crt_delivery` - Delivery/shipping certificate
            + `crt_return` - Return certificate
            + `order_purchase` - Order purchase certificate
            + `purchase` - Purchase certificate
            + `dc_quote` - Quote
            + `inv_don_receipt` - Donation receipt
            + `inv_pay_request` - Payment request
    + minAmount: `100` (number, optional) - Minimum total document amount
    + maxAmount: `10000` (number, optional) - Maximum total document amount
    + paymentTypes (array, optional) - Filter by payment type(s)
        + (string)
            + `credit-card`
            + `cash`
            + `paypal`
            + `bank-transfer`
            + `payment-check`
            + `other`
            + `withholding-tax`
            + `payment-app-bit`
            + `payment-app-max`
            + `payment-app-apple-pay`
            + `payment-app-google-pay`
            + `payment-app-multipass`
            + `payment-app-pay-box`
    + statuses (array, optional) - Search by document status(es)
        + (string)
            + `CLOSED`
            + `OPEN`
            + `CANCELLED`
            
    
+ Request (application/json)
    + Headers

            Authorization: {"api_key":"a5f514de-c8c8-262a-ac31-31d609f3550a","secret_key":"404b1fd6-9fc5-1533-a121-126fa6cc0c8f"}

        
+ Response 200 

        {
            "status": "success",
            "details": {
                "numItems": 1,
                "numPages": 1,
                "totalItems": 1,
                "items": [
                    {
                        "number": "6399",
                        "uuid": "39c78b5c-47a0-44fc-acea-38f785292725",
                        "description": "",
                        "attached_mail_content": "",
                        "doc_date": "2021-03-19",
                        "due_date": "2021-03-19",
                        "vat_percentage": 17,
                        "discount_type": null,
                        "discount_value": null,
                        "entity_type_name": "inv_tax",
                        "original_email_last_error": null,
                        "doc_amount": 502,
                        "is_draft": false,
                        "self": false,
                        "status": "open",
                        "docs_customer": null,
                        "originalEmail": null,
                        "currency": {
                            "code": "ILS"
                        },
                        "actions": [
                            {
                                "action": "closeDoc",
                                "subject": [
                                    "inv_receipt"
                                ]
                            },
                            {
                                "action": "cancelDoc",
                                "subject": [
                                    "inv_refund"
                                ]
                            }
                        ],
                        "total_amount_to_pay": 502,
                        "original_doc": "//rest.payplus.xx/api/books/copy/original-doc/39c78b5c-47a0-44fc-acea-38f785292725?company_uid=aa83c72d-b0df-4800-8911-d23bca326702&save=1",
                        "true_copy_doc": "//rest.payplus.xx/api/books/copy/true-copy-doc/39c78b5c-47a0-44fc-acea-38f785292725?company_uid=aa83c72d-b0df-4800-8911-d23bca326702&save=1",
                        "parent_docs": [],
                        "email_error": null,
                        "sent": 0,
                        "textualStatus": "open",
                        "type": "inv_tax",
                        "subject_details": {
                            "name": "John",
                            "phone": "0542345678",
                            "email": "johndoe@example.com",
                            "vat_number": null,
                            "paying_vat": null,
                            "city": null,
                            "street_name": null,
                            "street_number": null,
                            "postal_code": null,
                            "country_iso": null
                        }
                    }
                ]
            }
        }
        
## Invoice+ - Expenses [/books/expenses]

### Submit new expense record/file [POST /expenses]

+ Attributes () 
    + supplier_vat_id: 123456789 (number) - Supplier system id number
    + number: 12345 (number, required) - Expense document number
    + doc_date: `2022-01-01` (string, required) - Document date
    + subcategory_id: 5554 (number, required) - Document subcategory
    + amount: 150 (number, required) - Document total amount 
    + amount_includes_vat: false (boolean) - Whether or not the indicated amount includes vat
    + vat_percentage: 11111 (number) - Vat percentage
    + description: `Some text` (string, required)
    + currency_code: `ILS` (string, required) - Document currency code. See dictionary definition of currencies
    + supplier_name: `John Doe` (string)
    + supplier_uid: `sdfsdf` (string) - UID of the existing supplier. If valid UID is submitted, all the supplier information shall be taken from it
    + doc_file - PDF or other text file for the document
    
+ Request (multipart/form-data)


    + Headers (application/json)

            Authorization: {"api_key":"a5f514de-c8c8-262a-ac31-31d609f3550a","secret_key":"404b1fd6-9fc5-1533-a121-126fa6cc0c8f"}
    + Body
    
            supplier_vat_id=15
            supplier_name='John Doe'
            number=15555
            doc_date=2022-01-01
            amount=150
            amount_includes_vat=true
            vat_percentage=17
            description='Some text here'
    
+ Response 200 
    
        {
            "status": "success",
            "details": {
                "uuid": "17d4b6f6-388e-45be-bd81-388818a20a64",
                "supplier_uuid": null
            }
        }

### Update expense record [PUT /books/expenses/{uuid}]

+ Parameters
    + uuid: `a5f514de-c8c8-262a-ac31-31d609f3550a` (string, required) - Requested document uuid
    
    
+ Attributes () 
    + supplier_vat_id: 123456789 (number) - Supplier system id number
    + number: 12345 (number) - Expense document number
    + doc_date: `2022-01-01` (string) - Document date
    + subcategory_id: 5554 (number) - Document subcategory
    + amount: 150 (number) - Document total amount 
    + amount_includes_vat: false (boolean) - Whether or not the indicated amount includes vat
    + vat_percentage: 11111 (number) - Vat percentage
    + description: `Some text` (string)
    + currency_code: `ILS` (string) - Document currency code. See dictionary definition of currencies
    + supplier_name: `John Doe` (string)
    + supplier_uid: `sdfsdf` (string) - UID of the existing supplier. If valid UID is submitted, all the supplier information shall be taken from it
    + doc_file - PDF or other text file for the document
    + delete_file: false  (boolean) - If true, will delete the document file
    
+ Request (multipart/form-data)


    + Headers (application/json)

            Authorization: {"api_key":"a5f514de-c8c8-262a-ac31-31d609f3550a","secret_key":"404b1fd6-9fc5-1533-a121-126fa6cc0c8f"}
    + Body
    
            supplier_vat_id=15
            supplier_name='John Doe'
            number=15555
            doc_date=2022-01-01
            amount=150
            amount_includes_vat=true
            vat_percentage=17
            description='Some text here'
    
+ Response 200 
    
        {
            "status": "success",
            "details": {
                "uuid": "17d4b6f6-388e-45be-bd81-388818a20a64",
                "supplier_uuid": null
            }
        }

### Get expense record data [GET /books/expenses/{uuid}]

+ Parameters
    + uuid: `a5f514de-c8c8-262a-ac31-31d609f3550a` (string, required) - Requested document uuid
    
+ Request (application/json)

    + Headers

            Authorization: {"api_key":"a5f514de-c8c8-262a-ac31-31d609f3550a","secret_key":"404b1fd6-9fc5-1533-a121-126fa6cc0c8f"}
            
+ Response 200 

        {
            "status": "success",
            "details": {
                "uuid": "c0c91745-3131-4196-afa5-bc6f5971016f",
                "supplier_name": null,
                "supplier_vat_id": null,
                "number": "122313",
                "doc_date": "2021-11-27",
                "amount": 15000,
                "vat_percentage": null,
                "amount_includes_vat": null,
                "deductible_vat_percentage": 0,
                "deductible_income_tax_percentage": 0,
                "description": "Some description here",
                "created_at": "2022-03-20T10:16:37.000Z",
                "updated_at": "2022-03-20T10:16:37.000Z",
                "currency_code": "ILS",
                "has_file": false,
                "doc_file": null,
                "subcategory": {
                    "id": "18",
                    "name": "Envelopes and shit"
                },
                "category": {
                    "id": "6",
                    "name": "Postal"
                }
            }
        }
        
### Delete expense record [DELETE /books/expenses/{uuid}]

+ Parameters
    + uuid: `a5f514de-c8c8-262a-ac31-31d609f3550a` (string, required) - Requested document uuid
    
+ Request (application/json)

    + Headers

            Authorization: {"api_key":"a5f514de-c8c8-262a-ac31-31d609f3550a","secret_key":"404b1fd6-9fc5-1533-a121-126fa6cc0c8f"}
            
+ Response 200 

        {
            "status": "success",
            "details": {}
        }

### Search expense records data [GET /books/expenses?{skip}?{take}?{search}]

+ Parameters
    + skip: 0 (string,optional) - Optional query variable , Starting record index. In this example, we begin from the first record
    + take: 5 (string,optional) - Optional query variable , Works in conjunction with "skip" and is required if "skip" is specified. In this case, takes 5 records
    + search: `john doe` (string,optional) - Search terms

    
+ Request (application/json)

    + Headers

            Authorization: {"api_key":"a5f514de-c8c8-262a-ac31-31d609f3550a","secret_key":"404b1fd6-9fc5-1533-a121-126fa6cc0c8f"}
            
+ Response 200 

        {
            "status": "success",
            "details": {
                "uuid": "c0c91745-3131-4196-afa5-bc6f5971016f",
                "supplier_name": null,
                "supplier_vat_id": null,
                "number": "122313",
                "doc_date": "2021-11-27",
                "amount": 15000,
                "vat_percentage": null,
                "amount_includes_vat": null,
                "deductible_vat_percentage": 0,
                "deductible_income_tax_percentage": 0,
                "description": "Some description here",
                "created_at": "2022-03-20T10:16:37.000Z",
                "updated_at": "2022-03-20T10:16:37.000Z",
                "currency_code": "ILS",
                "has_file": false,
                "doc_file": null,
                "subcategory": {
                    "id": "18",
                    "name": "Envelopes and shit"
                },
                "category": {
                    "id": "6",
                    "name": "Postal"
                }
            }
        }
        
## Invoice+ - Customers [/books/customers]

### Create a new customer [POST /books/customers]

+ Attributes () 
    + name: `John Doe` (string, required) - Customer name
    + vat_number: `123456789` (string) - Customer vat number/ID
    + country_iso: `IL` (string) - Country code
    + city: `Tel Aviv` (string)
    + street_name: `Shenkin` (string)
    + street_number: `13` (number)
    + phone: `0541234567` (string)
    + email: `johndoe@example.com` (string)
    + paying_vat: false (boolean)
    
+ Request (application/json)


    + Headers 

            Authorization: {"api_key":"a5f514de-c8c8-262a-ac31-31d609f3550a","secret_key":"404b1fd6-9fc5-1533-a121-126fa6cc0c8f"}
    + Body

            {
                "name": "John Doe",
                "vat_number": "123456789",
                "country_iso:": "IL",
                "city": "Tel Aviv",
                "street_name": "Shenkin",
                "street_number": "656",
                "phone": "0541234567",
                "email": "johndoe@example.com",
                "paying_vat": true
            }
    
+ Response 200 

        {
            "status": "success",
            "details": {
                "uuid": "97ae8e6e-d10f-4d1c-84b7-8d0f1004764c"
            }
        }
        
### Update customer information [PUT /books/customers/{uuid}]

+ Parameters
    + uuid: `a5f514de-c8c8-262a-ac31-31d609f3550a` (string, required) - Requested customer uuid
    
+ Attributes () 
    + name: `John Doe` (string) - Customer name
    + vat_number: `123456789` (string) - Customer vat number/ID
    + country_iso: `IL` (string) - Country code
    + city: `Tel Aviv` (string)
    + street_name: `Shenkin` (string)
    + street_number: `13` (number)
    + phone: `0541234567` (string)
    + email: `johndoe@example.com` (string)
    + paying_vat: false (boolean)
    
+ Request (application/json)


    + Headers 

            Authorization: {"api_key":"a5f514de-c8c8-262a-ac31-31d609f3550a","secret_key":"404b1fd6-9fc5-1533-a121-126fa6cc0c8f"}
    + Body

            {
                "name": "John Doe",
                "vat_number": "123456789",
                "country_iso:": "IL",
                "city": "Tel Aviv",
                "street_name": "Shenkin",
                "street_number": "13",
                "phone": "0541234567",
                "email": "johndoe@example.com",
                "paying_vat": true
            }
    
+ Response 200 

        {
            "status": "success",
            "details": {
                "uuid": "97ae8e6e-d10f-4d1c-84b7-8d0f1004764c"
            }
        }
        
### Get customer data [GET /books/customers/{uuid}]

+ Parameters
    + uuid: `a5f514de-c8c8-262a-ac31-31d609f3550a` (string, required) - Requested customer uuid
    
+ Request (application/json)

    + Headers

            Authorization: {"api_key":"a5f514de-c8c8-262a-ac31-31d609f3550a","secret_key":"404b1fd6-9fc5-1533-a121-126fa6cc0c8f"}
            
+ Response 200 

        {
            "status": "success",
            "details": {
                "name": "John Doe",
                "phone": "0541234567",
                "email": "johndoe@example.com",
                "vat_number": "123456789",
                "paying_vat": true,
                "city": "Haifa",
                "street_name": "Green",
                "street_number": "656",
                "postal_code": null,
                "country_iso": "IL",
                "uuid": "97ae8e6e-d10f-4d1c-84b7-8d0f1004764c",
                "docs": []
            }
        }
        
### Delete customer [DELETE /books/customers/{uuid}]

+ Parameters
    + uuid: `a5f514de-c8c8-262a-ac31-31d609f3550a` (string, required) - Customer uuid
    
+ Request (application/json)

    + Headers

            Authorization: {"api_key":"a5f514de-c8c8-262a-ac31-31d609f3550a","secret_key":"404b1fd6-9fc5-1533-a121-126fa6cc0c8f"}
            
+ Response 200 

        {
            "status": "success",
            "details": {}
        }
        
## Invoice+ - Misc [/books/misc]
        
### Get document types [GET /books/doc_types/?{language_code}]

+ Parameters
    + language_code: `he` (string, optional) - Preferred response language
    
+ Request (application/json)

    + Headers

            Authorization: {"api_key":"a5f514de-c8c8-262a-ac31-31d609f3550a","secret_key":"404b1fd6-9fc5-1533-a121-126fa6cc0c8f"}
            
+ Response 200 

        [
            {
                "code": "inv_proforma",
                "type_code": 300
            },
            {
                "code": "inv_tax",
                "type_code": 305
            },
            {
                "code": "inv_receipt",
                "type_code": 400
            },
            {
                "code": "inv_tax_receipt",
                "type_code": 320
            },
            {
                "code": "inv_refund",
                "type_code": 330
            },
            {
                "code": "crt_delivery",
                "type_code": 200
            },
            {
                "code": "crt_return",
                "type_code": 210
            },
            {
                "code": "order_purchase",
                "type_code": 500
            },
            {
                "code": "purchase",
                "type_code": 100
            }
        ]

## Dictionary [/TerminalTypes]

        
### TerminalTypes [POST]


+ Request (application/json)

    + Headers

            Authorization: {"api_key":"a5f514de-c8c8-262a-ac31-31d609f3550a","secret_key":"404b1fd6-9fc5-1533-a121-126fa6cc0c8f"}


    
+ Response 200 
        
        {
            "TerminalTypes": [
                {
                    "id": 1,
                    "name": "PAYPLUS"
                },
                {
                    "id": 2,
                    "name": "SHVA"
                },
                {
                    "id": 3,
                    "name": "UPAY"
                },
                {
                    "id": 4,
                    "name": "GAMA"
                },
                {
                    "id": 5,
                    "name": "ISRA360"
                },
                {
                    "id": 6,
                    "name": "SHVA_EMV"
                }
            ]
        }
        

### MyCashier [GET /MyCashier]

+ Request (application/json)

    + Headers

            Authorization: {"api_key":"a5f514de-c8c8-262a-ac31-31d609f3550a","secret_key":"404b1fd6-9fc5-1533-a121-126fa6cc0c8f"}
    
+ Response 200 
        
        [
            {
                "uuid": "0863cc9e-54cc-4ebc-aa5d-01925bbf86f5",
                "name": "סניף ת״א",
                "number": 1,
                "company_terminal_uid": "1"
            },
            {
                "uuid": "283cbe0e-440b-41c3-b90c-8f2a86ffbafd",
                "name": "סניף ראשל״צ",
                "number": 2,
                "company_terminal_id": "2"
            }
        ]

### ClearingCompanies [GET /ClearingCompanies]

+ Request (application/json)

    + Headers

            Authorization: {"api_key":"a5f514de-c8c8-262a-ac31-31d609f3550a","secret_key":"404b1fd6-9fc5-1533-a121-126fa6cc0c8f"}

    
+ Response 200 
        
        {
            "clearing": [
                {
                    "id": 1,
                    "code": 0,
                    "name": "not recognized"
                },
                {
                    "id": 2,
                    "code": 1,
                    "name": "isracard"
                },
                {
                    "id": 3,
                    "code": 2,
                    "name": "visacal"
                },
                {
                    "id": 4,
                    "code": 3,
                    "name": "dinners"
                },
                {
                    "id": 6,
                    "code": 6,
                    "name": "MAX"
                },
                {
                    "id": 5,
                    "code": 4,
                    "name": "amex"
                }
            ]
        }
        

### IssuersCompanies [GET /IssuersCompanies]

+ Request (application/json)

    + Headers

            Authorization: {"api_key":"a5f514de-c8c8-262a-ac31-31d609f3550a","secret_key":"404b1fd6-9fc5-1533-a121-126fa6cc0c8f"}

    
+ Response 200 
        
        {
            "isuuer": [
                {
                    "id": 1,
                    "code": 1,
                    "name": "isracard"
                },
                {
                    "id": 2,
                    "code": 2,
                    "name": "visacal"
                },
                {
                    "id": 3,
                    "code": 3,
                    "name": "dinners"
                },
                {
                    "id": 5,
                    "code": 5,
                    "name": "jcb"
                },
                {
                    "id": 6,
                    "code": 6,
                    "name": "MAX"
                },
                {
                    "id": 4,
                    "code": 4,
                    "name": "amex"
                },
                {
                    "id": 7,
                    "code": 0,
                    "name": "foreign-card"
                }
            ]
        }

### MyTerminals [GET /MyTerminals]

+ Request (application/json)

    + Headers

            Authorization: {"api_key":"a5f514de-c8c8-262a-ac31-31d609f3550a","secret_key":"404b1fd6-9fc5-1533-a121-126fa6cc0c8f"}
    
+ Response 200 
        
        [
            {
                "uuid": "55b1f178-6467-4cb2-8e37-ef60b15bdf9d",
                "terminal_type_id": 2,
                "name_terminal": "NEWTerminalShva",
                "status": true,
                "merchant_number": "0963595010"
            }
        ]



        
        
### Currencies [GET /Currencies]

+ Request (application/json)

    + Headers

            Authorization: {"api_key":"a5f514de-c8c8-262a-ac31-31d609f3550a","secret_key":"404b1fd6-9fc5-1533-a121-126fa6cc0c8f"}

    
+ Response 200 
        
        [
            {
                "id": "1",
                "sign": "₪",
                "code": "ILS",
                "name": "israeli-shekel",
                "valid": true
            },
            {
                "id": "2",
                "sign": "$",
                "code": "USD",
                "name": "united-states-dollar",
                "valid": true
            },
            {
                "id": "4",
                "sign": "£",
                "code": "GBP",
                "name": "pound-sterling",
                "valid": true
            },
            {
                "id": "5",
                "sign": "¥",
                "code": "JPY",
                "name": "japanese-yen",
                "valid": false
            },
            {
                "id": "3",
                "sign": "€",
                "code": "EUR",
                "name": "euro",
                "valid": true
            },
            {
                "id": "6",
                "sign": "$",
                "code": "AUD",
                "name": "australian-dollar",
                "valid": false
            },
            {
                "id": "7",
                "sign": "$",
                "code": "CAD",
                "name": "canadian-dollar",
                "valid": false
            },
            {
                "id": "8",
                "sign": "kr",
                "code": "DKK",
                "name": "danish-krone",
                "valid": false
            },
            {
                "id": "9",
                "sign": "kr",
                "code": "NOK",
                "name": "norwegian-krone",
                "valid": false
            },
            {
                "id": "10",
                "sign": "R",
                "code": "ZAR",
                "name": "south-african-rand",
                "valid": false
            },
            {
                "id": "11",
                "sign": "kr",
                "code": "SEK",
                "name": "swedish-krona",
                "valid": false
            },
            {
                "id": "12",
                "sign": "CHF",
                "code": "CHF",
                "name": "swiss-franc",
                "valid": false
            },
            {
                "id": "13",
                "sign": "د.ا",
                "code": "JOD",
                "name": "jordanian-dinar",
                "valid": false
            },
            {
                "id": "14",
                "sign": "ل.ل.‎",
                "code": "LBP",
                "name": "lebanese-pound",
                "valid": false
            },
            {
                "id": "15",
                "sign": "ج.م",
                "code": "EGP",
                "name": "egyptian-pound",
                "valid": false
            }
        ]


### Alternative Methods List [GET /AlternativeMethodsList]

+ Request (application/json)

    + Headers

            Authorization: {"api_key":"a5f514de-c8c8-262a-ac31-31d609f3550a","secret_key":"404b1fd6-9fc5-1533-a121-126fa6cc0c8f"}

    
+ Response 200 
        
        [
            {
                "key": "1",
                "name": "credit-card"
            },
            {
                "key": "3",
                "name": "bit"
            },
            {
                "key": "4",
                "name": "buyme"
            },
            {
                "key": "6",
                "name": "apple-pay"
            },
            {
                "key": "10",
                "name": "google-pay"
            }
        ]

### Error Codes [GET /ErrorCodes/{?terminal_uid}]


+ Parameters 
    + terminal_uid: `e1396310-e3f8-461f-b80a-55b199211359` (string,required) - Required Query variable.
 
+ Request (application/json)

    + Headers

            Authorization: {"api_key":"a5f514de-c8c8-262a-ac31-31d609f3550a","secret_key":"404b1fd6-9fc5-1533-a121-126fa6cc0c8f"}

    
+ Response 200 
        
        {
            "errorsCodes": [
                {
                    "status_code": "000",
                    "language_code": "he",
                    "translation": "הצלחה"
                },
                {
                    "status_code": "003",
                    "language_code": "he",
                    "translation": "התקשר לחברת האשראי"
                },
                {
                    "status_code": "107",
                    "language_code": "he",
                    "translation": "סכום העסקה גדול מידי – חלק למספר העסקאות."
                },
                {
                    "status_code": "138",
                    "language_code": "he",
                    "translation": "כרטיס לא רשאי לבצע עסקאות בתשלומים על פי רשימת כרטיסים תקפים של ישראכרט."
                },
                {
                    "status_code": "250",
                    "language_code": "he",
                    "translation": "בעיית זיהוי (שם משתמש,סיסמא,מספר מסוף לא תקינים)"
                }
            ]
        }

### Brands List [GET /BrandsList]

+ Request (application/json)

    + Headers

            Authorization: {"api_key":"a5f514de-c8c8-262a-ac31-31d609f3550a","secret_key":"404b1fd6-9fc5-1533-a121-126fa6cc0c8f"}

    
+ Response 200 
        
        {
            "transactionsCardsBrands": [
                {
                    "id": 1,
                    "code": 0,
                    "type": "shva",
                    "name": "pl"
                },
                {
                    "id": 2,
                    "code": 1,
                    "type": "shva",
                    "name": "mastercard"
                },
                {
                    "id": 3,
                    "code": 2,
                    "type": "shva",
                    "name": "visa"
                },
                {
                    "id": 4,
                    "code": 3,
                    "type": "shva",
                    "name": "maestro"
                },
                {
                    "id": 5,
                    "code": 5,
                    "type": "shva",
                    "name": "isracard"
                },
                {
                    "id": 6,
                    "code": 0,
                    "type": "shvaEMV",
                    "name": "pl"
                },
                {
                    "id": 7,
                    "code": 1,
                    "type": "shvaEMV",
                    "name": "mastercard"
                },
                {
                    "id": 8,
                    "code": 2,
                    "type": "shvaEMV",
                    "name": "visa"
                },
                {
                    "id": 9,
                    "code": 3,
                    "type": "shvaEMV",
                    "name": "dinners"
                },
                {
                    "id": 10,
                    "code": 4,
                    "type": "shvaEMV",
                    "name": "amex"
                },
                {
                    "id": 11,
                    "code": 5,
                    "type": "shvaEMV",
                    "name": "isracard"
                },
                {
                    "id": 12,
                    "code": 6,
                    "type": "shvaEMV",
                    "name": "JCB"
                },
                {
                    "id": 13,
                    "code": 7,
                    "type": "shvaEMV",
                    "name": "discover"
                },
                {
                    "id": 14,
                    "code": 8,
                    "type": "shvaEMV",
                    "name": "maestro"
                }
            ]
        }

### Banks List [GET /Banks/List]

+ Request (application/json)

    + Headers

            Authorization: {"api_key":"a5f514de-c8c8-262a-ac31-31d609f3550a","secret_key":"404b1fd6-9fc5-1533-a121-126fa6cc0c8f"}

    
+ Response 200 
        
        {
          "results": {
            "status": "success",
            "code": 0,
            "description": "operation has been success"
          },
          "data": [
            {
              "bank_code": 13,
              "bank_name": "13001-בנק אגוד לישראל בע\"מ"
            }
         ]
        }


### Bank Branches List [GET /Banks/BranchesList]

+ Request (application/json)

    + Headers

            Authorization: {"api_key":"a5f514de-c8c8-262a-ac31-31d609f3550a","secret_key":"404b1fd6-9fc5-1533-a121-126fa6cc0c8f"}

    
+ Response 200 
        
        {
          "results": {
            "status": "success",
            "code": 0,
            "description": "operation has been success"
          },
          "data": [
            {
              "bank_code": 13,
              "bank_name": "13001-בנק אגוד לישראל בע\"מ"
            }
         ]
        }
        